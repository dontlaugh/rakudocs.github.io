//DO NOT EDIT generated by /home/jmerelo/Code/forks/perl6/doc/htmlify.p6:834
var current_search = "";

$(function(){
  $.widget( "custom.catcomplete", $.ui.autocomplete, {
    _create: function() {
      this._super();
      this.widget().menu( "option", "items", "> :not(.ui-autocomplete-category)" );
    },
    _renderItem: function( ul, item) {
        var regex = new RegExp('('
            + current_search.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&')
            + ')', 'ig');
        var text = item.label.replace(regex, '<b>$1</b>');
        return $( "<li>" )
            .append( $( "<div>" ).html(text) )
            .appendTo( ul );
    },
    _renderMenu: function( ul, items ) {
      var that = this,
      currentCategory = "";
      function sortBy(a, b) {
        // We want to place 5to6 docs to the end of the list.
        // See if either a or b are in 5to6 category.
        var isp5a = false, isp5b = false;
        if ( a.category.substr(0,4) == '5to6' ) { isp5a = true; }
        if ( b.category.substr(0,4) == '5to6' ) { isp5b = true; }

        // If one of the categories is a 5to6 but other isn't,
        // move 5to6 to be last
        if ( isp5a  && !isp5b ) {return  1}
        if ( !isp5a && isp5b  ) {return -1}

        // Sort by category alphabetically; 5to6 items would both have
        // the same category if we reached this point and category sort
        // will happen only on non-5to6 items
        var a_cat = a.category.toLowerCase();
        var b_cat = b.category.toLowerCase();
        if ( a_cat < b_cat ) {return -1}
        if ( a_cat > b_cat ) {return  1}

        // We reach this point when categories are the same; so
        // we sort items by value

        var a_val = a.value.toLowerCase();
        var b_val = b.value.toLowerCase();

        // exact matches preferred
        if ( a_val == current_search) {return -1}
        if ( b_val == current_search) {return  1}

        var a_sw = a_val.startsWith(current_search);
        var b_sw = b_val.startsWith(current_search);
        // initial matches preferred
        if (a_sw && !b_sw) { return -1}
        if (b_sw && !a_sw) { return  1}

        // default
        if ( a_val < b_val ) {return -1}
        if ( a_val > b_val ) {return  1}

        return 0;
      }
      var sortedItems = items.sort(sortBy);
      var keywords = $("#query").val();
      sortedItems.push({
          category: 'Site Search',
          label: "Search the entire site for " + keywords,
          value: keywords,
          url: siteSearchUrl( keywords )
      });
      $.each( sortedItems, function( index, item ) {
        var li;
        if ( item.category != currentCategory ) {
          ul.append( "<li class='ui-autocomplete-category'>" + item.category + "</li>" );
          currentCategory = item.category;
        }
        li = that._renderItemData( ul, item );
        if ( item.category ) {
          li.attr( "aria-label", item.category + " : " + item.label );
        }
      });
    }
  });
  $("#query").attr('placeholder', 'üîç').catcomplete({
      response: function( e, ui ) {
        if ( ! ui.content.length ) {
            $('#search').addClass('not-found')
                .find('#try-web-search').attr(
                    'href', siteSearchUrl( $("#query").val() )
                );
        }
        else {
            $('#search').removeClass('not-found')
        }
      },
      open: function() {
        var ui_el = $('.ui-autocomplete');
        if ( ui_el.offset().left < 0 ) {
            ui_el.css({left: 0})
        }
      },
      position: { my: "right top", at: "right bottom", of: "#search div" },
      source: function(request, response) {
          var items = [
              {
                  category: "Syntax",
                  value: "# single-line comment",
                  url: "/language/syntax#Single-line_comments"
              }, {
                  category: "Syntax",
                  value: "#` multi-line comment",
                  url: "/language/syntax#Multi-line_/_embedded_comments"
              }, {
                  category: "Signature",
                  value: ";; (long name)",
                  url: "/type/Signature#index-entry-Long_Names"
              }, { category: "Programs", value: "Debugging",
                    url: " /programs/01-debugging" }
                  ,
{ category: "Programs", value: "Reading the docs",
                    url: " /programs/02-reading-docs" }
                  ,
{ category: "Programs", value: "Shell environment variables used by Perl¬†6",
                    url: " /programs/03-environment-variables" }
                  ,
{ category: "Reference", value: " **@ (parameter)",
                    url: " /type/Signature#index-entry-parameter__%2A%2A%40-Unflattened_slurpy" }
                  ,
{ category: "Reference", value: " . (regex)",
                    url: " /language/regexes#index-entry-regex__.-Wildcards" }
                  ,
{ category: "Reference", value: " <!|w> (regex)",
                    url: " /language/regexes#index-entry-regex__%3C%7Cw%3E-regex__%3C%21%7Cw%3E-Word_boundary" }
                  ,
{ category: "Reference", value: " << (regex)",
                    url: " /language/regexes#index-entry-regex__%3C%3C-_regex__%3E%3E-_regex__%C2%AB-_regex__%C2%BB" }
                  ,
{ category: "Reference", value: " <|w> (regex)",
                    url: " /language/regexes#index-entry-regex__%3C%7Cw%3E-regex__%3C%21%7Cw%3E-Word_boundary" }
                  ,
{ category: "Reference", value: " >> ( regex)",
                    url: " /language/regexes#index-entry-regex__%3C%3C-_regex__%3E%3E-_regex__%C2%AB-_regex__%C2%BB" }
                  ,
{ category: "Reference", value: " BEGIN (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__BEGIN-BEGIN" }
                  ,
{ category: "Reference", value: " CATCH (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__CATCH-CATCH" }
                  ,
{ category: "Reference", value: " CHECK (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__CHECK-CHECK" }
                  ,
{ category: "Reference", value: " CLOSE (Asynchronous Phasers)",
                    url: " /language/phasers#index-entry-Asynchronous_Phasers__CLOSE-CLOSE" }
                  ,
{ category: "Reference", value: " COMPOSE (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__COMPOSE-COMPOSE" }
                  ,
{ category: "Reference", value: " CONTROL (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__CONTROL-CONTROL" }
                  ,
{ category: "Reference", value: " DOC (Asynchronous Phasers)",
                    url: " /language/phasers#index-entry-Asynchronous_Phasers__DOC-DOC" }
                  ,
{ category: "Reference", value: " END (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__END-END" }
                  ,
{ category: "Reference", value: " ENTER (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__ENTER-ENTER" }
                  ,
{ category: "Reference", value: " Enums",
                    url: " /language/typesystem#index-entry-Enumeration-_Enums-_enum" }
                  ,
{ category: "Reference", value: " FIRST (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__FIRST-FIRST" }
                  ,
{ category: "Reference", value: " INIT (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__INIT-INIT" }
                  ,
{ category: "Reference", value: " KEEP (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__KEEP-KEEP" }
                  ,
{ category: "Reference", value: " LAST (Asynchronous Phasers)",
                    url: " /language/phasers#index-entry-Asynchronous_Phasers__LAST-LAST" }
                  ,
{ category: "Reference", value: " LAST (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__LAST-LAST" }
                  ,
{ category: "Reference", value: " LEAVE (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__LEAVE-LEAVE" }
                  ,
{ category: "Reference", value: " NEXT (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__NEXT-NEXT" }
                  ,
{ category: "Reference", value: " Named captures (regex)",
                    url: " /language/regexes#index-entry-regex__Named_captures-Named_captures" }
                  ,
{ category: "Reference", value: " POST (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__POST-POST" }
                  ,
{ category: "Reference", value: " PRE (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__PRE-PRE" }
                  ,
{ category: "Reference", value: " QUIT (Asynchronous Phasers)",
                    url: " /language/phasers#index-entry-Asynchronous_Phasers__QUIT-QUIT" }
                  ,
{ category: "Reference", value: " Raku and Perl¬†6 (FAQ) (Rakudo)",
                    url: " /language/faq#index-entry-Rakudo__Raku_and_Perl%C2%A06_%28FAQ%29" }
                  ,
{ category: "Reference", value: " Regex Interpolation (regex)",
                    url: " /language/regexes#index-entry-regex__Regex_Interpolation-Regex_interpolation" }
                  ,
{ category: "Reference", value: " UNDO (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__UNDO-UNDO" }
                  ,
{ category: "Reference", value: " blocks (control flow)",
                    url: " /language/control#index-entry-control_flow__blocks-Blocks" }
                  ,
{ category: "Reference", value: " enum",
                    url: " /language/typesystem#index-entry-Enumeration-_Enums-_enum" }
                  ,
{ category: "Reference", value: " fail (control flow)",
                    url: " /language/control#index-entry-control_flow__fail-fail" }
                  ,
{ category: "Reference", value: " for (control flow)",
                    url: " /language/control#index-entry-control_flow__for-for" }
                  ,
{ category: "Reference", value: " given (control flow)",
                    url: " /language/control#index-entry-control_flow__given-given" }
                  ,
{ category: "Reference", value: " inheritance (classes)",
                    url: " /language/classtut#index-entry-classes__inheritance" }
                  ,
{ category: "Reference", value: " is raw (trait)",
                    url: " /type/Signature#index-entry-trait__is_raw" }
                  ,
{ category: "Reference", value: " last (control flow)",
                    url: " /language/control#index-entry-control_flow__last-last" }
                  ,
{ category: "Reference", value: " loop (control flow)",
                    url: " /language/control#index-entry-control_flow__loop-loop" }
                  ,
{ category: "Reference", value: " next (control flow)",
                    url: " /language/control#index-entry-control_flow__next-next" }
                  ,
{ category: "Reference", value: " once (control flow)",
                    url: " /language/control#index-entry-control_flow__once-once" }
                  ,
{ category: "Reference", value: " orwith (control flow)",
                    url: " /language/control#index-entry-control_flow__orwith-orwith" }
                  ,
{ category: "Reference", value: " pragma (MONKEY)",
                    url: " /language/pragmas#index-entry-MONKEY__pragma" }
                  ,
{ category: "Reference", value: " pragma (MONKEY-GUTS)",
                    url: " /language/pragmas#index-entry-MONKEY-GUTS__pragma" }
                  ,
{ category: "Reference", value: " pragma (MONKEY-SEE-NO-EVAL)",
                    url: " /language/pragmas#index-entry-MONKEY-SEE-NO-EVAL__pragma" }
                  ,
{ category: "Reference", value: " pragma (MONKEY-TYPING)",
                    url: " /language/pragmas#index-entry-MONKEY-TYPING__pragma" }
                  ,
{ category: "Reference", value: " pragma (experimental)",
                    url: " /language/pragmas#index-entry-experimental__pragma" }
                  ,
{ category: "Reference", value: " pragma (fatal)",
                    url: " /language/pragmas#index-entry-fatal__pragma" }
                  ,
{ category: "Reference", value: " pragma (internals)",
                    url: " /language/pragmas#index-entry-internals__pragma" }
                  ,
{ category: "Reference", value: " pragma (invocant)",
                    url: " /language/pragmas#index-entry-invocant__pragma" }
                  ,
{ category: "Reference", value: " pragma (isms)",
                    url: " /language/pragmas#index-entry-isms__pragma" }
                  ,
{ category: "Reference", value: " pragma (lib)",
                    url: " /language/pragmas#index-entry-lib__pragma" }
                  ,
{ category: "Reference", value: " pragma (newline)",
                    url: " /language/pragmas#index-entry-newline__pragma" }
                  ,
{ category: "Reference", value: " pragma (nqp)",
                    url: " /language/pragmas#index-entry-nqp__pragma" }
                  ,
{ category: "Reference", value: " pragma (parameters)",
                    url: " /language/pragmas#index-entry-parameters__pragma" }
                  ,
{ category: "Reference", value: " pragma (precompilation)",
                    url: " /language/pragmas#index-entry-precompilation__pragma" }
                  ,
{ category: "Reference", value: " pragma (soft)",
                    url: " /language/pragmas#index-entry-soft__pragma" }
                  ,
{ category: "Reference", value: " pragma (strict)",
                    url: " /language/pragmas#index-entry-strict__pragma" }
                  ,
{ category: "Reference", value: " pragma (trace)",
                    url: " /language/pragmas#index-entry-trace__pragma" }
                  ,
{ category: "Reference", value: " pragma (v6)",
                    url: " /language/pragmas#index-entry-v6__pragma" }
                  ,
{ category: "Reference", value: " pragma (v6.x)",
                    url: " /language/pragmas#index-entry-v6.x__pragma" }
                  ,
{ category: "Reference", value: " pragma (variables)",
                    url: " /language/pragmas#index-entry-variables__pragma" }
                  ,
{ category: "Reference", value: " pragma (worries)",
                    url: " /language/pragmas#index-entry-worries__pragma" }
                  ,
{ category: "Reference", value: " proceed (control flow)",
                    url: " /language/control#index-entry-control_flow__proceed-proceed" }
                  ,
{ category: "Reference", value: " proto regex",
                    url: " /language/grammars#index-entry-%3Asym%3C%3E-_proto_regex-_declarator_grammar-Proto_regexes" }
                  ,
{ category: "Reference", value: " quietly (control flow)",
                    url: " /language/control#index-entry-control_flow__quietly-quietly" }
                  ,
{ category: "Reference", value: " redo (control flow)",
                    url: " /language/control#index-entry-control_flow__redo-redo" }
                  ,
{ category: "Reference", value: " return-rw (control flow)",
                    url: " /language/control#index-entry-control_flow__return-rw-return-rw" }
                  ,
{ category: "Reference", value: " statements (control flow)",
                    url: " /language/control#index-entry-control_flow__statements-statements" }
                  ,
{ category: "Reference", value: " succeed (control flow)",
                    url: " /language/control#index-entry-control_flow__succeed-succeed" }
                  ,
{ category: "Reference", value: " tilde (regex)",
                    url: " /language/regexes#index-entry-regex__tilde-_regex__~-Tilde_for_nesting_structures" }
                  ,
{ category: "Reference", value: " unless (control flow)",
                    url: " /language/control#index-entry-control_flow__unless-unless" }
                  ,
{ category: "Reference", value: " when (control flow)",
                    url: " /language/control#index-entry-control_flow__when-when" }
                  ,
{ category: "Reference", value: " will trait (Phasers)",
                    url: " /language/phasers#index-entry-Phasers__will_trait" }
                  ,
{ category: "Reference", value: " with (control flow)",
                    url: " /language/control#index-entry-control_flow__with-with" }
                  ,
{ category: "Reference", value: " without (control flow)",
                    url: " /language/control#index-entry-control_flow__without-without" }
                  ,
{ category: "Reference", value: " ~ ( regex)",
                    url: " /language/regexes#index-entry-regex__tilde-_regex__~-Tilde_for_nesting_structures" }
                  ,
{ category: "Reference", value: " ¬´ ( regex)",
                    url: " /language/regexes#index-entry-regex__%3C%3C-_regex__%3E%3E-_regex__%C2%AB-_regex__%C2%BB" }
                  ,
{ category: "Reference", value: " ¬ª ( regex)",
                    url: " /language/regexes#index-entry-regex__%3C%3C-_regex__%3E%3E-_regex__%C2%AB-_regex__%C2%BB" }
                  ,
{ category: "Reference", value: " ‚âÖ (infix)",
                    url: " /language/operators#index-entry-infix__%E2%89%85-%E2%89%85" }
                  ,
{ category: "Reference", value: "! (negation metaoperator)",
                    url: " /language/operators#index-entry-%21_%28negation_metaoperator%29" }
                  ,
{ category: "Reference", value: "! (private methods)",
                    url: " /language/classtut#index-entry-%21_%28private_methods%29" }
                  ,
{ category: "Reference", value: "! (twigils)",
                    url: " /language/classtut#index-entry-twigils_%21" }
                  ,
{ category: "Reference", value: "!==",
                    url: " /language/operators#index-entry-%21%3D%3D" }
                  ,
{ category: "Reference", value: "!eq",
                    url: " /language/operators#index-entry-%21eq" }
                  ,
{ category: "Reference", value: "#= (declarator blocks)",
                    url: " /language/pod#index-entry-declarator_blocks_%2523%3D" }
                  ,
{ category: "Reference", value: "#| (declarator blocks)",
                    url: " /language/pod#index-entry-declarator_blocks_%2523%7C" }
                  ,
{ category: "Reference", value: "$ (item contextualizer)",
                    url: " /type/Any#index-entry-%24_%28item_contextualizer%29" }
                  ,
{ category: "Reference", value: "$ (regex)",
                    url: " /language/regexes#index-entry-regex_%5E-regex_%24-Start_of_string_and_end_of_string" }
                  ,
{ category: "Reference", value: "$ (sigil)",
                    url: " /language/variables#index-entry-sigil_%24" }
                  ,
{ category: "Reference", value: "$ (variable)",
                    url: " /language/variables#index-entry-%24_%28variable%29" }
                  ,
{ category: "Reference", value: "$!",
                    url: " /language/variables#index-entry-%24%21" }
                  ,
{ category: "Reference", value: "$$ (Perl¬†5)",
                    url: " /language/5to6-perlvar#index-entry-%24%24_%28Perl%C2%A05%29" }
                  ,
{ category: "Reference", value: "$$ (regex)",
                    url: " /language/regexes#index-entry-regex_%5E%5E-regex_%24%24-Start_of_line_and_end_of_line" }
                  ,
{ category: "Reference", value: "$*",
                    url: " /language/variables#index-entry-%24%2A" }
                  ,
{ category: "Reference", value: "$*ARGFILES",
                    url: " /language/variables#index-entry-%24%2AARGFILES" }
                  ,
{ category: "Reference", value: "$*COLLATION",
                    url: " /language/variables#index-entry-%24%2ACOLLATION" }
                  ,
{ category: "Reference", value: "$*CWD",
                    url: " /language/variables#index-entry-%24%2ACWD" }
                  ,
{ category: "Reference", value: "$*DISTRO",
                    url: " /language/variables#index-entry-%24%2ADISTRO" }
                  ,
{ category: "Reference", value: "$*ERR",
                    url: " /language/variables#index-entry-%24%2AERR" }
                  ,
{ category: "Reference", value: "$*EXECUTABLE",
                    url: " /language/variables#index-entry-%24%2AEXECUTABLE" }
                  ,
{ category: "Reference", value: "$*EXECUTABLE-NAME",
                    url: " /language/variables#index-entry-%24%2AEXECUTABLE-NAME" }
                  ,
{ category: "Reference", value: "$*GROUP",
                    url: " /language/variables#index-entry-%24%2AGROUP" }
                  ,
{ category: "Reference", value: "$*HOME",
                    url: " /language/variables#index-entry-%24%2AHOME" }
                  ,
{ category: "Reference", value: "$*HOMEDRIVE",
                    url: " /language/variables#index-entry-%24%2AHOMEDRIVE" }
                  ,
{ category: "Reference", value: "$*HOMEPATH",
                    url: " /language/variables#index-entry-%24%2AHOMEPATH" }
                  ,
{ category: "Reference", value: "$*IN",
                    url: " /language/variables#index-entry-%24%2AIN" }
                  ,
{ category: "Reference", value: "$*INIT-INSTANT",
                    url: " /language/variables#index-entry-%24%2AINIT-INSTANT" }
                  ,
{ category: "Reference", value: "$*KERNEL",
                    url: " /language/variables#index-entry-%24%2AKERNEL" }
                  ,
{ category: "Reference", value: "$*OUT",
                    url: " /language/variables#index-entry-%24%2AOUT" }
                  ,
{ category: "Reference", value: "$*PERL",
                    url: " /language/variables#index-entry-%24%2APERL" }
                  ,
{ category: "Reference", value: "$*PID",
                    url: " /language/variables#index-entry-%24%2APID" }
                  ,
{ category: "Reference", value: "$*PROGRAM",
                    url: " /language/variables#index-entry-%24%2APROGRAM" }
                  ,
{ category: "Reference", value: "$*PROGRAM-NAME",
                    url: " /language/variables#index-entry-%24%2APROGRAM-NAME" }
                  ,
{ category: "Reference", value: "$*REPO",
                    url: " /language/variables#index-entry-%24%2AREPO" }
                  ,
{ category: "Reference", value: "$*SAMPLER",
                    url: " /language/variables#index-entry-%24%2ASAMPLER" }
                  ,
{ category: "Reference", value: "$*SCHEDULER",
                    url: " /language/variables#index-entry-%24%2ASCHEDULER" }
                  ,
{ category: "Reference", value: "$*SPEC",
                    url: " /language/variables#index-entry-%24%2ASPEC" }
                  ,
{ category: "Reference", value: "$*THREAD",
                    url: " /language/variables#index-entry-%24%2ATHREAD" }
                  ,
{ category: "Reference", value: "$*TMPDIR",
                    url: " /language/variables#index-entry-%24%2ATMPDIR" }
                  ,
{ category: "Reference", value: "$*TOLERANCE",
                    url: " /language/variables#index-entry-%24%2ATOLERANCE" }
                  ,
{ category: "Reference", value: "$*TZ",
                    url: " /language/variables#index-entry-%24%2ATZ" }
                  ,
{ category: "Reference", value: "$*USAGE",
                    url: " /language/create-cli#index-entry-%24%2AUSAGE" }
                  ,
{ category: "Reference", value: "$*USER",
                    url: " /language/variables#index-entry-%24%2AUSER" }
                  ,
{ category: "Reference", value: "$*VM",
                    url: " /language/variables#index-entry-%24%2AVM" }
                  ,
{ category: "Reference", value: "$.",
                    url: " /language/variables#index-entry-%24." }
                  ,
{ category: "Reference", value: "$0 (Perl¬†5)",
                    url: " /language/5to6-perlvar#index-entry-%240_%28Perl%C2%A05%29" }
                  ,
{ category: "Reference", value: "$0 (variable)",
                    url: " /language/variables#index-entry-variable_%240-variable_%241-Positional_attributes" }
                  ,
{ category: "Reference", value: "$1 (variable)",
                    url: " /language/variables#index-entry-variable_%240-variable_%241-Positional_attributes" }
                  ,
{ category: "Reference", value: "$:",
                    url: " /language/variables#index-entry-%24%3A" }
                  ,
{ category: "Reference", value: "$<named> (variable)",
                    url: " /language/variables#index-entry-variable_%24%3Cnamed%3E-Named_attributes" }
                  ,
{ category: "Reference", value: "$=",
                    url: " /language/variables#index-entry-%24%3D" }
                  ,
{ category: "Reference", value: "$?",
                    url: " /language/variables#index-entry-%24%3F" }
                  ,
{ category: "Reference", value: "$?CLASS",
                    url: " /language/variables#index-entry-%24%3FCLASS" }
                  ,
{ category: "Reference", value: "$?DISTRIBUTION",
                    url: " /language/variables#index-entry-%24%3FDISTRIBUTION" }
                  ,
{ category: "Reference", value: "$?FILE",
                    url: " /language/variables#index-entry-%24%3FFILE" }
                  ,
{ category: "Reference", value: "$?LINE",
                    url: " /language/variables#index-entry-%24%3FLINE" }
                  ,
{ category: "Reference", value: "$?MODULE",
                    url: " /language/variables#index-entry-%24%3FMODULE" }
                  ,
{ category: "Reference", value: "$?NL",
                    url: " /language/variables#index-entry-%24%3FNL" }
                  ,
{ category: "Reference", value: "$?PACKAGE",
                    url: " /language/variables#index-entry-%24%3FPACKAGE" }
                  ,
{ category: "Reference", value: "$?ROLE",
                    url: " /language/variables#index-entry-%24%3FROLE" }
                  ,
{ category: "Reference", value: "$?TABSTOP",
                    url: " /language/variables#index-entry-%24%3FTABSTOP" }
                  ,
{ category: "Reference", value: "$^",
                    url: " /language/variables#index-entry-%24%5E" }
                  ,
{ category: "Reference", value: "$_ (Perl¬†5)",
                    url: " /language/5to6-perlvar#index-entry-%24___%28Perl%C2%A05%29" }
                  ,
{ category: "Reference", value: "$~",
                    url: " /language/variables#index-entry-%24~" }
                  ,
{ category: "Reference", value: "$~MAIN",
                    url: " /language/variables#index-entry-%24~MAIN" }
                  ,
{ category: "Reference", value: "$~P5Regex",
                    url: " /language/variables#index-entry-%24~P5Regex" }
                  ,
{ category: "Reference", value: "$~Quasi",
                    url: " /language/variables#index-entry-%24~Quasi" }
                  ,
{ category: "Reference", value: "$~Quote",
                    url: " /language/variables#index-entry-%24~Quote" }
                  ,
{ category: "Reference", value: "$~Regex",
                    url: " /language/variables#index-entry-%24~Regex" }
                  ,
{ category: "Reference", value: "$~Trans",
                    url: " /language/variables#index-entry-%24~Trans" }
                  ,
{ category: "Reference", value: "$¬¢",
                    url: " /type/Match#index-entry-%24%C2%A2" }
                  ,
{ category: "Reference", value: "% (regex)",
                    url: " /language/regexes#index-entry-regex_%2525-regex_%2525%2525-Modified_quantifier%3A_%2525%2C_%2525%2525" }
                  ,
{ category: "Reference", value: "% (sigil)",
                    url: " /language/variables#index-entry-sigil_%2525" }
                  ,
{ category: "Reference", value: "%% (regex)",
                    url: " /language/regexes#index-entry-regex_%2525-regex_%2525%2525-Modified_quantifier%3A_%2525%2C_%2525%2525" }
                  ,
{ category: "Reference", value: "%*ENV",
                    url: " /language/variables#index-entry-%2525%2AENV" }
                  ,
{ category: "Reference", value: "%*SUB-MAIN-OPTS",
                    url: " /language/create-cli#index-entry-%2525%2ASUB-MAIN-OPTS" }
                  ,
{ category: "Reference", value: "%?RESOURCES",
                    url: " /language/variables#index-entry-%2525%3FRESOURCES" }
                  ,
{ category: "Reference", value: "%INC (Perl¬†5)",
                    url: " /language/5to6-perlvar#index-entry-%2525INC_%28Perl%C2%A05%29" }
                  ,
{ category: "Reference", value: "%_",
                    url: " /language/functions#index-entry-%2525__" }
                  ,
{ category: "Reference", value: "& (interpolation)",
                    url: " /language/quoting#index-entry-%26_%28interpolation%29" }
                  ,
{ category: "Reference", value: "& (regex)",
                    url: " /language/regexes#index-entry-regex_%26-Conjunction%3A_%26" }
                  ,
{ category: "Reference", value: "& (sigil)",
                    url: " /language/variables#index-entry-sigil_%26" }
                  ,
{ category: "Reference", value: "& (sigils)",
                    url: " /language/classtut#index-entry-sigils_%26" }
                  ,
{ category: "Reference", value: "&& (regex)",
                    url: " /language/regexes#index-entry-regex_%26%26-Conjunction%3A_%26%26" }
                  ,
{ category: "Reference", value: "&*ARGS-TO-CAPTURE",
                    url: " /language/variables#index-entry-%26%2AARGS-TO-CAPTURE" }
                  ,
{ category: "Reference", value: "&*EXIT",
                    url: " /language/variables#index-entry-%26%2AEXIT" }
                  ,
{ category: "Reference", value: "&*GENERATE-USAGE",
                    url: " /language/variables#index-entry-%26%2AGENERATE-USAGE" }
                  ,
{ category: "Reference", value: "&?BLOCK",
                    url: " /language/variables#index-entry-%26%3FBLOCK" }
                  ,
{ category: "Reference", value: "&?ROUTINE",
                    url: " /language/variables#index-entry-%26%3FROUTINE" }
                  ,
{ category: "Reference", value: "' ' (quote)",
                    url: " /language/quoting#index-entry-quote_q-quote_%27_%27-Escaping%3A_q" }
                  ,
{ category: "Reference", value: "( ) (regex)",
                    url: " /language/regexes#index-entry-regex_%28_%29-Capturing" }
                  ,
{ category: "Reference", value: "* (regex quantifier)",
                    url: " /language/regexes#index-entry-regex_quantifier_%2A-Zero_or_more%3A_%2A" }
                  ,
{ category: "Reference", value: "*% (parameter)",
                    url: " /type/Signature#index-entry-parameter_%2A%2525" }
                  ,
{ category: "Reference", value: "** (regex quantifier)",
                    url: " /language/regexes#index-entry-regex_quantifier_%2A%2A-General_quantifier%3A_%2A%2A_min..max" }
                  ,
{ category: "Reference", value: "*@ (parameter)",
                    url: " /type/Signature#index-entry-parameter_%2A%40" }
                  ,
{ category: "Reference", value: "+ (Single argument rule slurpy)",
                    url: " /type/Signature#index-entry-%2B_%28Single_argument_rule_slurpy%29" }
                  ,
{ category: "Reference", value: "+ (regex quantifier)",
                    url: " /language/regexes#index-entry-regex_quantifier_%2B-One_or_more%3A_%2B" }
                  ,
{ category: "Reference", value: "++‚öõ",
                    url: " /language/unicode_ascii#index-entry-%2B%2B%E2%9A%9B" }
                  ,
{ category: "Reference", value: "+=",
                    url: " /language/101-basics#index-entry-%2B%3D" }
                  ,
{ category: "Reference", value: "--",
                    url: " /language/operators#index-entry------" }
                  ,
{ category: "Reference", value: "-->",
                    url: " /type/Signature#index-entry---%3E" }
                  ,
{ category: "Reference", value: "--‚öõ",
                    url: " /language/unicode_ascii#index-entry---%E2%9A%9B" }
                  ,
{ category: "Reference", value: "-> (syntax)",
                    url: " /language/functions#index-entry-syntax_-%3E-Blocks_and_lambdas" }
                  ,
{ category: "Reference", value: ". (operators)",
                    url: " /language/classtut#index-entry-operators_." }
                  ,
{ category: "Reference", value: ". (twigils)",
                    url: " /language/classtut#index-entry-twigils_." }
                  ,
{ category: "Reference", value: ".( )",
                    url: " /language/operators#index-entry-.%28_%29" }
                  ,
{ category: "Reference", value: "... (forward declaration)",
                    url: " /language/typesystem#index-entry-..._%28forward_declaration%29" }
                  ,
{ category: "Reference", value: ".DEFINITE",
                    url: " /language/classtut#index-entry-.DEFINITE" }
                  ,
{ category: "Reference", value: ".[ ]",
                    url: " /language/operators#index-entry-.%5B_%5D" }
                  ,
{ category: "Reference", value: ".{ }",
                    url: " /language/operators#index-entry-.%7B_%7D" }
                  ,
{ category: "Reference", value: "0b (radix form)",
                    url: " /language/syntax#index-entry-0b_%28radix_form%29" }
                  ,
{ category: "Reference", value: "0d (radix form)",
                    url: " /language/syntax#index-entry-0d_%28radix_form%29" }
                  ,
{ category: "Reference", value: "0o (radix form)",
                    url: " /language/syntax#index-entry-0o_%28radix_form%29" }
                  ,
{ category: "Reference", value: "0x (radix form)",
                    url: " /language/syntax#index-entry-0x_%28radix_form%29" }
                  ,
{ category: "Reference", value: "6model",
                    url: " /language/glossary#index-entry-6model" }
                  ,
{ category: "Reference", value: ":",
                    url: " /type/Pair#index-entry-%3A" }
                  ,
{ category: "Reference", value: ": (regex)",
                    url: " /language/regexes#index-entry-regex_%3A-Preventing_backtracking%3A_%3A" }
                  ,
{ category: "Reference", value: ":!",
                    url: " /type/Pair#index-entry-%3A%21" }
                  ,
{ category: "Reference", value: ":$",
                    url: " /type/Pair#index-entry-%3A%24" }
                  ,
{ category: "Reference", value: ":$translate-nl",
                    url: " /language/newline#index-entry-%3A%24translate-nl" }
                  ,
{ category: "Reference", value: ":()",
                    url: " /type/Signature#index-entry-%3A%28%29" }
                  ,
{ category: "Reference", value: ":1st (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3A1st-matching_adverb_%3A2nd-matching_adverb_%3A3rd-matching_adverb_%3Anth-Positional_adverbs" }
                  ,
{ category: "Reference", value: ":2nd (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3A1st-matching_adverb_%3A2nd-matching_adverb_%3A3rd-matching_adverb_%3Anth-Positional_adverbs" }
                  ,
{ category: "Reference", value: ":3rd (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3A1st-matching_adverb_%3A2nd-matching_adverb_%3A3rd-matching_adverb_%3Anth-Positional_adverbs" }
                  ,
{ category: "Reference", value: "::($c).m",
                    url: " /language/packages#index-entry-%3A%3A%28%24c%29.m" }
                  ,
{ category: "Reference", value: "::()",
                    url: " /language/packages#index-entry-%3A%3A%28%29" }
                  ,
{ category: "Reference", value: "::?CLASS",
                    url: " /language/variables#index-entry-%3A%3A%3FCLASS" }
                  ,
{ category: "Reference", value: "::Bind::Slice",
                    url: " /type/X::Bind::Slice#index-entry-%3A%3ABind%3A%3ASlice" }
                  ,
{ category: "Reference", value: ":D (type constraint)",
                    url: " /type/Signature#index-entry-type_constraint_%3AD" }
                  ,
{ category: "Reference", value: ":U (type constraint)",
                    url: " /type/Signature#index-entry-type_constraint_%3AU" }
                  ,
{ category: "Reference", value: ":_ (type constraint)",
                    url: " /type/Signature#index-entry-type_constraint_%3A__" }
                  ,
{ category: "Reference", value: ":a (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aa_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":array (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aarray_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":auth<> (class)",
                    url: " /language/typesystem#index-entry-%3Aauth%3C%3E_%28class%29-%3Aauth%3C%3E" }
                  ,
{ category: "Reference", value: ":auth<> (grammar)",
                    url: " /language/typesystem#index-entry-%3Aauth%3C%3E_%28grammar%29-%3Aauth%3C%3E" }
                  ,
{ category: "Reference", value: ":auth<> (role)",
                    url: " /language/typesystem#index-entry-%3Aauth%3C%3E_%28role%29-%3Aauth%3C%3E" }
                  ,
{ category: "Reference", value: ":b (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Ab_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":backslash (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Abackslash_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":c (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Acontinue-matching_adverb_%3Ac-Continue" }
                  ,
{ category: "Reference", value: ":c (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Ac_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":cached",
                    url: " /language/experimental#index-entry-%3Acached-cached" }
                  ,
{ category: "Reference", value: ":closure (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aclosure_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":continue (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Acontinue-matching_adverb_%3Ac-Continue" }
                  ,
{ category: "Reference", value: ":delete (subscript adverb)",
                    url: " /language/subscripts#index-entry-%3Adelete_%28subscript_adverb%29" }
                  ,
{ category: "Reference", value: ":double (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Adouble_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":ex (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Aexhaustive-matching_adverb_%3Aex-Exhaustive" }
                  ,
{ category: "Reference", value: ":exec (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aexec_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":exhaustive (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Aexhaustive-matching_adverb_%3Aex-Exhaustive" }
                  ,
{ category: "Reference", value: ":exists",
                    url: " /type/Pair#index-entry-%3Aexists" }
                  ,
{ category: "Reference", value: ":exists (subscript adverb)",
                    url: " /language/subscripts#index-entry-%3Aexists_%28subscript_adverb%29" }
                  ,
{ category: "Reference", value: ":f (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Af_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":function (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Afunction_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":g (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Aglobal-matching_adverb_%3Ag-Global" }
                  ,
{ category: "Reference", value: ":global (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Aglobal-matching_adverb_%3Ag-Global" }
                  ,
{ category: "Reference", value: ":h (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Ah_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":hash (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Ahash_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":heredoc (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aheredoc_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":i (regex adverb)",
                    url: " /language/regexes#index-entry-regex_adverb_%3Aignorecase-regex_adverb_%3Ai-Regex_adverbs" }
                  ,
{ category: "Reference", value: ":ignorecase (regex adverb)",
                    url: " /language/regexes#index-entry-regex_adverb_%3Aignorecase-regex_adverb_%3Ai-Regex_adverbs" }
                  ,
{ category: "Reference", value: ":ignoremark (regex adverb)",
                    url: " /language/regexes#index-entry-regex_adverb_%3Aignoremark-regex_adverb_%3Am-Ignoremark" }
                  ,
{ category: "Reference", value: ":ii (substitution adverb)",
                    url: " /language/regexes#index-entry-substitution_adverb_%3Asamecase-substitution_adverb_%3Aii-Samecase" }
                  ,
{ category: "Reference", value: ":k (subscript adverb)",
                    url: " /language/subscripts#index-entry-%3Ak_%28subscript_adverb%29" }
                  ,
{ category: "Reference", value: ":kv (subscript adverb)",
                    url: " /language/subscripts#index-entry-%3Akv_%28subscript_adverb%29" }
                  ,
{ category: "Reference", value: ":m (regex adverb)",
                    url: " /language/regexes#index-entry-regex_adverb_%3Aignoremark-regex_adverb_%3Am-Ignoremark" }
                  ,
{ category: "Reference", value: ":mm (substitution adverb)",
                    url: " /language/regexes#index-entry-substitution_adverb_%3Asamemark-substitution_adverb_%3Amm-Samemark" }
                  ,
{ category: "Reference", value: ":my",
                    url: " /language/regexes#index-entry-%3Amy" }
                  ,
{ category: "Reference", value: ":nl-out",
                    url: " /language/newline#index-entry-%3Anl-out" }
                  ,
{ category: "Reference", value: ":nth (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3A1st-matching_adverb_%3A2nd-matching_adverb_%3A3rd-matching_adverb_%3Anth-Positional_adverbs" }
                  ,
{ category: "Reference", value: ":our",
                    url: " /language/regexes#index-entry-%3Aour" }
                  ,
{ category: "Reference", value: ":ov (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Aoverlap-matching_adverb_%3Aov-Overlap" }
                  ,
{ category: "Reference", value: ":overlap (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Aoverlap-matching_adverb_%3Aov-Overlap" }
                  ,
{ category: "Reference", value: ":p (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Apos-matching_adverb_%3Ap-Pos" }
                  ,
{ category: "Reference", value: ":p (subscript adverb)",
                    url: " /language/subscripts#index-entry-%3Ap_%28subscript_adverb%29" }
                  ,
{ category: "Reference", value: ":pos (matching adverb)",
                    url: " /language/regexes#index-entry-matching_adverb_%3Apos-matching_adverb_%3Ap-Pos" }
                  ,
{ category: "Reference", value: ":q (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aq_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":qq (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aqq_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":quotewords (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aquotewords_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":r (regex adverb)",
                    url: " /language/regexes#index-entry-regex_adverb_%3Aratchet-regex_adverb_%3Ar-Ratchet" }
                  ,
{ category: "Reference", value: ":ratchet (regex adverb)",
                    url: " /language/regexes#index-entry-regex_adverb_%3Aratchet-regex_adverb_%3Ar-Ratchet" }
                  ,
{ category: "Reference", value: ":s (quoting adverb)",
                    url: " /language/quoting#index-entry-%3As_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":s (regex adverb)",
                    url: " /language/regexes#index-entry-regex_adverb_%3Asigspace-regex_adverb_%3As-Sigspace" }
                  ,
{ category: "Reference", value: ":samecase (substitution adverb)",
                    url: " /language/regexes#index-entry-substitution_adverb_%3Asamecase-substitution_adverb_%3Aii-Samecase" }
                  ,
{ category: "Reference", value: ":samemark (substitution adverb)",
                    url: " /language/regexes#index-entry-substitution_adverb_%3Asamemark-substitution_adverb_%3Amm-Samemark" }
                  ,
{ category: "Reference", value: ":samespace (substitution adverb)",
                    url: " /language/regexes#index-entry-substitution_adverb_%3Asamespace-substitution_adverb_%3Ass-Samespace" }
                  ,
{ category: "Reference", value: ":scalar (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Ascalar_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":sigspace (regex adverb)",
                    url: " /language/regexes#index-entry-regex_adverb_%3Asigspace-regex_adverb_%3As-Sigspace" }
                  ,
{ category: "Reference", value: ":single (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Asingle_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":ss (substitution adverb)",
                    url: " /language/regexes#index-entry-substitution_adverb_%3Asamespace-substitution_adverb_%3Ass-Samespace" }
                  ,
{ category: "Reference", value: ":sym<>",
                    url: " /language/grammars#index-entry-%3Asym%3C%3E-_proto_regex-_declarator_grammar-Proto_regexes" }
                  ,
{ category: "Reference", value: ":to (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Ato_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":v (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Av_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":v (subscript adverb)",
                    url: " /language/subscripts#index-entry-%3Av_%28subscript_adverb%29" }
                  ,
{ category: "Reference", value: ":val (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aval_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":ver<> (class)",
                    url: " /language/typesystem#index-entry-%3Aver%3C%3E_%28class%29-%3Aver%3C%3E" }
                  ,
{ category: "Reference", value: ":ver<> (grammar)",
                    url: " /language/typesystem#index-entry-%3Aver%3C%3E_%28grammar%29-%3Aver%3C%3E" }
                  ,
{ category: "Reference", value: ":ver<> (role)",
                    url: " /language/typesystem#index-entry-%3Aver%3C%3E_%28role%29-%3Aver%3C%3E" }
                  ,
{ category: "Reference", value: ":w (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aw_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":words (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Awords_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":ww (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Aww_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":x (quoting adverb)",
                    url: " /language/quoting#index-entry-%3Ax_%28quoting_adverb%29" }
                  ,
{ category: "Reference", value: ":{}",
                    url: " /language/hashmap#index-entry-%3A%7B%7D" }
                  ,
{ category: "Reference", value: "< > word quote",
                    url: " /language/quoting#index-entry-%3C_%3E_word_quote" }
                  ,
{ category: "Reference", value: "<( )> (regex)",
                    url: " /language/regexes#index-entry-regex_%3C%28_%29%3E-Capture_markers%3A_%3C%28_%29%3E" }
                  ,
{ category: "Reference", value: "<->",
                    url: " /type/Block#index-entry-%3C-%3E" }
                  ,
{ category: "Reference", value: "<-[ ]> (regex)",
                    url: " /language/regexes#index-entry-regex_%3C%5B_%5D%3E-regex_%3C-%5B_%5D%3E-Enumerated_character_classes_and_ranges" }
                  ,
{ category: "Reference", value: "<:property> (regex)",
                    url: " /language/regexes#index-entry-regex_%3C%3Aproperty%3E-Unicode_properties" }
                  ,
{ category: "Reference", value: "<< (hyper)",
                    url: " /language/operators#index-entry-hyper_%3C%3C-hyper_%3E%3E-hyper_%C2%AB-hyper_%C2%BB-Hyper_operators" }
                  ,
{ category: "Reference", value: "<< >> (quote)",
                    url: " /language/quoting#index-entry-quote_%3C%3C_%3E%3E-quote_%C2%AB_%C2%BB-Word_quoting_with_interpolation_and_quote_protection%3A_%C2%AB_%C2%BB" }
                  ,
{ category: "Reference", value: "<?>",
                    url: " /language/grammars#index-entry-%3C%3F%3E" }
                  ,
{ category: "Reference", value: "<[ ]> (regex)",
                    url: " /language/regexes#index-entry-regex_%3C%5B_%5D%3E-regex_%3C-%5B_%5D%3E-Enumerated_character_classes_and_ranges" }
                  ,
{ category: "Reference", value: "<sym>",
                    url: " /language/grammars#index-entry-%3Csym%3E-sym" }
                  ,
{ category: "Reference", value: "=> ",
                    url: " /type/Pair#index-entry-%3D%3E_" }
                  ,
{ category: "Reference", value: ">> (hyper)",
                    url: " /language/operators#index-entry-hyper_%3C%3C-hyper_%3E%3E-hyper_%C2%AB-hyper_%C2%BB-Hyper_operators" }
                  ,
{ category: "Reference", value: "? (regex quantifier)",
                    url: " /language/regexes#index-entry-regex_quantifier_%3F-Zero_or_one%3A_%3F" }
                  ,
{ category: "Reference", value: "? (regex)",
                    url: " /language/regexes#index-entry-regex_%3F-Greedy_versus_frugal_quantifiers%3A_%3F" }
                  ,
{ category: "Reference", value: "@ (sigil)",
                    url: " /language/variables#index-entry-sigil_%40" }
                  ,
{ category: "Reference", value: "@ list contextualizer",
                    url: " /type/Any#index-entry-%40_list_contextualizer" }
                  ,
{ category: "Reference", value: "@*ARGS",
                    url: " /language/variables#index-entry-%40%2AARGS" }
                  ,
{ category: "Reference", value: "@INC (Perl¬†5)",
                    url: " /language/5to6-perlvar#index-entry-%40INC_%28Perl%C2%A05%29" }
                  ,
{ category: "Reference", value: "@_",
                    url: " /language/functions#index-entry-%40__" }
                  ,
{ category: "Reference", value: "@_ (Perl¬†5)",
                    url: " /language/5to6-perlvar#index-entry-%40___%28Perl%C2%A05%29" }
                  ,
{ category: "Reference", value: "A.\"$m\"()",
                    url: " /language/packages#index-entry-A.%22%24m%22%28%29" }
                  ,
{ category: "Reference", value: "ALAP",
                    url: " /language/glossary#index-entry-ALAP" }
                  ,
{ category: "Reference", value: "API",
                    url: " /language/glossary#index-entry-API" }
                  ,
{ category: "Reference", value: "ARGS-TO-CAPTURE",
                    url: " /language/create-cli#index-entry-ARGS-TO-CAPTURE" }
                  ,
{ category: "Reference", value: "ASCII operator",
                    url: " /language/glossary#index-entry-ASCII_operator" }
                  ,
{ category: "Reference", value: "Abstract Class",
                    url: " /language/glossary#index-entry-Abstract_Class" }
                  ,
{ category: "Reference", value: "Actions",
                    url: " /language/grammars#index-entry-Actions" }
                  ,
{ category: "Reference", value: "Addition operator",
                    url: " /language/operators#index-entry-Addition_operator" }
                  ,
{ category: "Reference", value: "Admonitory stub operator",
                    url: " /language/operators#index-entry-Admonitory_stub_operator" }
                  ,
{ category: "Reference", value: "Advent Calendar",
                    url: " /language/glossary#index-entry-Advent_Calendar" }
                  ,
{ category: "Reference", value: "Adverb",
                    url: " /language/glossary#index-entry-Adverb" }
                  ,
{ category: "Reference", value: "Adverbial Pair",
                    url: " /language/glossary#index-entry-Adverbial_Pair" }
                  ,
{ category: "Reference", value: "All junction operator",
                    url: " /language/operators#index-entry-All_junction_operator" }
                  ,
{ category: "Reference", value: "Allomorph",
                    url: " /language/glossary#index-entry-Allomorph" }
                  ,
{ category: "Reference", value: "Anonymous",
                    url: " /language/glossary#index-entry-Anonymous" }
                  ,
{ category: "Reference", value: "Any (Basics)",
                    url: " /language/101-basics#index-entry-Any_%28Basics%29-Any" }
                  ,
{ category: "Reference", value: "Any junction operator",
                    url: " /language/operators#index-entry-Any_junction_operator" }
                  ,
{ category: "Reference", value: "Apocalypse",
                    url: " /language/glossary#index-entry-Apocalypse" }
                  ,
{ category: "Reference", value: "Argument",
                    url: " /language/functions#index-entry-Argument" }
                  ,
{ category: "Reference", value: "Arity",
                    url: " /language/glossary#index-entry-Arity" }
                  ,
{ category: "Reference", value: "Array",
                    url: " /language/operators#index-entry-Array_constructor" }
                  ,
{ category: "Reference", value: "Attribute",
                    url: " /language/objects#index-entry-Attribute" }
                  ,
{ category: "Reference", value: "Autothreading",
                    url: " /language/glossary#index-entry-Autothreading" }
                  ,
{ category: "Reference", value: "BUILD",
                    url: " /language/classtut#index-entry-BUILD" }
                  ,
{ category: "Reference", value: "Backtracking",
                    url: " /language/glossary#index-entry-Backtracking" }
                  ,
{ category: "Reference", value: "Baggy addition operator",
                    url: " /language/operators#index-entry-Baggy_addition_operator" }
                  ,
{ category: "Reference", value: "Baggy multiplication operator",
                    url: " /language/operators#index-entry-Baggy_multiplication_operator" }
                  ,
{ category: "Reference", value: "BigEndian",
                    url: " /type/Endian#index-entry-BigEndian" }
                  ,
{ category: "Reference", value: "Binding operator",
                    url: " /language/operators#index-entry-Binding_operator" }
                  ,
{ category: "Reference", value: "Books",
                    url: " /language/faq#index-entry-Books" }
                  ,
{ category: "Reference", value: "Boolean",
                    url: " /type/Bool#index-entry-Boolean" }
                  ,
{ category: "Reference", value: "Boolean (literals)",
                    url: " /language/syntax#index-entry-Boolean_%28literals%29" }
                  ,
{ category: "Reference", value: "Boolean bitwise negation operator",
                    url: " /language/operators#index-entry-Boolean_bitwise_negation_operator" }
                  ,
{ category: "Reference", value: "Boolean context operator",
                    url: " /language/operators#index-entry-Boolean_context_operator" }
                  ,
{ category: "Reference", value: "Boolean logical OR operator",
                    url: " /language/operators#index-entry-Boolean_logical_OR_operator" }
                  ,
{ category: "Reference", value: "Bot",
                    url: " /language/glossary#index-entry-Bot" }
                  ,
{ category: "Reference", value: "C and C++ (FAQ)",
                    url: " /language/faq#index-entry-C_and_C%2B%2B_%28FAQ%29" }
                  ,
{ category: "Reference", value: "CALLER (package)",
                    url: " /language/packages#index-entry-CALLER_%28package%29" }
                  ,
{ category: "Reference", value: "CALLERS (package)",
                    url: " /language/packages#index-entry-CALLERS_%28package%29" }
                  ,
{ category: "Reference", value: "CATCH",
                    url: " /language/exceptions#index-entry-CATCH-CATCH" }
                  ,
{ category: "Reference", value: "CArray",
                    url: " /language/nativecall#index-entry-CArray" }
                  ,
{ category: "Reference", value: "CArray methods",
                    url: " /language/nativecall#index-entry-CArray_methods" }
                  ,
{ category: "Reference", value: "CLIENT (package)",
                    url: " /language/packages#index-entry-CLIENT_%28package%29" }
                  ,
{ category: "Reference", value: "COMPILING(package)",
                    url: " /language/packages#index-entry-COMPILING%28package%29" }
                  ,
{ category: "Reference", value: "CORE (package)",
                    url: " /language/packages#index-entry-CORE_%28package%29" }
                  ,
{ category: "Reference", value: "CPAN (FAQ)",
                    url: " /language/faq#index-entry-CPAN_%28FAQ%29" }
                  ,
{ category: "Reference", value: "CPPStruct",
                    url: " /language/traits#index-entry-CPPStruct" }
                  ,
{ category: "Reference", value: "CPointer",
                    url: " /language/traits#index-entry-CPointer" }
                  ,
{ category: "Reference", value: "CStruct",
                    url: " /language/traits#index-entry-CStruct" }
                  ,
{ category: "Reference", value: "CStruct (native representation)",
                    url: " /language/nativecall#index-entry-CStruct_%28native_representation%29" }
                  ,
{ category: "Reference", value: "CUnion",
                    url: " /language/traits#index-entry-CUnion" }
                  ,
{ category: "Reference", value: "Camelia",
                    url: " /language/glossary#index-entry-Camelia" }
                  ,
{ category: "Reference", value: "Circular dependencies (FAQ)",
                    url: " /language/faq#index-entry-Circular_dependencies_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Coercion type",
                    url: " /type/Signature#index-entry-Coercion_type" }
                  ,
{ category: "Reference", value: "Colon List",
                    url: " /language/glossary#index-entry-Colon_List" }
                  ,
{ category: "Reference", value: "Colon Pair",
                    url: " /language/glossary#index-entry-Colon_Pair" }
                  ,
{ category: "Reference", value: "Community",
                    url: " /language/community#index-entry-Community" }
                  ,
{ category: "Reference", value: "CompUnit (Rakudo classes)",
                    url: " /language/modules-core#index-entry-CompUnit_%28Rakudo_classes%29" }
                  ,
{ category: "Reference", value: "Constraint",
                    url: " /type/Signature#index-entry-Constraint" }
                  ,
{ category: "Reference", value: "Container identity operator",
                    url: " /language/operators#index-entry-Container_identity_operator" }
                  ,
{ category: "Reference", value: "Core standard library (FAQ)",
                    url: " /language/faq#index-entry-Core_standard_library_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Coroutine (FAQ)",
                    url: " /language/faq#index-entry-Coroutine_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Creating grammars",
                    url: " /language/grammars#index-entry-Creating_grammars" }
                  ,
{ category: "Reference", value: "DEFINITE",
                    url: " /language/classtut#index-entry-DEFINITE" }
                  ,
{ category: "Reference", value: "DEFINITE (syntax)",
                    url: " /language/mop#index-entry-syntax_DEFINITE-DEFINITE" }
                  ,
{ category: "Reference", value: "DESTROY metamodel",
                    url: " /type/Metamodel::Finalization#index-entry-DESTROY_metamodel" }
                  ,
{ category: "Reference", value: "DWIM",
                    url: " /language/glossary#index-entry-DWIM" }
                  ,
{ category: "Reference", value: "DYNAMIC (package)",
                    url: " /language/packages#index-entry-DYNAMIC_%28package%29" }
                  ,
{ category: "Reference", value: "Data::Dumper (FAQ)",
                    url: " /language/faq#index-entry-Data%3A%3ADumper_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Date and time functions",
                    url: " /language/temporal#index-entry-Date_and_time_functions" }
                  ,
{ category: "Reference", value: "Date ranges",
                    url: " /language/temporal#index-entry-Date_ranges" }
                  ,
{ category: "Reference", value: "Divisibility operator",
                    url: " /language/operators#index-entry-Divisibility_operator" }
                  ,
{ category: "Reference", value: "Division operator",
                    url: " /language/operators#index-entry-Division_operator" }
                  ,
{ category: "Reference", value: "Emacs",
                    url: " /language/unicode_entry#index-entry-Emacs" }
                  ,
{ category: "Reference", value: "Encoding::Decoder",
                    url: " /type/Encoding::Registry#index-entry-Encoding%3A%3ADecoder" }
                  ,
{ category: "Reference", value: "Encoding::Encoder",
                    url: " /type/Encoding::Registry#index-entry-Encoding%3A%3AEncoder" }
                  ,
{ category: "Reference", value: "Endian",
                    url: " /type/Endian#index-entry-Endian" }
                  ,
{ category: "Reference", value: "Enumeration",
                    url: " /language/typesystem#index-entry-Enumeration-_Enums-_enum" }
                  ,
{ category: "Reference", value: "Equivalence operator",
                    url: " /language/operators#index-entry-Equivalence_operator" }
                  ,
{ category: "Reference", value: "Exegesis",
                    url: " /language/glossary#index-entry-Exegesis" }
                  ,
{ category: "Reference", value: "FAILGOAL",
                    url: " /language/regexes#index-entry-FAILGOAL" }
                  ,
{ category: "Reference", value: "FALLBACK (method)",
                    url: " /language/typesystem#index-entry-FALLBACK_%28method%29" }
                  ,
{ category: "Reference", value: "FALLBACK (trait handles)",
                    url: " /language/typesystem#index-entry-FALLBACK_%28trait_handles%29-FALLBACK" }
                  ,
{ category: "Reference", value: "FSVO",
                    url: " /language/glossary#index-entry-FSVO" }
                  ,
{ category: "Reference", value: "FTFY",
                    url: " /language/glossary#index-entry-FTFY" }
                  ,
{ category: "Reference", value: "False",
                    url: " /type/Bool#index-entry-False" }
                  ,
{ category: "Reference", value: "Fatal stub operator",
                    url: " /language/operators#index-entry-Fatal_stub_operator" }
                  ,
{ category: "Reference", value: "FileChangeEvent (enum)",
                    url: " /type/IO::Notification#index-entry-FileChangeEvent_%28enum%29" }
                  ,
{ category: "Reference", value: "FileChanged (FileChangeEvent)",
                    url: " /type/IO::Notification#index-entry-FileChanged_%28FileChangeEvent%29" }
                  ,
{ category: "Reference", value: "FileRenamed (FileChangeEvent)",
                    url: " /type/IO::Notification#index-entry-FileRenamed_%28FileChangeEvent%29" }
                  ,
{ category: "Reference", value: "Forward declarations",
                    url: " /language/typesystem#index-entry-Forward_declarations" }
                  ,
{ category: "Reference", value: "Futures",
                    url: " /language/concurrency#index-entry-Futures" }
                  ,
{ category: "Reference", value: "GENERATE-USAGE",
                    url: " /language/create-cli#index-entry-GENERATE-USAGE" }
                  ,
{ category: "Reference", value: "GLOBAL (package)",
                    url: " /language/packages#index-entry-GLOBAL_%28package%29" }
                  ,
{ category: "Reference", value: "Generic, \"smart\" three-way comparator",
                    url: " /language/operators#index-entry-Generic%2C_%22smart%22_three-way_comparator" }
                  ,
{ category: "Reference", value: "Grapheme",
                    url: " /type/Cool#index-entry-Grapheme" }
                  ,
{ category: "Reference", value: "HOW (reserved method)",
                    url: " /language/typesystem#index-entry-HOW_%28reserved_method%29" }
                  ,
{ category: "Reference", value: "HOW (syntax)",
                    url: " /language/mop#index-entry-syntax_HOW-HOW" }
                  ,
{ category: "Reference", value: "IIRC",
                    url: " /language/glossary#index-entry-IIRC" }
                  ,
{ category: "Reference", value: "IMHO",
                    url: " /language/glossary#index-entry-IMHO" }
                  ,
{ category: "Reference", value: "IO::Notification::Change",
                    url: " /type/IO::Notification#index-entry-IO%3A%3ANotification%3A%3AChange" }
                  ,
{ category: "Reference", value: "IPC",
                    url: " /language/ipc#index-entry-IPC" }
                  ,
{ category: "Reference", value: "IRC",
                    url: " /language/glossary#index-entry-IRC" }
                  ,
{ category: "Reference", value: "IWBN",
                    url: " /language/glossary#index-entry-IWBN" }
                  ,
{ category: "Reference", value: "Inf (definition)",
                    url: " /type/Num#index-entry-Inf_%28definition%29" }
                  ,
{ category: "Reference", value: "Integer bitwise OR operator",
                    url: " /language/operators#index-entry-Integer_bitwise_OR_operator" }
                  ,
{ category: "Reference", value: "Integer bitwise XOR operator",
                    url: " /language/operators#index-entry-Integer_bitwise_XOR_operator" }
                  ,
{ category: "Reference", value: "Integer bitwise negation operator",
                    url: " /language/operators#index-entry-Integer_bitwise_negation_operator" }
                  ,
{ category: "Reference", value: "Integer division operator",
                    url: " /language/operators#index-entry-Integer_division_operator" }
                  ,
{ category: "Reference", value: "Integer modulo operator",
                    url: " /language/operators#index-entry-Integer_modulo_operator" }
                  ,
{ category: "Reference", value: "Interface",
                    url: " /language/glossary#index-entry-Interface" }
                  ,
{ category: "Reference", value: "Intersection operator",
                    url: " /language/operators#index-entry-Intersection_operator" }
                  ,
{ category: "Reference", value: "Introspection",
                    url: " /language/mop#index-entry-Introspection" }
                  ,
{ category: "Reference", value: "IterationEnd",
                    url: " /type/Iterator#index-entry-IterationEnd" }
                  ,
{ category: "Reference", value: "Junction (FAQ)",
                    url: " /language/faq#index-entry-Junction_%28FAQ%29" }
                  ,
{ category: "Reference", value: "LEXICAL (package)",
                    url: " /language/packages#index-entry-LEXICAL_%28package%29" }
                  ,
{ category: "Reference", value: "LGTM",
                    url: " /language/glossary#index-entry-LGTM" }
                  ,
{ category: "Reference", value: "LHF",
                    url: " /language/glossary#index-entry-LHF" }
                  ,
{ category: "Reference", value: "LHS",
                    url: " /language/glossary#index-entry-LHS" }
                  ,
{ category: "Reference", value: "LTA",
                    url: " /language/glossary#index-entry-LTA" }
                  ,
{ category: "Reference", value: "Left-open range operator",
                    url: " /language/operators#index-entry-Left-open_range_operator" }
                  ,
{ category: "Reference", value: "Less",
                    url: " /type/Order#index-entry-Less" }
                  ,
{ category: "Reference", value: "Lexing",
                    url: " /language/glossary#index-entry-Lexing" }
                  ,
{ category: "Reference", value: "List assignment operator",
                    url: " /language/operators#index-entry-List_assignment_operator" }
                  ,
{ category: "Reference", value: "List repetition operator",
                    url: " /language/operators#index-entry-List_repetition_operator" }
                  ,
{ category: "Reference", value: "Literal",
                    url: " /language/glossary#index-entry-Literal" }
                  ,
{ category: "Reference", value: "LittleEndian",
                    url: " /type/Endian#index-entry-LittleEndian" }
                  ,
{ category: "Reference", value: "Long names",
                    url: " /type/Signature#index-entry-Long_names" }
                  ,
{ category: "Reference", value: "Loose",
                    url: " /language/glossary#index-entry-Loose" }
                  ,
{ category: "Reference", value: "MAIN",
                    url: " /language/create-cli#index-entry-MAIN" }
                  ,
{ category: "Reference", value: "META6.json",
                    url: " /language/modules#index-entry-META6.json-META6.json" }
                  ,
{ category: "Reference", value: "MMD",
                    url: " /language/glossary#index-entry-MMD" }
                  ,
{ category: "Reference", value: "MOP",
                    url: " /language/mop#index-entry-MOP" }
                  ,
{ category: "Reference", value: "MY (package)",
                    url: " /language/packages#index-entry-MY_%28package%29" }
                  ,
{ category: "Reference", value: "Mainline",
                    url: " /language/glossary#index-entry-Mainline" }
                  ,
{ category: "Reference", value: "Mayspec",
                    url: " /language/glossary#index-entry-Mayspec" }
                  ,
{ category: "Reference", value: "Member",
                    url: " /language/objects#index-entry-Member" }
                  ,
{ category: "Reference", value: "Membership operator",
                    url: " /language/operators#index-entry-Membership_operator" }
                  ,
{ category: "Reference", value: "Mixins",
                    url: " /language/objects#index-entry-Mixins" }
                  ,
{ category: "Reference", value: "MoarVM",
                    url: " /language/glossary#index-entry-MoarVM" }
                  ,
{ category: "Reference", value: "Modulo operator",
                    url: " /language/operators#index-entry-Modulo_operator" }
                  ,
{ category: "Reference", value: "More",
                    url: " /type/Order#index-entry-More" }
                  ,
{ category: "Reference", value: "Multi-Dispatch",
                    url: " /language/glossary#index-entry-Multi-Dispatch" }
                  ,
{ category: "Reference", value: "Multiplication operator",
                    url: " /language/operators#index-entry-Multiplication_operator" }
                  ,
{ category: "Reference", value: "NFC",
                    url: " /language/unicode#index-entry-NFC" }
                  ,
{ category: "Reference", value: "NQP",
                    url: " /language/glossary#index-entry-NQP" }
                  ,
{ category: "Reference", value: "NQP (FAQ)",
                    url: " /language/faq#index-entry-NQP_%28FAQ%29" }
                  ,
{ category: "Reference", value: "NST",
                    url: " /language/glossary#index-entry-NST" }
                  ,
{ category: "Reference", value: "NYI",
                    url: " /language/glossary#index-entry-NYI" }
                  ,
{ category: "Reference", value: "NaN (definition)",
                    url: " /type/Num#index-entry-NaN_%28definition%29-NaN" }
                  ,
{ category: "Reference", value: "NativeEndian",
                    url: " /type/Endian#index-entry-NativeEndian" }
                  ,
{ category: "Reference", value: "Negated boolean context operator",
                    url: " /language/operators#index-entry-Negated_boolean_context_operator" }
                  ,
{ category: "Reference", value: "Negative numeric context operator",
                    url: " /language/operators#index-entry-Negative_numeric_context_operator" }
                  ,
{ category: "Reference", value: "Niecza",
                    url: " /language/glossary#index-entry-Niecza" }
                  ,
{ category: "Reference", value: "Nil assignment",
                    url: " /type/Nil#index-entry-Nil_assignment" }
                  ,
{ category: "Reference", value: "Non-membership operator",
                    url: " /language/operators#index-entry-Non-membership_operator" }
                  ,
{ category: "Reference", value: "Normalization",
                    url: " /language/unicode#index-entry-Normalization" }
                  ,
{ category: "Reference", value: "Not Quite Perl",
                    url: " /language/glossary#index-entry-Not_Quite_Perl" }
                  ,
{ category: "Reference", value: "Not a subset of nor equal to operator",
                    url: " /language/operators#index-entry-Not_a_subset_of_nor_equal_to_operator" }
                  ,
{ category: "Reference", value: "Not a subset of operator",
                    url: " /language/operators#index-entry-Not_a_subset_of_operator" }
                  ,
{ category: "Reference", value: "Not a superset of nor equal to operator",
                    url: " /language/operators#index-entry-Not_a_superset_of_nor_equal_to_operator" }
                  ,
{ category: "Reference", value: "Not a superset of operator",
                    url: " /language/operators#index-entry-Not_a_superset_of_operator" }
                  ,
{ category: "Reference", value: "Number (literals)",
                    url: " /language/syntax#index-entry-Number_%28literals%29" }
                  ,
{ category: "Reference", value: "Number literals",
                    url: " /language/syntax#index-entry-Number_literals" }
                  ,
{ category: "Reference", value: "Numeric bitwise AND operator",
                    url: " /language/operators#index-entry-Numeric_bitwise_AND_operator" }
                  ,
{ category: "Reference", value: "Numeric context operator",
                    url: " /language/operators#index-entry-Numeric_context_operator" }
                  ,
{ category: "Reference", value: "Numeric equality operator",
                    url: " /language/operators#index-entry-Numeric_equality_operator" }
                  ,
{ category: "Reference", value: "Numeric greater than operator",
                    url: " /language/operators#index-entry-Numeric_greater_than_operator" }
                  ,
{ category: "Reference", value: "Numeric greater than or equal to operator",
                    url: " /language/operators#index-entry-Numeric_greater_than_or_equal_to_operator" }
                  ,
{ category: "Reference", value: "Numeric inequality operator",
                    url: " /language/operators#index-entry-Numeric_inequality_operator" }
                  ,
{ category: "Reference", value: "Numeric less than operator",
                    url: " /language/operators#index-entry-Numeric_less_than_operator" }
                  ,
{ category: "Reference", value: "Numeric less than or equal to operator",
                    url: " /language/operators#index-entry-Numeric_less_than_or_equal_to_operator" }
                  ,
{ category: "Reference", value: "Numeric three-way comparator",
                    url: " /language/operators#index-entry-Numeric_three-way_comparator" }
                  ,
{ category: "Reference", value: "OOP",
                    url: " /language/classtut#index-entry-OOP" }
                  ,
{ category: "Reference", value: "OUR (package)",
                    url: " /language/packages#index-entry-OUR_%28package%29" }
                  ,
{ category: "Reference", value: "OUTER (package)",
                    url: " /language/packages#index-entry-OUTER_%28package%29" }
                  ,
{ category: "Reference", value: "OUTERS (package)",
                    url: " /language/packages#index-entry-OUTERS_%28package%29" }
                  ,
{ category: "Reference", value: "One junction operator",
                    url: " /language/operators#index-entry-One_junction_operator" }
                  ,
{ category: "Reference", value: "Open range operator",
                    url: " /language/operators#index-entry-Open_range_operator" }
                  ,
{ category: "Reference", value: "Operator",
                    url: " /language/glossary#index-entry-Operator" }
                  ,
{ category: "Reference", value: "Opt",
                    url: " /language/glossary#index-entry-Opt" }
                  ,
{ category: "Reference", value: "Overriding default gist method",
                    url: " /language/classtut#index-entry-Overriding_default_gist_method" }
                  ,
{ category: "Reference", value: "P5",
                    url: " /language/glossary#index-entry-P5" }
                  ,
{ category: "Reference", value: "P6",
                    url: " /language/glossary#index-entry-P6" }
                  ,
{ category: "Reference", value: "P6opaque",
                    url: " /language/traits#index-entry-P6opaque" }
                  ,
{ category: "Reference", value: "PARENT (package)",
                    url: " /language/packages#index-entry-PARENT_%28package%29" }
                  ,
{ category: "Reference", value: "PAST",
                    url: " /language/glossary#index-entry-PAST" }
                  ,
{ category: "Reference", value: "PATH",
                    url: " /programs/03-environment-variables#index-entry-PATH" }
                  ,
{ category: "Reference", value: "PB",
                    url: " /language/glossary#index-entry-PB" }
                  ,
{ category: "Reference", value: "PERL",
                    url: " /language/glossary#index-entry-PERL" }
                  ,
{ category: "Reference", value: "PERL6LIB",
                    url: " /programs/03-environment-variables#index-entry-PERL6LIB" }
                  ,
{ category: "Reference", value: "PERL6_EXCEPTIONS_HANDLER",
                    url: " /programs/03-environment-variables#index-entry-PERL6__EXCEPTIONS__HANDLER" }
                  ,
{ category: "Reference", value: "POD",
                    url: " /language/glossary#index-entry-POD" }
                  ,
{ category: "Reference", value: "POSIX (FAQ)",
                    url: " /language/faq#index-entry-POSIX_%28FAQ%29" }
                  ,
{ category: "Reference", value: "POV",
                    url: " /language/glossary#index-entry-POV" }
                  ,
{ category: "Reference", value: "PR",
                    url: " /language/glossary#index-entry-PR" }
                  ,
{ category: "Reference", value: "PROCESS (package)",
                    url: " /language/packages#index-entry-PROCESS_%28package%29" }
                  ,
{ category: "Reference", value: "Pair",
                    url: " /type/Pair#index-entry-Pair" }
                  ,
{ category: "Reference", value: "Pair literals",
                    url: " /language/syntax#index-entry-Pair_literals" }
                  ,
{ category: "Reference", value: "Pairs (literals)",
                    url: " /language/syntax#index-entry-Pairs_%28literals%29" }
                  ,
{ category: "Reference", value: "Parameter",
                    url: " /language/glossary#index-entry-Parameter" }
                  ,
{ category: "Reference", value: "Parameterized Roles",
                    url: " /language/objects#index-entry-Parameterized_Roles" }
                  ,
{ category: "Reference", value: "Parrot",
                    url: " /language/glossary#index-entry-Parrot" }
                  ,
{ category: "Reference", value: "Parse Tree",
                    url: " /language/glossary#index-entry-Parse_Tree" }
                  ,
{ category: "Reference", value: "Perl",
                    url: " /language/glossary#index-entry-Perl" }
                  ,
{ category: "Reference", value: "Perl¬†5 modules (FAQ)",
                    url: " /language/faq#index-entry-Perl%C2%A05_modules_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Perl¬†6 Distribution (FAQ)",
                    url: " /language/faq#index-entry-Perl%C2%A06_Distribution_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Perl¬†6 Implementation (FAQ)",
                    url: " /language/faq#index-entry-Perl%C2%A06_Implementation_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Phasers (control flow)",
                    url: " /language/control#index-entry-control_flow_Phasers-Phasers" }
                  ,
{ category: "Reference", value: "Precompile (FAQ)",
                    url: " /language/faq#index-entry-Precompile_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Property",
                    url: " /language/objects#index-entry-Property" }
                  ,
{ category: "Reference", value: "Propspec",
                    url: " /language/glossary#index-entry-Propspec" }
                  ,
{ category: "Reference", value: "Pull request",
                    url: " /language/glossary#index-entry-Pull_request" }
                  ,
{ category: "Reference", value: "Python",
                    url: " /language/py-nutshell#index-entry-Python-Control_flow" }
                  ,
{ category: "Reference", value: "Q (quote)",
                    url: " /language/quoting#index-entry-quote_Q-quote_%EF%BD%A2_%EF%BD%A3-Literal_strings%3A_Q" }
                  ,
{ category: "Reference", value: "QAST",
                    url: " /language/glossary#index-entry-QAST" }
                  ,
{ category: "Reference", value: "RAKUDOLIB",
                    url: " /programs/03-environment-variables#index-entry-RAKUDOLIB" }
                  ,
{ category: "Reference", value: "RAKUDO_BACKTRACE_SETTING",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__BACKTRACE__SETTING" }
                  ,
{ category: "Reference", value: "RAKUDO_DEFAULT_READ_ELEMS",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__DEFAULT__READ__ELEMS" }
                  ,
{ category: "Reference", value: "RAKUDO_DEPRECATIONS_FATAL",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__DEPRECATIONS__FATAL" }
                  ,
{ category: "Reference", value: "RAKUDO_DISABLE_MULTILINE",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__DISABLE__MULTILINE" }
                  ,
{ category: "Reference", value: "RAKUDO_ERROR_COLOR",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__ERROR__COLOR" }
                  ,
{ category: "Reference", value: "RAKUDO_HIST",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__HIST" }
                  ,
{ category: "Reference", value: "RAKUDO_LINE_EDITOR",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__LINE__EDITOR" }
                  ,
{ category: "Reference", value: "RAKUDO_LOG_PRECOMP",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__LOG__PRECOMP" }
                  ,
{ category: "Reference", value: "RAKUDO_MAX_THREADS",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__MAX__THREADS" }
                  ,
{ category: "Reference", value: "RAKUDO_MODULE_DEBUG",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__MODULE__DEBUG" }
                  ,
{ category: "Reference", value: "RAKUDO_NO_DEPRECATIONS",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__NO__DEPRECATIONS" }
                  ,
{ category: "Reference", value: "RAKUDO_PRECOMP_DIST",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__PRECOMP__DIST" }
                  ,
{ category: "Reference", value: "RAKUDO_PRECOMP_LOADING",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__PRECOMP__LOADING" }
                  ,
{ category: "Reference", value: "RAKUDO_PRECOMP_WITH",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__PRECOMP__WITH" }
                  ,
{ category: "Reference", value: "RAKUDO_PREFIX",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__PREFIX" }
                  ,
{ category: "Reference", value: "RAKUDO_SNAPPER",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__SNAPPER" }
                  ,
{ category: "Reference", value: "RAKUDO_VERBOSE_STACKFRAME",
                    url: " /programs/03-environment-variables#index-entry-RAKUDO__VERBOSE__STACKFRAME" }
                  ,
{ category: "Reference", value: "RHS",
                    url: " /language/glossary#index-entry-RHS" }
                  ,
{ category: "Reference", value: "RSN",
                    url: " /language/glossary#index-entry-RSN" }
                  ,
{ category: "Reference", value: "RT",
                    url: " /language/glossary#index-entry-RT" }
                  ,
{ category: "Reference", value: "RUN-MAIN",
                    url: " /language/create-cli#index-entry-RUN-MAIN" }
                  ,
{ category: "Reference", value: "Raku",
                    url: " /language/glossary#index-entry-Raku" }
                  ,
{ category: "Reference", value: "Rakudo",
                    url: " /language/glossary#index-entry-Rakudo" }
                  ,
{ category: "Reference", value: "Rakudo Star DMG binary installer (FAQ)",
                    url: " /language/faq#index-entry-Rakudo_Star_DMG_binary_installer_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Rakudo Star MSI binary installer (FAQ)",
                    url: " /language/faq#index-entry-Rakudo_Star_MSI_binary_installer_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Rakudo Star distribution and compiler-only release (FAQ)",
                    url: " /language/faq#index-entry-Rakudo_Star_distribution_and_compiler-only_release_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Rakudo Star docker image (FAQ)",
                    url: " /language/faq#index-entry-Rakudo_Star_docker_image_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Rakudo Star for Linux (FAQ)",
                    url: " /language/faq#index-entry-Rakudo_Star_for_Linux_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Rakudo Star for Mac (FAQ)",
                    url: " /language/faq#index-entry-Rakudo_Star_for_Mac_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Rakudo Star for Windows (FAQ)",
                    url: " /language/faq#index-entry-Rakudo_Star_for_Windows_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Rakudo Star release cycle (FAQ)",
                    url: " /language/faq#index-entry-Rakudo_Star_release_cycle_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Range operator",
                    url: " /language/operators#index-entry-Range_operator" }
                  ,
{ category: "Reference", value: "Read-only binding operator",
                    url: " /language/operators#index-entry-Read-only_binding_operator" }
                  ,
{ category: "Reference", value: "Regular Expressions",
                    url: " /language/regexes#index-entry-Regular_Expressions" }
                  ,
{ category: "Reference", value: "Reify",
                    url: " /language/glossary#index-entry-Reify" }
                  ,
{ category: "Reference", value: "Repository",
                    url: " /language/glossary#index-entry-Repository" }
                  ,
{ category: "Reference", value: "Right-open range operator",
                    url: " /language/operators#index-entry-Right-open_range_operator" }
                  ,
{ category: "Reference", value: "Ruby Quickstart (FAQ)",
                    url: " /language/faq#index-entry-Ruby_Quickstart_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Running programs",
                    url: " /language/ipc#index-entry-Running_programs" }
                  ,
{ category: "Reference", value: "SAP",
                    url: " /language/glossary#index-entry-SAP" }
                  ,
{ category: "Reference", value: "SETGOAL",
                    url: " /language/regexes#index-entry-SETGOAL" }
                  ,
{ category: "Reference", value: "SETTING (package)",
                    url: " /language/packages#index-entry-SETTING_%28package%29" }
                  ,
{ category: "Reference", value: "STD",
                    url: " /language/glossary#index-entry-STD" }
                  ,
{ category: "Reference", value: "S\/\/\/",
                    url: " /language/operators#index-entry-S%2F%2F%2F_non-destructive_substitution" }
                  ,
{ category: "Reference", value: "Safe call operator",
                    url: " /language/operators#index-entry-Safe_call_operator" }
                  ,
{ category: "Reference", value: "Same",
                    url: " /type/Order#index-entry-Same" }
                  ,
{ category: "Reference", value: "SeekFromBeginning",
                    url: " /type/IO::Handle#index-entry-SeekFromBeginning" }
                  ,
{ category: "Reference", value: "SeekFromCurrent",
                    url: " /type/IO::Handle#index-entry-SeekFromCurrent" }
                  ,
{ category: "Reference", value: "SeekFromEnd",
                    url: " /type/IO::Handle#index-entry-SeekFromEnd" }
                  ,
{ category: "Reference", value: "Semilist",
                    url: " /language/glossary#index-entry-Semilist" }
                  ,
{ category: "Reference", value: "Set difference operator",
                    url: " /language/operators#index-entry-Set_difference_operator" }
                  ,
{ category: "Reference", value: "Shaped arrays",
                    url: " /language/list#index-entry-Shaped_arrays" }
                  ,
{ category: "Reference", value: "ShiftJIS",
                    url: " /type/IO::Handle#index-entry-ShiftJIS" }
                  ,
{ category: "Reference", value: "Short-circuit exclusive-or",
                    url: " /language/operators#index-entry-Short-circuit_exclusive-or" }
                  ,
{ category: "Reference", value: "Sigil",
                    url: " /language/glossary#index-entry-Sigil" }
                  ,
{ category: "Reference", value: "Sigilless Variable",
                    url: " /language/glossary#index-entry-Sigilless_Variable" }
                  ,
{ category: "Reference", value: "Sigils (FAQ)",
                    url: " /language/faq#index-entry-Sigils_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Signal",
                    url: " /type/Supply#index-entry-Signal" }
                  ,
{ category: "Reference", value: "Single Argument Rule",
                    url: " /language/list#index-entry-Single_Argument_Rule" }
                  ,
{ category: "Reference", value: "Slot",
                    url: " /language/objects#index-entry-Slot" }
                  ,
{ category: "Reference", value: "Special Variables (Perl¬†5)",
                    url: " /language/5to6-perlvar#index-entry-Special_Variables_%28Perl%C2%A05%29" }
                  ,
{ category: "Reference", value: "Specification (FAQ)",
                    url: " /language/faq#index-entry-Specification_%28FAQ%29" }
                  ,
{ category: "Reference", value: "Spesh",
                    url: " /language/glossary#index-entry-Spesh" }
                  ,
{ category: "Reference", value: "String (literals)",
                    url: " /language/syntax#index-entry-String_%28literals%29" }
                  ,
{ category: "Reference", value: "String context operator",
                    url: " /language/operators#index-entry-String_context_operator" }
                  ,
{ category: "Reference", value: "String equality operator",
                    url: " /language/operators#index-entry-String_equality_operator" }
                  ,
{ category: "Reference", value: "String greater than operator",
                    url: " /language/operators#index-entry-String_greater_than_operator" }
                  ,
{ category: "Reference", value: "String greater than or equal to operator",
                    url: " /language/operators#index-entry-String_greater_than_or_equal_to_operator" }
                  ,
{ category: "Reference", value: "String inequality operator",
                    url: " /language/operators#index-entry-String_inequality_operator" }
                  ,
{ category: "Reference", value: "String less than operator",
                    url: " /language/operators#index-entry-String_less_than_operator" }
                  ,
{ category: "Reference", value: "String less than or equal to operator",
                    url: " /language/operators#index-entry-String_less_than_or_equal_to_operator" }
                  ,
{ category: "Reference", value: "String repetition operator",
                    url: " /language/operators#index-entry-String_repetition_operator" }
                  ,
{ category: "Reference", value: "String three-way comparator",
                    url: " /language/operators#index-entry-String_three-way_comparator" }
                  ,
{ category: "Reference", value: "Stub",
                    url: " /language/glossary#index-entry-Stub" }
                  ,
{ category: "Reference", value: "Subset of operator",
                    url: " /language/operators#index-entry-Subset_of_operator" }
                  ,
{ category: "Reference", value: "Subset of or equal to operator",
                    url: " /language/operators#index-entry-Subset_of_or_equal_to_operator" }
                  ,
{ category: "Reference", value: "Subtraction operator",
                    url: " /language/operators#index-entry-Subtraction_operator" }
                  ,
{ category: "Reference", value: "Superset of operator",
                    url: " /language/operators#index-entry-Superset_of_operator" }
                  ,
{ category: "Reference", value: "Superset of or equal to operator",
                    url: " /language/operators#index-entry-Superset_of_or_equal_to_operator" }
                  ,
{ category: "Reference", value: "Symbol",
                    url: " /language/glossary#index-entry-Symbol" }
                  ,
{ category: "Reference", value: "Symmetric set difference operator",
                    url: " /language/operators#index-entry-Symmetric_set_difference_operator" }
                  ,
{ category: "Reference", value: "Synopsis",
                    url: " /language/glossary#index-entry-Synopsis" }
                  ,
{ category: "Reference", value: "Syntax Analysis",
                    url: " /language/glossary#index-entry-Syntax_Analysis" }
                  ,
{ category: "Reference", value: "TEMP",
                    url: " /programs/03-environment-variables#index-entry-TEMP" }
                  ,
{ category: "Reference", value: "TIMTOWTDI",
                    url: " /language/glossary#index-entry-TIMTOWTDI" }
                  ,
{ category: "Reference", value: "TMI",
                    url: " /language/glossary#index-entry-TMI" }
                  ,
{ category: "Reference", value: "TMP",
                    url: " /programs/03-environment-variables#index-entry-TMP" }
                  ,
{ category: "Reference", value: "TMPDIR",
                    url: " /programs/03-environment-variables#index-entry-TMPDIR" }
                  ,
{ category: "Reference", value: "TMTOWTDI",
                    url: " /language/glossary#index-entry-TMTOWTDI" }
                  ,
{ category: "Reference", value: "TOP",
                    url: " /language/grammars#index-entry-TOP-TOP" }
                  ,
{ category: "Reference", value: "TR\/\/\/",
                    url: " /language/operators#index-entry-TR%2F%2F%2F_non-destructive_transliteration" }
                  ,
{ category: "Reference", value: "TWEAK",
                    url: " /language/objects#index-entry-TWEAK" }
                  ,
{ category: "Reference", value: "Texas operator",
                    url: " /language/glossary#index-entry-Texas_operator" }
                  ,
{ category: "Reference", value: "Thunk",
                    url: " /language/glossary#index-entry-Thunk" }
                  ,
{ category: "Reference", value: "Tight",
                    url: " /language/glossary#index-entry-Tight" }
                  ,
{ category: "Reference", value: "Trait is default",
                    url: " /type/Attribute#index-entry-Trait_is_default" }
                  ,
{ category: "Reference", value: "True",
                    url: " /type/Bool#index-entry-True" }
                  ,
{ category: "Reference", value: "Twigil",
                    url: " /language/variables#index-entry-Twigil" }
                  ,
{ category: "Reference", value: "Type Capture (role)",
                    url: " /language/typesystem#index-entry-Type_Capture_%28role%29" }
                  ,
{ category: "Reference", value: "Type capture",
                    url: " /type/Signature#index-entry-Type_capture" }
                  ,
{ category: "Reference", value: "UB",
                    url: " /language/glossary#index-entry-UB" }
                  ,
{ category: "Reference", value: "UGT",
                    url: " /language/glossary#index-entry-UGT" }
                  ,
{ category: "Reference", value: "UNIT (package)",
                    url: " /language/packages#index-entry-UNIT_%28package%29" }
                  ,
{ category: "Reference", value: "UNIX library functions (FAQ)",
                    url: " /language/faq#index-entry-UNIX_library_functions_%28FAQ%29" }
                  ,
{ category: "Reference", value: "USAGE",
                    url: " /language/create-cli#index-entry-USAGE" }
                  ,
{ category: "Reference", value: "UTF-8 Clean-8",
                    url: " /language/unicode#index-entry-UTF-8_Clean-8" }
                  ,
{ category: "Reference", value: "UTF8-C8",
                    url: " /language/unicode#index-entry-UTF8-C8" }
                  ,
{ category: "Reference", value: "Uninstantiable representation trait",
                    url: " /language/traits#index-entry-Uninstantiable_representation_trait" }
                  ,
{ category: "Reference", value: "Union operator",
                    url: " /language/operators#index-entry-Union_operator" }
                  ,
{ category: "Reference", value: "Unspace (syntax)",
                    url: " /language/syntax#index-entry-syntax_Unspace" }
                  ,
{ category: "Reference", value: "VAR (reserved method)",
                    url: " /language/typesystem#index-entry-VAR_%28reserved_method%29" }
                  ,
{ category: "Reference", value: "VAR (syntax)",
                    url: " /language/mop#index-entry-syntax_VAR-VAR" }
                  ,
{ category: "Reference", value: "Value",
                    url: " /language/glossary#index-entry-Value" }
                  ,
{ category: "Reference", value: "Value identity operator",
                    url: " /language/operators#index-entry-Value_identity_operator" }
                  ,
{ category: "Reference", value: "Value type",
                    url: " /language/glossary#index-entry-Value_type" }
                  ,
{ category: "Reference", value: "Variable",
                    url: " /language/glossary#index-entry-Variable" }
                  ,
{ category: "Reference", value: "Variable Interpolation",
                    url: " /language/glossary#index-entry-Variable_Interpolation" }
                  ,
{ category: "Reference", value: "Vim",
                    url: " /language/unicode_entry#index-entry-Vim" }
                  ,
{ category: "Reference", value: "Virtual Machine",
                    url: " /language/glossary#index-entry-Virtual_Machine" }
                  ,
{ category: "Reference", value: "WAT",
                    url: " /language/glossary#index-entry-WAT" }
                  ,
{ category: "Reference", value: "WFM",
                    url: " /language/glossary#index-entry-WFM" }
                  ,
{ category: "Reference", value: "WHAT (reserved method)",
                    url: " /language/typesystem#index-entry-WHAT_%28reserved_method%29" }
                  ,
{ category: "Reference", value: "WHAT (syntax)",
                    url: " /language/mop#index-entry-syntax_WHAT-WHAT" }
                  ,
{ category: "Reference", value: "WHERE (syntax)",
                    url: " /language/mop#index-entry-syntax_WHERE-WHERE" }
                  ,
{ category: "Reference", value: "WHICH (syntax)",
                    url: " /language/mop#index-entry-syntax_WHICH-WHICH" }
                  ,
{ category: "Reference", value: "WHO (reserved method)",
                    url: " /language/typesystem#index-entry-WHO_%28reserved_method%29" }
                  ,
{ category: "Reference", value: "WHO (syntax)",
                    url: " /language/mop#index-entry-syntax_WHO-WHO" }
                  ,
{ category: "Reference", value: "WHY (syntax)",
                    url: " /language/mop#index-entry-syntax_WHY-WHY" }
                  ,
{ category: "Reference", value: "WIP",
                    url: " /language/glossary#index-entry-WIP" }
                  ,
{ category: "Reference", value: "WP",
                    url: " /language/glossary#index-entry-WP" }
                  ,
{ category: "Reference", value: "WW",
                    url: " /language/glossary#index-entry-WW" }
                  ,
{ category: "Reference", value: "WinCompose",
                    url: " /language/unicode_entry#index-entry-WinCompose" }
                  ,
{ category: "Reference", value: "X (cross metaoperator)",
                    url: " /language/operators#index-entry-X_%28cross_metaoperator%29" }
                  ,
{ category: "Reference", value: "X::Proc::Async::OpenForWriting",
                    url: " /type/X::Proc::Async::OpenForWriting#index-entry-X%3A%3AProc%3A%3AAsync%3A%3AOpenForWriting" }
                  ,
{ category: "Reference", value: "XCompose",
                    url: " /language/unicode_entry#index-entry-XCompose" }
                  ,
{ category: "Reference", value: "Z (zip metaoperator)",
                    url: " /language/operators#index-entry-Z_%28zip_metaoperator%29" }
                  ,
{ category: "Reference", value: "Zen slice (Basics)",
                    url: " /language/101-basics#index-entry-Zen_slice_%28Basics%29-Zen_slice" }
                  ,
{ category: "Reference", value: "Zen slices",
                    url: " /language/subscripts#index-entry-Zen_slices" }
                  ,
{ category: "Reference", value: "Zip operator",
                    url: " /language/operators#index-entry-Zip_operator" }
                  ,
{ category: "Reference", value: "[ ] (regex)",
                    url: " /language/regexes#index-entry-regex_%5B_%5D-Non-capturing_grouping" }
                  ,
{ category: "Reference", value: "[ ] (typed array)",
                    url: " /language/list#index-entry-%5B_%5D_%28typed_array%29" }
                  ,
{ category: "Reference", value: "[+] (reduction metaoperators)",
                    url: " /language/operators#index-entry-%5B%2B%5D_%28reduction_metaoperators%29" }
                  ,
{ category: "Reference", value: "[\\] (triangular reduction metaoperators)",
                    url: " /language/operators#index-entry-%5B%5C%5D_%28triangular_reduction_metaoperators%29" }
                  ,
{ category: "Reference", value: "[] (reduction metaoperators)",
                    url: " /language/operators#index-entry-%5B%5D_%28reduction_metaoperators%29" }
                  ,
{ category: "Reference", value: "\" \" (quote)",
                    url: " /language/quoting#index-entry-quote_qq-quote_%22_%22-Interpolation%3A_qq" }
                  ,
{ category: "Reference", value: "\/ \/ (quote)",
                    url: " /language/regexes#index-entry-quote_%2F_%2F-quote_rx-quote_m-Lexical_conventions" }
                  ,
{ category: "Reference", value: "\/\/",
                    url: " /language/operators#index-entry-%2F%2F-infix_%2F%2F" }
                  ,
{ category: "Reference", value: "\\ (container binding)",
                    url: " /language/containers#index-entry-%5C_%28container_binding%29" }
                  ,
{ category: "Reference", value: "\\ (quoting)",
                    url: " /language/quoting#index-entry-%5C_%28quoting%29" }
                  ,
{ category: "Reference", value: "\\ (sigilless scalar)",
                    url: " /type/Scalar#index-entry-%5C_%28sigilless_scalar%29" }
                  ,
{ category: "Reference", value: "\\ (sigilless variables)",
                    url: " /language/variables#index-entry-%5C_%28sigilless_variables%29" }
                  ,
{ category: "Reference", value: "\\ (syntax)",
                    url: " /language/syntax#index-entry-syntax_%5C-Unspace" }
                  ,
{ category: "Reference", value: "\\() (Capture)",
                    url: " /type/Capture#index-entry-%5C%28%29_%28Capture%29" }
                  ,
{ category: "Reference", value: "\\B (regex deprecated)",
                    url: " /language/regexes#index-entry-regex_deprecated_%5CB-%5CB" }
                  ,
{ category: "Reference", value: "\\D (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cd-regex_%5CD-%5Cd_and_%5CD" }
                  ,
{ category: "Reference", value: "\\H (regex)",
                    url: " /language/regexes#index-entry-regex_%5Ch-regex_%5CH-%5Ch_and_%5CH" }
                  ,
{ category: "Reference", value: "\\K (regex deprecated)",
                    url: " /language/regexes#index-entry-regex_deprecated_%5CK-%5CK" }
                  ,
{ category: "Reference", value: "\\N (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cn-regex_%5CN-%5Cn_and_%5CN" }
                  ,
{ category: "Reference", value: "\\S (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cs-regex_%5CS-%5Cs_and_%5CS" }
                  ,
{ category: "Reference", value: "\\T (regex)",
                    url: " /language/regexes#index-entry-regex_%5Ct-regex_%5CT-%5Ct_and_%5CT" }
                  ,
{ category: "Reference", value: "\\V (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cv-regex_%5CV-%5Cv_and_%5CV" }
                  ,
{ category: "Reference", value: "\\W (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cw-regex_%5CW-%5Cw_and_%5CW" }
                  ,
{ category: "Reference", value: "\\b (regex deprecated)",
                    url: " /language/regexes#index-entry-regex_deprecated_%5Cb-%5Cb" }
                  ,
{ category: "Reference", value: "\\c[] unicode name",
                    url: " /language/unicode#index-entry-%5Cc%5B%5D_unicode_name" }
                  ,
{ category: "Reference", value: "\\d (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cd-regex_%5CD-%5Cd_and_%5CD" }
                  ,
{ category: "Reference", value: "\\h (regex)",
                    url: " /language/regexes#index-entry-regex_%5Ch-regex_%5CH-%5Ch_and_%5CH" }
                  ,
{ category: "Reference", value: "\\n (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cn-regex_%5CN-%5Cn_and_%5CN" }
                  ,
{ category: "Reference", value: "\\s (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cs-regex_%5CS-%5Cs_and_%5CS" }
                  ,
{ category: "Reference", value: "\\t (regex)",
                    url: " /language/regexes#index-entry-regex_%5Ct-regex_%5CT-%5Ct_and_%5CT" }
                  ,
{ category: "Reference", value: "\\v (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cv-regex_%5CV-%5Cv_and_%5CV" }
                  ,
{ category: "Reference", value: "\\w (regex)",
                    url: " /language/regexes#index-entry-regex_%5Cw-regex_%5CW-%5Cw_and_%5CW" }
                  ,
{ category: "Reference", value: "^ (regex)",
                    url: " /language/regexes#index-entry-regex_%5E-regex_%24-Start_of_string_and_end_of_string" }
                  ,
{ category: "Reference", value: "^^ (regex)",
                    url: " /language/regexes#index-entry-regex_%5E%5E-regex_%24%24-Start_of_line_and_end_of_line" }
                  ,
{ category: "Reference", value: "^methods",
                    url: " /language/classtut#index-entry-%5Emethods" }
                  ,
{ category: "Reference", value: "accessor methods",
                    url: " /language/classtut#index-entry-accessor_methods" }
                  ,
{ category: "Reference", value: "accessors (classes)",
                    url: " /language/classtut#index-entry-classes_accessors" }
                  ,
{ category: "Reference", value: "accessors (twigils)",
                    url: " /language/classtut#index-entry-twigils_accessors" }
                  ,
{ category: "Reference", value: "after (regex)",
                    url: " /language/regexes#index-entry-regex_after-Lookbehind_assertions" }
                  ,
{ category: "Reference", value: "aliases",
                    url: " /type/Signature#index-entry-aliases" }
                  ,
{ category: "Reference", value: "also declarator",
                    url: " /language/classtut#index-entry-also_declarator-also" }
                  ,
{ category: "Reference", value: "and",
                    url: " /language/operators#index-entry-and" }
                  ,
{ category: "Reference", value: "andthen",
                    url: " /language/operators#index-entry-andthen" }
                  ,
{ category: "Reference", value: "anon state variables",
                    url: " /language/variables#index-entry-anon_state_variables" }
                  ,
{ category: "Reference", value: "anonymous arguments",
                    url: " /type/Signature#index-entry-anonymous_arguments" }
                  ,
{ category: "Reference", value: "array",
                    url: " /language/101-basics#index-entry-array" }
                  ,
{ category: "Reference", value: "array indexing operator",
                    url: " /language/operators#index-entry-array_indexing_operator-array_subscript_operator-array_indexing_operator" }
                  ,
{ category: "Reference", value: "array subscript operator",
                    url: " /language/operators#index-entry-array_indexing_operator-array_subscript_operator-array_indexing_operator" }
                  ,
{ category: "Reference", value: "ascii",
                    url: " /type/IO::Handle#index-entry-ascii" }
                  ,
{ category: "Reference", value: "assignment",
                    url: " /language/101-basics#index-entry-assignment" }
                  ,
{ category: "Reference", value: "attributes",
                    url: " /language/classtut#index-entry-attributes" }
                  ,
{ category: "Reference", value: "attributes (classes)",
                    url: " /language/classtut#index-entry-classes_attributes" }
                  ,
{ category: "Reference", value: "autopun",
                    url: " /language/glossary#index-entry-autopun" }
                  ,
{ category: "Reference", value: "autovivification",
                    url: " /language/101-basics#index-entry-autovivification" }
                  ,
{ category: "Reference", value: "backlog",
                    url: " /language/glossary#index-entry-backlog" }
                  ,
{ category: "Reference", value: "before (regex)",
                    url: " /language/regexes#index-entry-regex_before-Lookahead_assertions" }
                  ,
{ category: "Reference", value: "behavior",
                    url: " /language/classtut#index-entry-behavior" }
                  ,
{ category: "Reference", value: "behavior (classes)",
                    url: " /language/classtut#index-entry-classes_behavior" }
                  ,
{ category: "Reference", value: "bless",
                    url: " /language/classtut#index-entry-bless" }
                  ,
{ category: "Reference", value: "bless (objects)",
                    url: " /language/classtut#index-entry-objects_bless" }
                  ,
{ category: "Reference", value: "block",
                    url: " /language/101-basics#index-entry-block" }
                  ,
{ category: "Reference", value: "block (Basics)",
                    url: " /language/101-basics#index-entry-block_%28Basics%29-block" }
                  ,
{ category: "Reference", value: "block constructor",
                    url: " /language/operators#index-entry-block_constructor-hash_constructor" }
                  ,
{ category: "Reference", value: "buf16",
                    url: " /type/Buf#index-entry-buf16" }
                  ,
{ category: "Reference", value: "buf32",
                    url: " /type/Buf#index-entry-buf32" }
                  ,
{ category: "Reference", value: "buf64",
                    url: " /type/Buf#index-entry-buf64" }
                  ,
{ category: "Reference", value: "buf8",
                    url: " /type/Buf#index-entry-buf8" }
                  ,
{ category: "Reference", value: "but",
                    url: " /language/objects#index-entry-but" }
                  ,
{ category: "Reference", value: "byte",
                    url: " /language/nativetypes#index-entry-byte" }
                  ,
{ category: "Reference", value: "bytecode",
                    url: " /language/glossary#index-entry-bytecode" }
                  ,
{ category: "Reference", value: "call operator",
                    url: " /language/operators#index-entry-call_operator" }
                  ,
{ category: "Reference", value: "callsame (dispatch)",
                    url: " /language/functions#index-entry-dispatch_callsame" }
                  ,
{ category: "Reference", value: "callwith (dispatch)",
                    url: " /language/functions#index-entry-dispatch_callwith" }
                  ,
{ category: "Reference", value: "capture literal (Capture)",
                    url: " /type/Capture#index-entry-capture_literal_%28Capture%29" }
                  ,
{ category: "Reference", value: "circumfix operator",
                    url: " /language/operators#index-entry-circumfix_operator" }
                  ,
{ category: "Reference", value: "class",
                    url: " /language/classtut#index-entry-class" }
                  ,
{ category: "Reference", value: "class (declarator)",
                    url: " /language/objects#index-entry-declarator_class-Classes" }
                  ,
{ category: "Reference", value: "class variables",
                    url: " /language/classtut#index-entry-class_variables" }
                  ,
{ category: "Reference", value: "class-qualified method call",
                    url: " /language/operators#index-entry-class-qualified_method_call" }
                  ,
{ category: "Reference", value: "classes",
                    url: " /language/classtut#index-entry-classes" }
                  ,
{ category: "Reference", value: "closures",
                    url: " /language/functions#index-entry-closures" }
                  ,
{ category: "Reference", value: "collation levels",
                    url: " /type/Any#index-entry-collation_levels" }
                  ,
{ category: "Reference", value: "colon list (Pair)",
                    url: " /type/Pair#index-entry-colon_list_%28Pair%29" }
                  ,
{ category: "Reference", value: "colon pair (Pair)",
                    url: " /type/Pair#index-entry-colon_pair_%28Pair%29" }
                  ,
{ category: "Reference", value: "command line arguments",
                    url: " /language/create-cli#index-entry-command_line_arguments" }
                  ,
{ category: "Reference", value: "compilation unit",
                    url: " /language/glossary#index-entry-compilation_unit" }
                  ,
{ category: "Reference", value: "compunit",
                    url: " /language/modules#index-entry-compunit" }
                  ,
{ category: "Reference", value: "compunit (glossary)",
                    url: " /language/glossary#index-entry-compunit_%28glossary%29" }
                  ,
{ category: "Reference", value: "conditional (operator)",
                    url: " /language/operators#index-entry-operator_conditional" }
                  ,
{ category: "Reference", value: "constant (Prefix)",
                    url: " /language/variables#index-entry-constant_%28Prefix%29" }
                  ,
{ category: "Reference", value: "constant (Terms)",
                    url: " /language/terms#index-entry-constant_%28Terms%29" }
                  ,
{ category: "Reference", value: "constructors",
                    url: " /language/classtut#index-entry-constructors" }
                  ,
{ category: "Reference", value: "cross product operator",
                    url: " /language/operators#index-entry-cross_product_operator" }
                  ,
{ category: "Reference", value: "dd",
                    url: " /programs/01-debugging#index-entry-dd" }
                  ,
{ category: "Reference", value: "declarator",
                    url: " /language/functions#index-entry-declarator-proto" }
                  ,
{ category: "Reference", value: "declaring a list of variables",
                    url: " /language/variables#index-entry-declaring_a_list_of_variables" }
                  ,
{ category: "Reference", value: "decont",
                    url: " /language/glossary#index-entry-decont" }
                  ,
{ category: "Reference", value: "default when (control flow)",
                    url: " /language/control#index-entry-control_flow_default_when-default_and_when" }
                  ,
{ category: "Reference", value: "defined (method)",
                    url: " /type/Mu#index-entry-method_defined" }
                  ,
{ category: "Reference", value: "defined-or operator",
                    url: " /language/operators#index-entry-defined-or_operator-defined-or_operator" }
                  ,
{ category: "Reference", value: "deref",
                    url: " /language/nativecall#index-entry-deref-.deref" }
                  ,
{ category: "Reference", value: "destructuring arguments",
                    url: " /type/Signature#index-entry-destructuring_arguments" }
                  ,
{ category: "Reference", value: "destructuring assignment",
                    url: " /language/variables#index-entry-destructuring_assignment" }
                  ,
{ category: "Reference", value: "diffy",
                    url: " /language/glossary#index-entry-diffy" }
                  ,
{ category: "Reference", value: "do (control flow)",
                    url: " /language/control#index-entry-control_flow_do-do" }
                  ,
{ category: "Reference", value: "do (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-do_%28statement_prefix%29-do" }
                  ,
{ category: "Reference", value: "does",
                    url: " /language/objects#index-entry-does" }
                  ,
{ category: "Reference", value: "does-ok",
                    url: " /language/testing#index-entry-does-ok-does-ok%28%24variable%2C_%24role%2C_%24description%3F%29" }
                  ,
{ category: "Reference", value: "done",
                    url: " /language/routines#index-entry-done" }
                  ,
{ category: "Reference", value: "double-quoted strings",
                    url: " /language/101-basics#index-entry-double-quoted_strings" }
                  ,
{ category: "Reference", value: "dumper",
                    url: " /programs/01-debugging#index-entry-dumper" }
                  ,
{ category: "Reference", value: "dynamic subset",
                    url: " /language/typesystem#index-entry-dynamic_subset" }
                  ,
{ category: "Reference", value: "eager (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-eager_%28statement_prefix%29-eager" }
                  ,
{ category: "Reference", value: "ecosystem",
                    url: " /language/faq#index-entry-ecosystem" }
                  ,
{ category: "Reference", value: "else elsif (control flow)",
                    url: " /language/control#index-entry-control_flow_else_elsif-else%2Felsif" }
                  ,
{ category: "Reference", value: "emit",
                    url: " /language/routines#index-entry-emit" }
                  ,
{ category: "Reference", value: "empty list (())",
                    url: " /type/List#index-entry-%28%29_empty_list" }
                  ,
{ category: "Reference", value: "empty set",
                    url: " /language/terms#index-entry-empty_set" }
                  ,
{ category: "Reference", value: "encapsulation",
                    url: " /language/classtut#index-entry-encapsulation" }
                  ,
{ category: "Reference", value: "encapsulation (classes)",
                    url: " /language/classtut#index-entry-classes_encapsulation" }
                  ,
{ category: "Reference", value: "error variable",
                    url: " /language/variables#index-entry-error_variable" }
                  ,
{ category: "Reference", value: "escaping characters",
                    url: " /language/regexes#index-entry-escaping_characters" }
                  ,
{ category: "Reference", value: "escaping quote",
                    url: " /language/quoting#index-entry-escaping_quote" }
                  ,
{ category: "Reference", value: "exponentiation operator",
                    url: " /language/operators#index-entry-exponentiation_operator" }
                  ,
{ category: "Reference", value: "extra named arguments",
                    url: " /type/Method#index-entry-extra_named_arguments" }
                  ,
{ category: "Reference", value: "fat arrow",
                    url: " /language/101-basics#index-entry-fat_arrow" }
                  ,
{ category: "Reference", value: "feed",
                    url: " /language/operators#index-entry-feed" }
                  ,
{ category: "Reference", value: "fiddly",
                    url: " /language/glossary#index-entry-fiddly" }
                  ,
{ category: "Reference", value: "filehandle",
                    url: " /language/101-basics#index-entry-filehandle" }
                  ,
{ category: "Reference", value: "flap",
                    url: " /language/glossary#index-entry-flap" }
                  ,
{ category: "Reference", value: "flattening ",
                    url: " /language/subscripts#index-entry-flattening_" }
                  ,
{ category: "Reference", value: "flipflop (operator)",
                    url: " /language/operators#index-entry-operator_flipflop" }
                  ,
{ category: "Reference", value: "foo",
                    url: " /language/about#index-entry-foo-foo" }
                  ,
{ category: "Reference", value: "for (Basics)",
                    url: " /language/101-basics#index-entry-for_%28Basics%29-for" }
                  ,
{ category: "Reference", value: "fossil",
                    url: " /language/glossary#index-entry-fossil" }
                  ,
{ category: "Reference", value: "function composition operator",
                    url: " /language/operators#index-entry-function_composition_operator" }
                  ,
{ category: "Reference", value: "gather (lazy list)",
                    url: " /language/control#index-entry-lazy_list_gather" }
                  ,
{ category: "Reference", value: "gather (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-gather_%28statement_prefix%29-gather" }
                  ,
{ category: "Reference", value: "gather take (control flow)",
                    url: " /language/control#index-entry-control_flow_gather_take-gather%2Ftake" }
                  ,
{ category: "Reference", value: "given statement (control flow)",
                    url: " /language/control#index-entry-control_flow_given_statement-given_as_a_statement" }
                  ,
{ category: "Reference", value: "gradual typing",
                    url: " /language/glossary#index-entry-gradual_typing" }
                  ,
{ category: "Reference", value: "grammar ( declarator)",
                    url: " /language/grammars#index-entry-%3Asym%3C%3E-_proto_regex-_declarator_grammar-Proto_regexes" }
                  ,
{ category: "Reference", value: "greatest common divisor operator",
                    url: " /language/operators#index-entry-greatest_common_divisor_operator" }
                  ,
{ category: "Reference", value: "grouping operator",
                    url: " /language/operators#index-entry-grouping_operator" }
                  ,
{ category: "Reference", value: "handles trait",
                    url: " /language/typesystem#index-entry-handles_trait-handles" }
                  ,
{ category: "Reference", value: "has",
                    url: " /language/classtut#index-entry-has" }
                  ,
{ category: "Reference", value: "has (classes)",
                    url: " /language/classtut#index-entry-classes_has" }
                  ,
{ category: "Reference", value: "hash",
                    url: " /language/101-basics#index-entry-hash" }
                  ,
{ category: "Reference", value: "hash constructor",
                    url: " /language/operators#index-entry-block_constructor-hash_constructor" }
                  ,
{ category: "Reference", value: "hash indexing operator",
                    url: " /language/operators#index-entry-hash_indexing_operator-hash_subscript_operator-hash_indexing_operator" }
                  ,
{ category: "Reference", value: "hash subscript operator",
                    url: " /language/operators#index-entry-hash_indexing_operator-hash_subscript_operator-hash_indexing_operator" }
                  ,
{ category: "Reference", value: "heredocs :to (quote)",
                    url: " /language/quoting#index-entry-quote_heredocs_%3Ato-Heredocs%3A_%3Ato" }
                  ,
{ category: "Reference", value: "hidden-from-USAGE",
                    url: " /language/create-cli#index-entry-hidden-from-USAGE" }
                  ,
{ category: "Reference", value: "hyper (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-hyper_%28statement_prefix%29-hyper" }
                  ,
{ category: "Reference", value: "hyper method call operator",
                    url: " /language/operators#index-entry-hyper_method_call_operator" }
                  ,
{ category: "Reference", value: "ibus",
                    url: " /language/unicode_entry#index-entry-ibus" }
                  ,
{ category: "Reference", value: "identifier (Basics)",
                    url: " /language/101-basics#index-entry-identifier_%28Basics%29-identifier" }
                  ,
{ category: "Reference", value: "identifiers (identifier)",
                    url: " /language/syntax#index-entry-identifier_identifiers-Identifiers" }
                  ,
{ category: "Reference", value: "if (control flow)",
                    url: " /language/control#index-entry-control_flow_if-if" }
                  ,
{ category: "Reference", value: "iffy",
                    url: " /language/glossary#index-entry-iffy" }
                  ,
{ category: "Reference", value: "import",
                    url: " /language/module-packages#index-entry-import" }
                  ,
{ category: "Reference", value: "in-range",
                    url: " /type/Range#index-entry-in-range" }
                  ,
{ category: "Reference", value: "indirect invocant syntax",
                    url: " /language/objects#index-entry-indirect_invocant_syntax" }
                  ,
{ category: "Reference", value: "infix operator",
                    url: " /language/operators#index-entry-infix_operator" }
                  ,
{ category: "Reference", value: "instance",
                    url: " /language/glossary#index-entry-instance" }
                  ,
{ category: "Reference", value: "int",
                    url: " /language/nativetypes#index-entry-int" }
                  ,
{ category: "Reference", value: "int @",
                    url: " /language/nativetypes#index-entry-int_%40" }
                  ,
{ category: "Reference", value: "int16",
                    url: " /language/nativetypes#index-entry-int16" }
                  ,
{ category: "Reference", value: "int32",
                    url: " /language/nativetypes#index-entry-int32" }
                  ,
{ category: "Reference", value: "int64",
                    url: " /language/nativetypes#index-entry-int64" }
                  ,
{ category: "Reference", value: "int8",
                    url: " /language/nativetypes#index-entry-int8" }
                  ,
{ category: "Reference", value: "interpolating into names",
                    url: " /language/packages#index-entry-interpolating_into_names" }
                  ,
{ category: "Reference", value: "interpolation",
                    url: " /language/101-basics#index-entry-interpolation" }
                  ,
{ category: "Reference", value: "invocant",
                    url: " /language/classtut#index-entry-invocant" }
                  ,
{ category: "Reference", value: "invocant (Basics)",
                    url: " /language/101-basics#index-entry-invocant_%28Basics%29-invocant" }
                  ,
{ category: "Reference", value: "is (classes)",
                    url: " /language/typesystem#index-entry-classes_is-trait_is" }
                  ,
{ category: "Reference", value: "is (trait)",
                    url: " /language/traits#index-entry-is_%28trait%29-is_trait" }
                  ,
{ category: "Reference", value: "is (type of variable)",
                    url: " /language/variables#index-entry-is_%28type_of_variable%29" }
                  ,
{ category: "Reference", value: "is DEPRECATED (Attribute) (trait)",
                    url: " /type/Attribute#index-entry-trait_is_DEPRECATED_%28Attribute%29-trait_is_DEPRECATED" }
                  ,
{ category: "Reference", value: "is assoc (trait)",
                    url: " /language/functions#index-entry-is_assoc_%28trait%29" }
                  ,
{ category: "Reference", value: "is copy (trait)",
                    url: " /type/Signature#index-entry-trait_is_copy" }
                  ,
{ category: "Reference", value: "is default (Attribute)",
                    url: " /type/Attribute#index-entry-is_default_%28Attribute%29" }
                  ,
{ category: "Reference", value: "is default (Routine)",
                    url: " /type/Routine#index-entry-is_default_%28Routine%29" }
                  ,
{ category: "Reference", value: "is default (Variable)",
                    url: " /type/Variable#index-entry-is_default_%28Variable%29-trait_is_default" }
                  ,
{ category: "Reference", value: "is equiv",
                    url: " /language/functions#index-entry-is_equiv" }
                  ,
{ category: "Reference", value: "is itemized?",
                    url: " /language/mop#index-entry-is_itemized%3F" }
                  ,
{ category: "Reference", value: "is looser",
                    url: " /language/functions#index-entry-is_looser" }
                  ,
{ category: "Reference", value: "is nativesize",
                    url: " /language/nativetypes#index-entry-is_nativesize" }
                  ,
{ category: "Reference", value: "is readonly (trait)",
                    url: " /type/Signature#index-entry-trait_is_readonly" }
                  ,
{ category: "Reference", value: "is repr",
                    url: " /language/nativecall#index-entry-is_repr" }
                  ,
{ category: "Reference", value: "is required (Attribute) (trait)",
                    url: " /type/Attribute#index-entry-trait_is_required_%28Attribute%29-Trait_is_required" }
                  ,
{ category: "Reference", value: "is rw (Attribute) (trait)",
                    url: " /type/Attribute#index-entry-trait_is_rw_%28Attribute%29-trait_is_rw" }
                  ,
{ category: "Reference", value: "is rw (class)",
                    url: " /language/typesystem#index-entry-is_rw_%28class%29-is_rw" }
                  ,
{ category: "Reference", value: "is rw (trait)",
                    url: " /type/Signature#index-entry-trait_is_rw" }
                  ,
{ category: "Reference", value: "is rw (traits)",
                    url: " /language/classtut#index-entry-traits_is_rw" }
                  ,
{ category: "Reference", value: "is tighter",
                    url: " /language/functions#index-entry-is_tighter" }
                  ,
{ category: "Reference", value: "iso-8859-1",
                    url: " /type/IO::Handle#index-entry-iso-8859-1" }
                  ,
{ category: "Reference", value: "item =",
                    url: " /language/operators#index-entry-item_%3D" }
                  ,
{ category: "Reference", value: "laziness in Iterable objects",
                    url: " /language/list#index-entry-laziness_in_Iterable_objects" }
                  ,
{ category: "Reference", value: "lazy (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-lazy_%28statement_prefix%29-lazy" }
                  ,
{ category: "Reference", value: "least common multiple operator",
                    url: " /language/operators#index-entry-least_common_multiple_operator" }
                  ,
{ category: "Reference", value: "left (integer bit shift operator)",
                    url: " /language/operators#index-entry-integer_bit_shift_operator_left" }
                  ,
{ category: "Reference", value: "leftward feed",
                    url: " /language/operators#index-entry-leftward_feed" }
                  ,
{ category: "Reference", value: "lexical",
                    url: " /language/101-basics#index-entry-lexical" }
                  ,
{ category: "Reference", value: "link (method)",
                    url: " /type/IO::Path#index-entry-link_%28method%29" }
                  ,
{ category: "Reference", value: "link (sub)",
                    url: " /type/IO::Path#index-entry-link_%28sub%29" }
                  ,
{ category: "Reference", value: "list =",
                    url: " /language/operators#index-entry-list_%3D" }
                  ,
{ category: "Reference", value: "m (quote)",
                    url: " /language/regexes#index-entry-quote_%2F_%2F-quote_rx-quote_m-Lexical_conventions" }
                  ,
{ category: "Reference", value: "macros",
                    url: " /language/experimental#index-entry-macros-macros" }
                  ,
{ category: "Reference", value: "mandatory named argument",
                    url: " /type/Signature#index-entry-mandatory_named_argument" }
                  ,
{ category: "Reference", value: "match variable",
                    url: " /language/variables#index-entry-match_variable" }
                  ,
{ category: "Reference", value: "meta-method call",
                    url: " /language/operators#index-entry-meta-method_call" }
                  ,
{ category: "Reference", value: "method (Basics)",
                    url: " /language/101-basics#index-entry-method_%28Basics%29-method" }
                  ,
{ category: "Reference", value: "method (declarator)",
                    url: " /language/typesystem#index-entry-method_%28declarator%29" }
                  ,
{ category: "Reference", value: "method call",
                    url: " /language/operators#index-entry-method_call" }
                  ,
{ category: "Reference", value: "method operators",
                    url: " /language/operators#index-entry-method_operators" }
                  ,
{ category: "Reference", value: "methodop .&",
                    url: " /language/operators#index-entry-methodop_.%26" }
                  ,
{ category: "Reference", value: "methodop .*",
                    url: " /language/operators#index-entry-methodop_.%2A" }
                  ,
{ category: "Reference", value: "methodop .+",
                    url: " /language/operators#index-entry-methodop_.%2B" }
                  ,
{ category: "Reference", value: "methodop .?",
                    url: " /language/operators#index-entry-methodop_.%3F" }
                  ,
{ category: "Reference", value: "methodop .^",
                    url: " /language/operators#index-entry-methodop_.%5E" }
                  ,
{ category: "Reference", value: "methodop >>.",
                    url: " /language/operators#index-entry-methodop_%3E%3E." }
                  ,
{ category: "Reference", value: "methodop ¬ª.",
                    url: " /language/operators#index-entry-methodop_%C2%BB." }
                  ,
{ category: "Reference", value: "methods",
                    url: " /language/classtut#index-entry-methods" }
                  ,
{ category: "Reference", value: "methods (classes)",
                    url: " /language/classtut#index-entry-classes_methods" }
                  ,
{ category: "Reference", value: "module (declarator)",
                    url: " /language/syntax#index-entry-declarator_unit-declarator_module-declarator_package-Package%2C_Module%2C_Class%2C_Role%2C_and_Grammar_declaration" }
                  ,
{ category: "Reference", value: "multi (declarator)",
                    url: " /language/functions#index-entry-declarator_multi-Multi-dispatch" }
                  ,
{ category: "Reference", value: "multi-method",
                    url: " /language/glossary#index-entry-multi-method" }
                  ,
{ category: "Reference", value: "mutating method call",
                    url: " /language/operators#index-entry-mutating_method_call" }
                  ,
{ category: "Reference", value: "my (Sub)",
                    url: " /type/Sub#index-entry-my_%28Sub%29" }
                  ,
{ category: "Reference", value: "named argument",
                    url: " /type/Signature#index-entry-named_argument" }
                  ,
{ category: "Reference", value: "named regex",
                    url: " /type/Regex#index-entry-named_regex" }
                  ,
{ category: "Reference", value: "named-anywhere",
                    url: " /language/create-cli#index-entry-named-anywhere" }
                  ,
{ category: "Reference", value: "nameless variables",
                    url: " /language/variables#index-entry-nameless_variables" }
                  ,
{ category: "Reference", value: "native array",
                    url: " /language/nativetypes#index-entry-native_array" }
                  ,
{ category: "Reference", value: "nativecall",
                    url: " /language/nativecall#index-entry-nativecall" }
                  ,
{ category: "Reference", value: "need",
                    url: " /language/modules#index-entry-need" }
                  ,
{ category: "Reference", value: "new (method)",
                    url: " /language/objects#index-entry-new_%28method%29" }
                  ,
{ category: "Reference", value: "nextcallee (dispatch)",
                    url: " /language/functions#index-entry-dispatch_nextcallee" }
                  ,
{ category: "Reference", value: "nextsame (dispatch)",
                    url: " /language/functions#index-entry-dispatch_nextsame" }
                  ,
{ category: "Reference", value: "nextwith (dispatch)",
                    url: " /language/functions#index-entry-dispatch_nextwith" }
                  ,
{ category: "Reference", value: "non-string keys",
                    url: " /language/hashmap#index-entry-non-string_keys" }
                  ,
{ category: "Reference", value: "notandthen",
                    url: " /language/operators#index-entry-notandthen" }
                  ,
{ category: "Reference", value: "num",
                    url: " /language/nativetypes#index-entry-num" }
                  ,
{ category: "Reference", value: "num @",
                    url: " /language/nativetypes#index-entry-num_%40" }
                  ,
{ category: "Reference", value: "num32",
                    url: " /language/nativetypes#index-entry-num32" }
                  ,
{ category: "Reference", value: "num64",
                    url: " /language/nativetypes#index-entry-num64" }
                  ,
{ category: "Reference", value: "number context",
                    url: " /language/contexts#index-entry-number_context" }
                  ,
{ category: "Reference", value: "object hash",
                    url: " /language/hashmap#index-entry-object_hash" }
                  ,
{ category: "Reference", value: "once (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-once_%28statement_prefix%29-once" }
                  ,
{ category: "Reference", value: "only method",
                    url: " /language/typesystem#index-entry-only_method" }
                  ,
{ category: "Reference", value: "opcode",
                    url: " /language/glossary#index-entry-opcode" }
                  ,
{ category: "Reference", value: "operators (...)",
                    url: " /language/operators#index-entry-..._operators" }
                  ,
{ category: "Reference", value: "operators (...^)",
                    url: " /language/operators#index-entry-...%5E_operators" }
                  ,
{ category: "Reference", value: "operators (X)",
                    url: " /language/operators#index-entry-X_operators" }
                  ,
{ category: "Reference", value: "operators (‚Ä¶)",
                    url: " /language/operators#index-entry-%E2%80%A6_operators" }
                  ,
{ category: "Reference", value: "operators (‚Ä¶^)",
                    url: " /language/operators#index-entry-%E2%80%A6%5E_operators" }
                  ,
{ category: "Reference", value: "optional argument",
                    url: " /type/Signature#index-entry-optional_argument" }
                  ,
{ category: "Reference", value: "orelse",
                    url: " /language/operators#index-entry-orelse" }
                  ,
{ category: "Reference", value: "our (Sub)",
                    url: " /type/Sub#index-entry-our_%28Sub%29" }
                  ,
{ category: "Reference", value: "p6doc",
                    url: " /programs/02-reading-docs#index-entry-p6doc-INTRODUCTION" }
                  ,
{ category: "Reference", value: "p6doc (FAQ)",
                    url: " /language/faq#index-entry-p6doc_%28FAQ%29" }
                  ,
{ category: "Reference", value: "p6y",
                    url: " /language/glossary#index-entry-p6y" }
                  ,
{ category: "Reference", value: "pack",
                    url: " /language/experimental#index-entry-pack-pack" }
                  ,
{ category: "Reference", value: "package (::)",
                    url: " /language/packages#index-entry-%3A%3A_package" }
                  ,
{ category: "Reference", value: "package (declarator)",
                    url: " /language/syntax#index-entry-declarator_unit-declarator_module-declarator_package-Package%2C_Module%2C_Class%2C_Role%2C_and_Grammar_declaration" }
                  ,
{ category: "Reference", value: "pair",
                    url: " /language/101-basics#index-entry-pair" }
                  ,
{ category: "Reference", value: "pair constructor",
                    url: " /language/operators#index-entry-pair_constructor" }
                  ,
{ category: "Reference", value: "perldoc (FAQ)",
                    url: " /language/faq#index-entry-perldoc_%28FAQ%29" }
                  ,
{ category: "Reference", value: "positional argument",
                    url: " /type/Signature#index-entry-positional_argument" }
                  ,
{ category: "Reference", value: "postcircumfix operator",
                    url: " /language/operators#index-entry-postcircumfix_operator" }
                  ,
{ category: "Reference", value: "postfix ++",
                    url: " /language/operators#index-entry-postfix_%2B%2B-%2B%2B" }
                  ,
{ category: "Reference", value: "postfix call",
                    url: " /language/operators#index-entry-postfix_call" }
                  ,
{ category: "Reference", value: "postfix decrement operator",
                    url: " /language/operators#index-entry-postfix_decrement_operator" }
                  ,
{ category: "Reference", value: "postfix increment operator",
                    url: " /language/operators#index-entry-postfix_increment_operator" }
                  ,
{ category: "Reference", value: "postfix operator",
                    url: " /language/operators#index-entry-postfix_operator" }
                  ,
{ category: "Reference", value: "postincrement",
                    url: " /language/101-basics#index-entry-postincrement" }
                  ,
{ category: "Reference", value: "prefix &",
                    url: " /language/functions#index-entry-prefix_%26" }
                  ,
{ category: "Reference", value: "prefix ++",
                    url: " /language/operators#index-entry-prefix_%2B%2B-%2B%2B" }
                  ,
{ category: "Reference", value: "prefix decrement operator",
                    url: " /language/operators#index-entry-prefix_decrement_operator" }
                  ,
{ category: "Reference", value: "prefix increment operator",
                    url: " /language/operators#index-entry-prefix_increment_operator" }
                  ,
{ category: "Reference", value: "prefix operator",
                    url: " /language/operators#index-entry-prefix_operator" }
                  ,
{ category: "Reference", value: "preincrement",
                    url: " /language/101-basics#index-entry-preincrement" }
                  ,
{ category: "Reference", value: "pugs",
                    url: " /language/glossary#index-entry-pugs" }
                  ,
{ category: "Reference", value: "put (Basics)",
                    url: " /language/101-basics#index-entry-put_%28Basics%29-put" }
                  ,
{ category: "Reference", value: "q (quote)",
                    url: " /language/quoting#index-entry-quote_q-quote_%27_%27-Escaping%3A_q" }
                  ,
{ category: "Reference", value: "qq (quote)",
                    url: " /language/quoting#index-entry-quote_qq-quote_%22_%22-Interpolation%3A_qq" }
                  ,
{ category: "Reference", value: "qqw (quote)",
                    url: " /language/quoting#index-entry-quote_qqw-Word_quoting_with_interpolation%3A_qqw" }
                  ,
{ category: "Reference", value: "qqww (quote)",
                    url: " /language/quoting#index-entry-quote_qqww-Word_quoting_with_interpolation_and_quote_protection%3A_qqww" }
                  ,
{ category: "Reference", value: "qqx (quote)",
                    url: " /language/quoting#index-entry-quote_qqx-Shell_quoting_with_interpolation%3A_qqx" }
                  ,
{ category: "Reference", value: "qr (Perl¬†5)",
                    url: " /language/5to6-perlfunc#index-entry-qr_%28Perl%C2%A05%29" }
                  ,
{ category: "Reference", value: "quasi (macros)",
                    url: " /language/experimental#index-entry-quasi_%28macros%29" }
                  ,
{ category: "Reference", value: "quietly (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-quietly_%28statement_prefix%29-quietly" }
                  ,
{ category: "Reference", value: "quote-words",
                    url: " /language/operators#index-entry-qw-quote-words-quote-words" }
                  ,
{ category: "Reference", value: "qw",
                    url: " /language/operators#index-entry-qw-quote-words-quote-words" }
                  ,
{ category: "Reference", value: "qw word quote",
                    url: " /language/quoting#index-entry-qw_word_quote" }
                  ,
{ category: "Reference", value: "qww (quote)",
                    url: " /language/quoting#index-entry-quote_qww-Word_quoting_with_quote_protection%3A_qww" }
                  ,
{ category: "Reference", value: "qx (quote)",
                    url: " /language/quoting#index-entry-quote_qx-Shell_quoting%3A_qx" }
                  ,
{ category: "Reference", value: "race (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-race_%28statement_prefix%29-race" }
                  ,
{ category: "Reference", value: "rakudobrew (FAQ)",
                    url: " /language/faq#index-entry-rakudobrew_%28FAQ%29" }
                  ,
{ category: "Reference", value: "react",
                    url: " /language/concurrency#index-entry-react" }
                  ,
{ category: "Reference", value: "react (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-react_%28statement_prefix%29-react" }
                  ,
{ category: "Reference", value: "regex (declarator)",
                    url: " /language/regexes#index-entry-declarator_regex-Subrules" }
                  ,
{ category: "Reference", value: "repeat (control flow)",
                    url: " /language/control#index-entry-control_flow_repeat-repeat%2Fwhile%2C_repeat%2Funtil" }
                  ,
{ category: "Reference", value: "repr",
                    url: " /language/nativecall#index-entry-repr" }
                  ,
{ category: "Reference", value: "require",
                    url: " /language/modules#index-entry-require" }
                  ,
{ category: "Reference", value: "resume (Exceptions)",
                    url: " /language/exceptions#index-entry-resume_%28Exceptions%29" }
                  ,
{ category: "Reference", value: "return (control flow)",
                    url: " /language/control#index-entry-control_flow_return-return" }
                  ,
{ category: "Reference", value: "return-rw",
                    url: " /type/Routine#index-entry-return-rw-return-rw" }
                  ,
{ category: "Reference", value: "reverse metaoperator (R)",
                    url: " /language/operators#index-entry-R_reverse_metaoperator" }
                  ,
{ category: "Reference", value: "right (integer bit shift operator)",
                    url: " /language/operators#index-entry-integer_bit_shift_operator_right" }
                  ,
{ category: "Reference", value: "roast",
                    url: " /language/glossary#index-entry-roast" }
                  ,
{ category: "Reference", value: "role",
                    url: " /language/glossary#index-entry-role" }
                  ,
{ category: "Reference", value: "role (declarator)",
                    url: " /language/objects#index-entry-declarator_role-Roles" }
                  ,
{ category: "Reference", value: "role (typesystem) (declarator)",
                    url: " /language/typesystem#index-entry-declarator_role_%28typesystem%29" }
                  ,
{ category: "Reference", value: "rule",
                    url: " /language/glossary#index-entry-rule" }
                  ,
{ category: "Reference", value: "rule (declarator)",
                    url: " /language/grammars#index-entry-declarator_rule-Rules" }
                  ,
{ category: "Reference", value: "rvalue",
                    url: " /language/glossary#index-entry-rvalue" }
                  ,
{ category: "Reference", value: "rx (quote)",
                    url: " /language/regexes#index-entry-quote_%2F_%2F-quote_rx-quote_m-Lexical_conventions" }
                  ,
{ category: "Reference", value: "s\/ \/ \/ (quote)",
                    url: " /language/regexes#index-entry-quote_s%2F_%2F_%2F-Lexical_conventions" }
                  ,
{ category: "Reference", value: "s\/\/\/",
                    url: " /language/operators#index-entry-s%2F%2F%2F_in-place_substitution" }
                  ,
{ category: "Reference", value: "samewith (dispatch)",
                    url: " /language/functions#index-entry-dispatch_samewith" }
                  ,
{ category: "Reference", value: "say (Basics)",
                    url: " /language/101-basics#index-entry-say_%28Basics%29-say" }
                  ,
{ category: "Reference", value: "scalar",
                    url: " /language/101-basics#index-entry-scalar" }
                  ,
{ category: "Reference", value: "self",
                    url: " /language/objects#index-entry-self" }
                  ,
{ category: "Reference", value: "sequence operator",
                    url: " /language/operators#index-entry-sequence_operator" }
                  ,
{ category: "Reference", value: "sequential metaoperator (S)",
                    url: " /language/operators#index-entry-S_sequential_metaoperator" }
                  ,
{ category: "Reference", value: "sigil",
                    url: " /language/101-basics#index-entry-sigil" }
                  ,
{ category: "Reference", value: "signature literal",
                    url: " /type/Signature#index-entry-signature_literal" }
                  ,
{ category: "Reference", value: "single-quoted strings",
                    url: " /language/101-basics#index-entry-single-quoted_strings" }
                  ,
{ category: "Reference", value: "sink (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-sink_%28statement_prefix%29-sink" }
                  ,
{ category: "Reference", value: "sink context",
                    url: " /language/contexts#index-entry-sink_context" }
                  ,
{ category: "Reference", value: "sinking",
                    url: " /language/contexts#index-entry-sinking" }
                  ,
{ category: "Reference", value: "slurpy argument",
                    url: " /type/Signature#index-entry-slurpy_argument" }
                  ,
{ category: "Reference", value: "smartmatch operator",
                    url: " /language/operators#index-entry-smartmatch_operator" }
                  ,
{ category: "Reference", value: "spaceship operator",
                    url: " /language/operators#index-entry-spaceship_operator" }
                  ,
{ category: "Reference", value: "stable sort",
                    url: " /language/101-basics#index-entry-stable_sort" }
                  ,
{ category: "Reference", value: "start (control flow)",
                    url: " /language/control#index-entry-control_flow_start-start" }
                  ,
{ category: "Reference", value: "start (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-start_%28statement_prefix%29-start" }
                  ,
{ category: "Reference", value: "state",
                    url: " /language/classtut#index-entry-state" }
                  ,
{ category: "Reference", value: "statement (Basics)",
                    url: " /language/101-basics#index-entry-statement_%28Basics%29-statement" }
                  ,
{ category: "Reference", value: "str",
                    url: " /language/nativetypes#index-entry-str" }
                  ,
{ category: "Reference", value: "str @",
                    url: " /language/nativetypes#index-entry-str_%40" }
                  ,
{ category: "Reference", value: "string concatenation operator",
                    url: " /language/operators#index-entry-string_concatenation_operator" }
                  ,
{ category: "Reference", value: "string context",
                    url: " /language/contexts#index-entry-string_context" }
                  ,
{ category: "Reference", value: "string literal",
                    url: " /language/101-basics#index-entry-string_literal" }
                  ,
{ category: "Reference", value: "stub operator",
                    url: " /language/operators#index-entry-stub_operator" }
                  ,
{ category: "Reference", value: "sub (declarator)",
                    url: " /language/functions#index-entry-declarator_sub-Subroutines" }
                  ,
{ category: "Reference", value: "sub EXPORT",
                    url: " /language/modules#index-entry-sub_EXPORT" }
                  ,
{ category: "Reference", value: "sub-signature",
                    url: " /type/Signature#index-entry-sub-signature" }
                  ,
{ category: "Reference", value: "subset",
                    url: " /language/typesystem#index-entry-subset-subset" }
                  ,
{ category: "Reference", value: "supersede",
                    url: " /language/variables#index-entry-supersede" }
                  ,
{ category: "Reference", value: "supply (on-demand)",
                    url: " /language/concurrency#index-entry-supply_%28on-demand%29" }
                  ,
{ category: "Reference", value: "supply (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-supply_%28statement_prefix%29-supply" }
                  ,
{ category: "Reference", value: "supply emit (control flow)",
                    url: " /language/control#index-entry-control_flow_supply_emit-supply%2Femit" }
                  ,
{ category: "Reference", value: "switch (given)",
                    url: " /language/control#index-entry-switch_%28given%29" }
                  ,
{ category: "Reference", value: "symlink (method)",
                    url: " /type/IO::Path#index-entry-symlink_%28method%29" }
                  ,
{ category: "Reference", value: "symlink (sub)",
                    url: " /type/IO::Path#index-entry-symlink_%28sub%29" }
                  ,
{ category: "Reference", value: "take (lazy list)",
                    url: " /language/control#index-entry-lazy_list_take" }
                  ,
{ category: "Reference", value: "ternary (operator)",
                    url: " /language/operators#index-entry-operator_ternary" }
                  ,
{ category: "Reference", value: "test suite",
                    url: " /language/glossary#index-entry-test_suite" }
                  ,
{ category: "Reference", value: "token (declarator)",
                    url: " /language/grammars#index-entry-declarator_token-Named_Regexes" }
                  ,
{ category: "Reference", value: "topic variable",
                    url: " /language/variables#index-entry-topic_variable" }
                  ,
{ category: "Reference", value: "tr\/\/\/",
                    url: " /language/operators#index-entry-tr%2F%2F%2F_in-place_transliteration" }
                  ,
{ category: "Reference", value: "trait_mod (declarator)",
                    url: " /type/Sub#index-entry-trait__mod_%28declarator%29" }
                  ,
{ category: "Reference", value: "try (statement prefix)",
                    url: " /language/statement-prefixes#index-entry-try_%28statement_prefix%29-try" }
                  ,
{ category: "Reference", value: "try blocks",
                    url: " /language/exceptions#index-entry-try_blocks" }
                  ,
{ category: "Reference", value: "tty",
                    url: " /type/IO::Handle#index-entry-tty" }
                  ,
{ category: "Reference", value: "twigils",
                    url: " /language/classtut#index-entry-twigils" }
                  ,
{ category: "Reference", value: "twine",
                    url: " /language/glossary#index-entry-twine" }
                  ,
{ category: "Reference", value: "type constraint",
                    url: " /type/Signature#index-entry-type_constraint" }
                  ,
{ category: "Reference", value: "type object",
                    url: " /language/classtut#index-entry-type_object" }
                  ,
{ category: "Reference", value: "typed array",
                    url: " /language/list#index-entry-typed_array" }
                  ,
{ category: "Reference", value: "uint",
                    url: " /language/nativetypes#index-entry-uint" }
                  ,
{ category: "Reference", value: "uint16",
                    url: " /language/nativetypes#index-entry-uint16" }
                  ,
{ category: "Reference", value: "uint32",
                    url: " /language/nativetypes#index-entry-uint32" }
                  ,
{ category: "Reference", value: "uint64",
                    url: " /language/nativetypes#index-entry-uint64" }
                  ,
{ category: "Reference", value: "uint8",
                    url: " /language/nativetypes#index-entry-uint8" }
                  ,
{ category: "Reference", value: "undefine",
                    url: " /language/routines#index-entry-undefine" }
                  ,
{ category: "Reference", value: "unit (MAIN) (declarator)",
                    url: " /language/create-cli#index-entry-declarator_unit_%28MAIN%29" }
                  ,
{ category: "Reference", value: "unit (declarator)",
                    url: " /language/syntax#index-entry-declarator_unit-declarator_module-declarator_package-Package%2C_Module%2C_Class%2C_Role%2C_and_Grammar_declaration" }
                  ,
{ category: "Reference", value: "unquoting (macros)",
                    url: " /language/experimental#index-entry-unquoting_%28macros%29" }
                  ,
{ category: "Reference", value: "upto operator",
                    url: " /language/operators#index-entry-upto_operator" }
                  ,
{ category: "Reference", value: "use",
                    url: " /language/modules#index-entry-use" }
                  ,
{ category: "Reference", value: "use lib",
                    url: " /language/modules#index-entry-use_lib" }
                  ,
{ category: "Reference", value: "use soft (pragma)",
                    url: " /language/functions#index-entry-use_soft_%28pragma%29" }
                  ,
{ category: "Reference", value: "utf-16",
                    url: " /type/IO::Handle#index-entry-utf-16" }
                  ,
{ category: "Reference", value: "utf16",
                    url: " /type/IO::Handle#index-entry-utf16" }
                  ,
{ category: "Reference", value: "utf16-be",
                    url: " /type/IO::Handle#index-entry-utf16-be" }
                  ,
{ category: "Reference", value: "utf16-le",
                    url: " /type/IO::Handle#index-entry-utf16-le" }
                  ,
{ category: "Reference", value: "utf16be",
                    url: " /type/IO::Handle#index-entry-utf16be" }
                  ,
{ category: "Reference", value: "utf16le",
                    url: " /type/IO::Handle#index-entry-utf16le" }
                  ,
{ category: "Reference", value: "v (version)",
                    url: " /type/Version#index-entry-v_%28version%29" }
                  ,
{ category: "Reference", value: "v6 (Basics)",
                    url: " /language/101-basics#index-entry-v6_%28Basics%29-v6" }
                  ,
{ category: "Reference", value: "v6.d (FAQ)",
                    url: " /language/faq#index-entry-v6.d_%28FAQ%29" }
                  ,
{ category: "Reference", value: "value",
                    url: " /language/glossary#index-entry-value" }
                  ,
{ category: "Reference", value: "variables, $_",
                    url: " /language/101-basics#index-entry-variables%2C_%24__" }
                  ,
{ category: "Reference", value: "variadic",
                    url: " /type/Signature#index-entry-variadic" }
                  ,
{ category: "Reference", value: "void type (NativeCall)",
                    url: " /language/nativetypes#index-entry-void_type_%28NativeCall%29" }
                  ,
{ category: "Reference", value: "whenever",
                    url: " /language/concurrency#index-entry-whenever" }
                  ,
{ category: "Reference", value: "where clause",
                    url: " /type/Signature#index-entry-where_clause" }
                  ,
{ category: "Reference", value: "while until (control flow)",
                    url: " /language/control#index-entry-control_flow_while_until-while%2C_until" }
                  ,
{ category: "Reference", value: "whitespace",
                    url: " /language/glossary#index-entry-whitespace" }
                  ,
{ category: "Reference", value: "windows-1251",
                    url: " /type/IO::Handle#index-entry-windows-1251" }
                  ,
{ category: "Reference", value: "windows-1252",
                    url: " /type/IO::Handle#index-entry-windows-1252" }
                  ,
{ category: "Reference", value: "windows-932",
                    url: " /type/IO::Handle#index-entry-windows-932" }
                  ,
{ category: "Reference", value: "wrapped routines (dispatch)",
                    url: " /language/functions#index-entry-dispatch_wrapped_routines" }
                  ,
{ category: "Reference", value: "ws",
                    url: " /language/grammars#index-entry-ws" }
                  ,
{ category: "Reference", value: "zef",
                    url: " /language/modules#index-entry-zef" }
                  ,
{ category: "Reference", value: "{{{}}} (macros)",
                    url: " /language/experimental#index-entry-%7B%7B%7B%7D%7D%7D_%28macros%29" }
                  ,
{ category: "Reference", value: "| (parameter)",
                    url: " /type/Signature#index-entry-parameter_%7C-Capture_parameters" }
                  ,
{ category: "Reference", value: "| (regex)",
                    url: " /language/regexes#index-entry-regex_%7C-Longest_alternation%3A_%7C" }
                  ,
{ category: "Reference", value: "|| (regex)",
                    url: " /language/regexes#index-entry-regex_%7C%7C-Alternation%3A_%7C%7C" }
                  ,
{ category: "Reference", value: "¬´",
                    url: " /language/unicode_ascii#index-entry-%C2%AB" }
                  ,
{ category: "Reference", value: "¬´ (hyper)",
                    url: " /language/operators#index-entry-hyper_%3C%3C-hyper_%3E%3E-hyper_%C2%AB-hyper_%C2%BB-Hyper_operators" }
                  ,
{ category: "Reference", value: "¬´ ¬ª (quote)",
                    url: " /language/quoting#index-entry-quote_%3C%3C_%3E%3E-quote_%C2%AB_%C2%BB-Word_quoting_with_interpolation_and_quote_protection%3A_%C2%AB_%C2%BB" }
                  ,
{ category: "Reference", value: "¬´=¬´",
                    url: " /language/unicode_ascii#index-entry-%C2%AB%3D%C2%AB" }
                  ,
{ category: "Reference", value: "¬´=¬ª",
                    url: " /language/operators#index-entry-%C2%AB%3D%C2%BB" }
                  ,
{ category: "Reference", value: "¬Ø",
                    url: " /language/unicode_ascii#index-entry-%C2%AF" }
                  ,
{ category: "Reference", value: "¬≤",
                    url: " /language/unicode_ascii#index-entry-%C2%B2" }
                  ,
{ category: "Reference", value: "¬≥",
                    url: " /language/unicode_ascii#index-entry-%C2%B3" }
                  ,
{ category: "Reference", value: "¬π",
                    url: " /language/unicode_ascii#index-entry-%C2%B9" }
                  ,
{ category: "Reference", value: "¬ª",
                    url: " /language/unicode_ascii#index-entry-%C2%BB" }
                  ,
{ category: "Reference", value: "¬ª (hyper)",
                    url: " /language/operators#index-entry-hyper_%3C%3C-hyper_%3E%3E-hyper_%C2%AB-hyper_%C2%BB-Hyper_operators" }
                  ,
{ category: "Reference", value: "¬ª=¬´",
                    url: " /language/operators#index-entry-%C2%BB%3D%C2%AB" }
                  ,
{ category: "Reference", value: "¬ª=¬ª",
                    url: " /language/unicode_ascii#index-entry-%C2%BB%3D%C2%BB" }
                  ,
{ category: "Reference", value: "√ó",
                    url: " /language/unicode_ascii#index-entry-%C3%97" }
                  ,
{ category: "Reference", value: "√∑",
                    url: " /language/unicode_ascii#index-entry-%C3%B7" }
                  ,
{ category: "Reference", value: "√æ (infix)",
                    url: " /language/about#index-entry-infix_%C3%BE-How_to_use_the_%C3%BE_infix" }
                  ,
{ category: "Reference", value: "œÄ",
                    url: " /language/unicode_ascii#index-entry-%CF%80" }
                  ,
{ category: "Reference", value: "œÑ",
                    url: " /language/unicode_ascii#index-entry-%CF%84" }
                  ,
{ category: "Reference", value: "‚Äò",
                    url: " /language/unicode_ascii#index-entry-%E2%80%98" }
                  ,
{ category: "Reference", value: "‚Äô",
                    url: " /language/unicode_ascii#index-entry-%E2%80%99" }
                  ,
{ category: "Reference", value: "‚Äö",
                    url: " /language/unicode_ascii#index-entry-%E2%80%9A" }
                  ,
{ category: "Reference", value: "‚Äú",
                    url: " /language/unicode_ascii#index-entry-%E2%80%9C" }
                  ,
{ category: "Reference", value: "‚Äù",
                    url: " /language/unicode_ascii#index-entry-%E2%80%9D" }
                  ,
{ category: "Reference", value: "‚Äû",
                    url: " /language/unicode_ascii#index-entry-%E2%80%9E" }
                  ,
{ category: "Reference", value: "‚Ä¶",
                    url: " /language/unicode_ascii#index-entry-%E2%80%A6" }
                  ,
{ category: "Reference", value: "‚Ä¶ (lazy list)",
                    url: " /language/operators#index-entry-lazy_list_%E2%80%A6" }
                  ,
{ category: "Reference", value: "‚Å∞",
                    url: " /language/unicode_ascii#index-entry-%E2%81%B0" }
                  ,
{ category: "Reference", value: "‚Å¥",
                    url: " /language/unicode_ascii#index-entry-%E2%81%B4" }
                  ,
{ category: "Reference", value: "‚Åµ",
                    url: " /language/unicode_ascii#index-entry-%E2%81%B5" }
                  ,
{ category: "Reference", value: "‚Å∂",
                    url: " /language/unicode_ascii#index-entry-%E2%81%B6" }
                  ,
{ category: "Reference", value: "‚Å∑",
                    url: " /language/unicode_ascii#index-entry-%E2%81%B7" }
                  ,
{ category: "Reference", value: "‚Å∏",
                    url: " /language/unicode_ascii#index-entry-%E2%81%B8" }
                  ,
{ category: "Reference", value: "‚Åπ",
                    url: " /language/unicode_ascii#index-entry-%E2%81%B9" }
                  ,
{ category: "Reference", value: "‚Å∫",
                    url: " /language/unicode_ascii#index-entry-%E2%81%BA" }
                  ,
{ category: "Reference", value: "‚Åª",
                    url: " /language/unicode_ascii#index-entry-%E2%81%BB" }
                  ,
{ category: "Reference", value: "‚àÖ",
                    url: " /language/terms#index-entry-%E2%88%85" }
                  ,
{ category: "Reference", value: "‚àà",
                    url: " /language/unicode_ascii#index-entry-%E2%88%88" }
                  ,
{ category: "Reference", value: "‚àâ",
                    url: " /language/unicode_ascii#index-entry-%E2%88%89" }
                  ,
{ category: "Reference", value: "‚àã",
                    url: " /language/unicode_ascii#index-entry-%E2%88%8B" }
                  ,
{ category: "Reference", value: "‚àå",
                    url: " /language/unicode_ascii#index-entry-%E2%88%8C" }
                  ,
{ category: "Reference", value: "‚àí",
                    url: " /language/unicode_ascii#index-entry-%E2%88%92" }
                  ,
{ category: "Reference", value: "‚àñ",
                    url: " /language/unicode_ascii#index-entry-%E2%88%96" }
                  ,
{ category: "Reference", value: "‚àò",
                    url: " /language/unicode_ascii#index-entry-%E2%88%98" }
                  ,
{ category: "Reference", value: "‚àû",
                    url: " /language/unicode_ascii#index-entry-%E2%88%9E" }
                  ,
{ category: "Reference", value: "‚àû (definition)",
                    url: " /type/Num#index-entry-%E2%88%9E_%28definition%29" }
                  ,
{ category: "Reference", value: "‚à©",
                    url: " /language/unicode_ascii#index-entry-%E2%88%A9" }
                  ,
{ category: "Reference", value: "‚à™",
                    url: " /language/unicode_ascii#index-entry-%E2%88%AA" }
                  ,
{ category: "Reference", value: "‚âÖ",
                    url: " /language/unicode_ascii#index-entry-%E2%89%85" }
                  ,
{ category: "Reference", value: "‚â†",
                    url: " /language/unicode_ascii#index-entry-%E2%89%A0" }
                  ,
{ category: "Reference", value: "‚â§",
                    url: " /language/unicode_ascii#index-entry-%E2%89%A4" }
                  ,
{ category: "Reference", value: "‚â•",
                    url: " /language/unicode_ascii#index-entry-%E2%89%A5" }
                  ,
{ category: "Reference", value: "‚âº",
                    url: " /language/unicode_ascii#index-entry-%E2%89%BC" }
                  ,
{ category: "Reference", value: "‚âΩ",
                    url: " /language/unicode_ascii#index-entry-%E2%89%BD" }
                  ,
{ category: "Reference", value: "‚äÇ",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%82" }
                  ,
{ category: "Reference", value: "‚äÉ",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%83" }
                  ,
{ category: "Reference", value: "‚äÑ",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%84" }
                  ,
{ category: "Reference", value: "‚äÖ",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%85" }
                  ,
{ category: "Reference", value: "‚äÜ",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%86" }
                  ,
{ category: "Reference", value: "‚äá",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%87" }
                  ,
{ category: "Reference", value: "‚äà",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%88" }
                  ,
{ category: "Reference", value: "‚äâ",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%89" }
                  ,
{ category: "Reference", value: "‚äç",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%8D" }
                  ,
{ category: "Reference", value: "‚äé",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%8E" }
                  ,
{ category: "Reference", value: "‚äñ",
                    url: " /language/unicode_ascii#index-entry-%E2%8A%96" }
                  ,
{ category: "Reference", value: "‚öõ",
                    url: " /language/unicode_ascii#index-entry-%E2%9A%9B" }
                  ,
{ category: "Reference", value: "‚öõ++",
                    url: " /language/unicode_ascii#index-entry-%E2%9A%9B%2B%2B" }
                  ,
{ category: "Reference", value: "‚öõ+=",
                    url: " /language/unicode_ascii#index-entry-%E2%9A%9B%2B%3D" }
                  ,
{ category: "Reference", value: "‚öõ--",
                    url: " /language/unicode_ascii#index-entry-%E2%9A%9B--" }
                  ,
{ category: "Reference", value: "‚öõ-=",
                    url: " /language/unicode_ascii#index-entry-%E2%9A%9B-%3D" }
                  ,
{ category: "Reference", value: "‚öõ=",
                    url: " /language/unicode_ascii#index-entry-%E2%9A%9B%3D" }
                  ,
{ category: "Reference", value: "‚öõ‚àí=",
                    url: " /language/unicode_ascii#index-entry-%E2%9A%9B%E2%88%92%3D" }
                  ,
{ category: "Reference", value: "ÔΩ¢",
                    url: " /language/unicode_ascii#index-entry-%EF%BD%A2" }
                  ,
{ category: "Reference", value: "ÔΩ¢ ÔΩ£ (quote)",
                    url: " /language/quoting#index-entry-quote_Q-quote_%EF%BD%A2_%EF%BD%A3-Literal_strings%3A_Q" }
                  ,
{ category: "Reference", value: "ÔΩ£",
                    url: " /language/unicode_ascii#index-entry-%EF%BD%A3" }
                  ,
{ category: "Reference", value: "ùëí",
                    url: " /language/unicode_ascii#index-entry-%F0%9D%91%92" }
                  ,
{ category: "Parameter", value: " **@",
                    url: " /syntax/ **@" }
                  ,
{ category: "Regex", value: " .",
                    url: " /syntax/ ..html" }
                  ,
{ category: "Regex", value: " <|w>",
                    url: " /syntax/ <|w>" }
                  ,
{ category: "Phasers", value: " BEGIN",
                    url: " /syntax/ BEGIN" }
                  ,
{ category: "Phasers", value: " CATCH",
                    url: " /syntax/ CATCH" }
                  ,
{ category: "Phasers", value: " CHECK",
                    url: " /syntax/ CHECK" }
                  ,
{ category: "Asynchronous Phasers", value: " CLOSE",
                    url: " /syntax/ CLOSE" }
                  ,
{ category: "Phasers", value: " CONTROL",
                    url: " /syntax/ CONTROL" }
                  ,
{ category: "Asynchronous Phasers", value: " DOC",
                    url: " /syntax/ DOC" }
                  ,
{ category: "Phasers", value: " END",
                    url: " /syntax/ END" }
                  ,
{ category: "Phasers", value: " ENTER",
                    url: " /syntax/ ENTER" }
                  ,
{ category: "Phasers", value: " FIRST",
                    url: " /syntax/ FIRST" }
                  ,
{ category: "Phasers", value: " INIT",
                    url: " /syntax/ INIT" }
                  ,
{ category: "Phasers", value: " KEEP",
                    url: " /syntax/ KEEP" }
                  ,
{ category: "Syntax", value: " LAST",
                    url: " /syntax/ LAST" }
                  ,
{ category: "Phasers", value: " LEAVE",
                    url: " /syntax/ LEAVE" }
                  ,
{ category: "Phasers", value: " NEXT",
                    url: " /syntax/ NEXT" }
                  ,
{ category: "Regex", value: " Named captures",
                    url: " /syntax/ Named captures" }
                  ,
{ category: "Phasers", value: " POST",
                    url: " /syntax/ POST" }
                  ,
{ category: "Phasers", value: " PRE",
                    url: " /syntax/ PRE" }
                  ,
{ category: "Asynchronous Phasers", value: " QUIT",
                    url: " /syntax/ QUIT" }
                  ,
{ category: "Regex", value: " Regex Interpolation",
                    url: " /syntax/ Regex Interpolation" }
                  ,
{ category: "Phasers", value: " UNDO",
                    url: " /syntax/ UNDO" }
                  ,
{ category: "Control Flow", value: " blocks",
                    url: " /syntax/ blocks" }
                  ,
{ category: "Control Flow", value: " fail",
                    url: " /syntax/ fail" }
                  ,
{ category: "Control Flow", value: " for",
                    url: " /syntax/ for" }
                  ,
{ category: "Control Flow", value: " last",
                    url: " /syntax/ last" }
                  ,
{ category: "Control Flow", value: " loop",
                    url: " /syntax/ loop" }
                  ,
{ category: "Control Flow", value: " next",
                    url: " /syntax/ next" }
                  ,
{ category: "Control Flow", value: " once",
                    url: " /syntax/ once" }
                  ,
{ category: "Control Flow", value: " proceed",
                    url: " /syntax/ proceed" }
                  ,
{ category: "Control Flow", value: " quietly",
                    url: " /syntax/ quietly" }
                  ,
{ category: "Control Flow", value: " redo",
                    url: " /syntax/ redo" }
                  ,
{ category: "Control Flow", value: " return-rw",
                    url: " /syntax/ return-rw" }
                  ,
{ category: "Control Flow", value: " statements",
                    url: " /syntax/ statements" }
                  ,
{ category: "Control Flow", value: " succeed",
                    url: " /syntax/ succeed" }
                  ,
{ category: "Regex", value: " tilde",
                    url: " /syntax/ tilde" }
                  ,
{ category: "Control Flow", value: " unless",
                    url: " /syntax/ unless" }
                  ,
{ category: "Control Flow", value: " when",
                    url: " /syntax/ when" }
                  ,
{ category: "Variable", value: "$",
                    url: " /syntax/$" }
                  ,
{ category: "Variable", value: "$!",
                    url: " /syntax/$!" }
                  ,
{ category: "Variable", value: "$0",
                    url: " /syntax/$0" }
                  ,
{ category: "Variable", value: "$<named>",
                    url: " /syntax/$<named>" }
                  ,
{ category: "", value: "$?DISTRIBUTION",
                    url: " /syntax/$%3FDISTRIBUTION" }
                  ,
{ category: "Variable", value: "$\/",
                    url: " /syntax/$$SOLIDUS" }
                  ,
{ category: "Variable", value: "$_",
                    url: " /syntax/$_" }
                  ,
{ category: "Syntax", value: "%",
                    url: " /syntax/$PERCENT_SIGN" }
                  ,
{ category: "Regex", value: "&",
                    url: " /syntax/&" }
                  ,
{ category: "Regex", value: "&&",
                    url: " /syntax/&&" }
                  ,
{ category: "", value: "&?BLOCK",
                    url: " /syntax/&%3FBLOCK" }
                  ,
{ category: "", value: "&?ROUTINE",
                    url: " /syntax/&%3FROUTINE" }
                  ,
{ category: "Regex", value: "( )",
                    url: " /syntax/( )" }
                  ,
{ category: "Regex Quantifier", value: "*",
                    url: " /syntax/*" }
                  ,
{ category: "Regex Quantifier", value: "**",
                    url: " /syntax/**" }
                  ,
{ category: "Regex Quantifier", value: "+",
                    url: " /syntax/+" }
                  ,
{ category: "Syntax", value: "->",
                    url: " /syntax/->" }
                  ,
{ category: "Regex", value: ":",
                    url: " /syntax/:" }
                  ,
{ category: "Matching Adverb", value: ":1st",
                    url: " /syntax/:1st" }
                  ,
{ category: "Matching Adverb", value: ":continue",
                    url: " /syntax/:continue" }
                  ,
{ category: "Matching Adverb", value: ":exhaustive",
                    url: " /syntax/:exhaustive" }
                  ,
{ category: "Matching Adverb", value: ":global",
                    url: " /syntax/:global" }
                  ,
{ category: "Regex Adverb", value: ":ignorecase",
                    url: " /syntax/:ignorecase" }
                  ,
{ category: "Regex Adverb", value: ":ignoremark",
                    url: " /syntax/:ignoremark" }
                  ,
{ category: "Matching Adverb", value: ":overlap",
                    url: " /syntax/:overlap" }
                  ,
{ category: "Matching Adverb", value: ":pos",
                    url: " /syntax/:pos" }
                  ,
{ category: "Regex Adverb", value: ":ratchet",
                    url: " /syntax/:ratchet" }
                  ,
{ category: "Substitution Adverb", value: ":samecase",
                    url: " /syntax/:samecase" }
                  ,
{ category: "Substitution Adverb", value: ":samemark",
                    url: " /syntax/:samemark" }
                  ,
{ category: "Substitution Adverb", value: ":samespace",
                    url: " /syntax/:samespace" }
                  ,
{ category: "Regex Adverb", value: ":sigspace",
                    url: " /syntax/:sigspace" }
                  ,
{ category: "Regex", value: "<( )>",
                    url: " /syntax/<( )>" }
                  ,
{ category: "Regex", value: "<:property>",
                    url: " /syntax/<:property>" }
                  ,
{ category: "Hyper", value: "<<",
                    url: " /syntax/<<" }
                  ,
{ category: "Quote", value: "<< >>",
                    url: " /syntax/<< >>" }
                  ,
{ category: "Regex", value: "<[ ]>",
                    url: " /syntax/<[ ]>" }
                  ,
{ category: "Syntax", value: "?",
                    url: " /syntax/%3F" }
                  ,
{ category: "Variable", value: "@",
                    url: " /syntax/@" }
                  ,
{ category: "Python", value: "Classes and objects",
                    url: " /syntax/Classes and objects" }
                  ,
{ category: "", value: "Coercion type",
                    url: " /syntax/Coercion type" }
                  ,
{ category: "Python", value: "Context managers",
                    url: " /syntax/Context managers" }
                  ,
{ category: "Python", value: "Control flow",
                    url: " /syntax/Control flow" }
                  ,
{ category: "", value: "Creating grammars",
                    url: " /syntax/Creating grammars" }
                  ,
{ category: "Syntax", value: "DEFINITE",
                    url: " /syntax/DEFINITE" }
                  ,
{ category: "Python", value: "Decorators",
                    url: " /syntax/Decorators" }
                  ,
{ category: "Constant", value: "Empty",
                    url: " /syntax/Empty" }
                  ,
{ category: "Syntax", value: "HOW",
                    url: " /syntax/HOW" }
                  ,
{ category: "P6doc", value: "INTRODUCTION",
                    url: " /syntax/INTRODUCTION" }
                  ,
{ category: "Python", value: "Lambdas, functions and subroutines",
                    url: " /syntax/Lambdas, functions and subroutines" }
                  ,
{ category: "Python", value: "List comprehensions",
                    url: " /syntax/List comprehensions" }
                  ,
{ category: "", value: "Long names",
                    url: " /syntax/Long names" }
                  ,
{ category: "", value: "Number literals",
                    url: " /syntax/Number literals" }
                  ,
{ category: "", value: "Overriding default gist method",
                    url: " /syntax/Overriding default gist method" }
                  ,
{ category: "", value: "Pair literals",
                    url: " /syntax/Pair literals" }
                  ,
{ category: "Control Flow", value: "Phasers",
                    url: " /syntax/Phasers" }
                  ,
{ category: ":Sym<>", value: "Proto regexes",
                    url: " /syntax/Proto regexes" }
                  ,
{ category: "Quote", value: "Q",
                    url: " /syntax/Q" }
                  ,
{ category: "", value: "Running programs",
                    url: " /syntax/Running programs" }
                  ,
{ category: "", value: "SAP",
                    url: " /syntax/SAP" }
                  ,
{ category: "", value: "S\/\/\/",
                    url: " /syntax/S$SOLIDUS$SOLIDUS$SOLIDUS" }
                  ,
{ category: "", value: "Semilist",
                    url: " /syntax/Semilist" }
                  ,
{ category: "", value: "Single Argument Rule",
                    url: " /syntax/Single Argument Rule" }
                  ,
{ category: "Top", value: "TOP",
                    url: " /syntax/TOP" }
                  ,
{ category: "", value: "TR\/\/\/",
                    url: " /syntax/TR$SOLIDUS$SOLIDUS$SOLIDUS" }
                  ,
{ category: "Syntax", value: "Trait is default",
                    url: " /syntax/Trait is default" }
                  ,
{ category: "Syntax", value: "VAR",
                    url: " /syntax/VAR" }
                  ,
{ category: "Syntax", value: "WHAT",
                    url: " /syntax/WHAT" }
                  ,
{ category: "Syntax", value: "WHERE",
                    url: " /syntax/WHERE" }
                  ,
{ category: "Syntax", value: "WHICH",
                    url: " /syntax/WHICH" }
                  ,
{ category: "Syntax", value: "WHO",
                    url: " /syntax/WHO" }
                  ,
{ category: "Syntax", value: "WHY",
                    url: " /syntax/WHY" }
                  ,
{ category: "Zen Slice (Basics)", value: "Zen slice",
                    url: " /syntax/Zen slice" }
                  ,
{ category: "Regex", value: "[ ]",
                    url: " /syntax/[ ]" }
                  ,
{ category: "Quote", value: "\/ \/",
                    url: " /syntax/$SOLIDUS $SOLIDUS" }
                  ,
{ category: "Regex", value: "\\d",
                    url: " /syntax/%5cd" }
                  ,
{ category: "Regex", value: "\\h",
                    url: " /syntax/%5ch" }
                  ,
{ category: "Regex", value: "\\n",
                    url: " /syntax/%5cn" }
                  ,
{ category: "Regex", value: "\\s",
                    url: " /syntax/%5cs" }
                  ,
{ category: "Regex", value: "\\t",
                    url: " /syntax/%5ct" }
                  ,
{ category: "Regex", value: "\\v",
                    url: " /syntax/%5cv" }
                  ,
{ category: "Regex", value: "\\w",
                    url: " /syntax/%5cw" }
                  ,
{ category: "Syntax", value: "^",
                    url: " /syntax/$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Regex", value: "^^",
                    url: " /syntax/$CIRCUMFLEX_ACCENT$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Regex", value: "after",
                    url: " /syntax/after" }
                  ,
{ category: "Declarator", value: "also",
                    url: " /syntax/also" }
                  ,
{ category: "Declarator", value: "anon",
                    url: " /syntax/anon" }
                  ,
{ category: "Declarator", value: "augment",
                    url: " /syntax/augment" }
                  ,
{ category: "Regex", value: "before",
                    url: " /syntax/before" }
                  ,
{ category: "Block (Basics)", value: "block",
                    url: " /syntax/block" }
                  ,
{ category: "Declarator", value: "blocks",
                    url: " /syntax/blocks" }
                  ,
{ category: ":Cached", value: "cached",
                    url: " /syntax/cached" }
                  ,
{ category: "Declarator", value: "class",
                    url: " /syntax/class" }
                  ,
{ category: "Variable", value: "declaration",
                    url: " /syntax/declaration" }
                  ,
{ category: "Control Flow", value: "default when",
                    url: " /syntax/default when" }
                  ,
{ category: "Syntax", value: "do",
                    url: " /syntax/do" }
                  ,
{ category: "", value: "done",
                    url: " /syntax/done" }
                  ,
{ category: "Eager (Statement Prefix)", value: "eager",
                    url: " /syntax/eager" }
                  ,
{ category: "Control Flow", value: "else elsif",
                    url: " /syntax/else elsif" }
                  ,
{ category: "", value: "emit",
                    url: " /syntax/emit" }
                  ,
{ category: "Gather (Statement Prefix)", value: "gather",
                    url: " /syntax/gather" }
                  ,
{ category: "Control Flow", value: "gather take",
                    url: " /syntax/gather take" }
                  ,
{ category: "Control Flow", value: "given statement",
                    url: " /syntax/given statement" }
                  ,
{ category: "Declarator", value: "has",
                    url: " /syntax/has" }
                  ,
{ category: "", value: "hash",
                    url: " /syntax/hash" }
                  ,
{ category: "Quote", value: "heredocs :to",
                    url: " /syntax/heredocs :to" }
                  ,
{ category: "Identifier", value: "identifiers",
                    url: " /syntax/identifiers" }
                  ,
{ category: "Control Flow", value: "if",
                    url: " /syntax/if" }
                  ,
{ category: "Python", value: "input",
                    url: " /syntax/input" }
                  ,
{ category: "", value: "interpolation",
                    url: " /syntax/interpolation" }
                  ,
{ category: "Classes", value: "is",
                    url: " /syntax/is" }
                  ,
{ category: "Lazy (Statement Prefix)", value: "lazy",
                    url: " /syntax/lazy" }
                  ,
{ category: "Macros", value: "macros",
                    url: " /syntax/macros" }
                  ,
{ category: "Declarator", value: "multi",
                    url: " /syntax/multi" }
                  ,
{ category: "Declarator", value: "my",
                    url: " /syntax/my" }
                  ,
{ category: "", value: "need",
                    url: " /syntax/need" }
                  ,
{ category: "Once (Statement Prefix)", value: "once",
                    url: " /syntax/once" }
                  ,
{ category: "Declarator", value: "only",
                    url: " /syntax/only" }
                  ,
{ category: "Declarator", value: "our",
                    url: " /syntax/our" }
                  ,
{ category: "Pack", value: "pack",
                    url: " /syntax/pack" }
                  ,
{ category: "Declarator", value: "proto",
                    url: " /syntax/proto" }
                  ,
{ category: "Quote", value: "q",
                    url: " /syntax/q" }
                  ,
{ category: "Quote", value: "qq",
                    url: " /syntax/qq" }
                  ,
{ category: "Quote", value: "qqw",
                    url: " /syntax/qqw" }
                  ,
{ category: "Quote", value: "qqww",
                    url: " /syntax/qqww" }
                  ,
{ category: "Quote", value: "qqx",
                    url: " /syntax/qqx" }
                  ,
{ category: "Quietly (Statement Prefix)", value: "quietly",
                    url: " /syntax/quietly" }
                  ,
{ category: "Quote", value: "qww",
                    url: " /syntax/qww" }
                  ,
{ category: "Quote", value: "qx",
                    url: " /syntax/qx" }
                  ,
{ category: "React (Statement Prefix)", value: "react",
                    url: " /syntax/react" }
                  ,
{ category: "Declarator", value: "regex",
                    url: " /syntax/regex" }
                  ,
{ category: "Control Flow", value: "repeat",
                    url: " /syntax/repeat" }
                  ,
{ category: "", value: "require",
                    url: " /syntax/require" }
                  ,
{ category: "Control Flow", value: "return",
                    url: " /syntax/return" }
                  ,
{ category: "Declarator", value: "role",
                    url: " /syntax/role" }
                  ,
{ category: "Declarator", value: "rule",
                    url: " /syntax/rule" }
                  ,
{ category: "Quote", value: "s\/ \/ \/",
                    url: " /syntax/s$SOLIDUS $SOLIDUS $SOLIDUS" }
                  ,
{ category: "", value: "s\/\/\/",
                    url: " /syntax/s$SOLIDUS$SOLIDUS$SOLIDUS" }
                  ,
{ category: "", value: "scalar",
                    url: " /syntax/scalar" }
                  ,
{ category: "Variable", value: "scope",
                    url: " /syntax/scope" }
                  ,
{ category: "", value: "self",
                    url: " /syntax/self" }
                  ,
{ category: "Sink (Statement Prefix)", value: "sink",
                    url: " /syntax/sink" }
                  ,
{ category: "", value: "stable sort",
                    url: " /syntax/stable sort" }
                  ,
{ category: "Syntax", value: "start",
                    url: " /syntax/start" }
                  ,
{ category: "Declarator", value: "state",
                    url: " /syntax/state" }
                  ,
{ category: "Statement (Basics)", value: "statement",
                    url: " /syntax/statement" }
                  ,
{ category: "", value: "string literal",
                    url: " /syntax/string literal" }
                  ,
{ category: "Declarator", value: "sub",
                    url: " /syntax/sub" }
                  ,
{ category: "Supply (Statement Prefix)", value: "supply",
                    url: " /syntax/supply" }
                  ,
{ category: "Control Flow", value: "supply emit",
                    url: " /syntax/supply emit" }
                  ,
{ category: "<Sym>", value: "sym",
                    url: " /syntax/sym" }
                  ,
{ category: "Declarator", value: "token",
                    url: " /syntax/token" }
                  ,
{ category: "", value: "tr\/\/\/",
                    url: " /syntax/tr$SOLIDUS$SOLIDUS$SOLIDUS" }
                  ,
{ category: "Is Default (Variable)", value: "trait is default",
                    url: " /syntax/trait is default" }
                  ,
{ category: "Try (Statement Prefix)", value: "try",
                    url: " /syntax/try" }
                  ,
{ category: "", value: "undefine",
                    url: " /syntax/undefine" }
                  ,
{ category: "Declarator", value: "unit",
                    url: " /syntax/unit" }
                  ,
{ category: "", value: "use",
                    url: " /syntax/use" }
                  ,
{ category: "V6 (Basics)", value: "v6",
                    url: " /syntax/v6" }
                  ,
{ category: "", value: "variables, $_",
                    url: " /syntax/variables, $_" }
                  ,
{ category: "Control Flow", value: "while until",
                    url: " /syntax/while until" }
                  ,
{ category: "Syntax", value: "|",
                    url: " /syntax/|" }
                  ,
{ category: "Regex", value: "||",
                    url: " /syntax/||" }
                  ,
{ category: "Language", value: "About the docs",
                    url: " /language/about" }
                  ,
{ category: "Language", value: "Advanced topics",
                    url: " /language/086-GroupF" }
                  ,
{ category: "Language", value: "At the beginning",
                    url: " /language/001-GroupA" }
                  ,
{ category: "Language", value: "Brief introduction",
                    url: " /language/intro" }
                  ,
{ category: "Language", value: "Classes and objects",
                    url: " /language/classtut" }
                  ,
{ category: "Language", value: "Command line interface",
                    url: " /language/create-cli" }
                  ,
{ category: "Language", value: "Community ",
                    url: " /language/community" }
                  ,
{ category: "Language", value: "Concurrency",
                    url: " /language/concurrency" }
                  ,
{ category: "Language", value: "Containers",
                    url: " /language/containers" }
                  ,
{ category: "Language", value: "Contexts and contextualizers",
                    url: " /language/contexts" }
                  ,
{ category: "Language", value: "Control flow",
                    url: " /language/control" }
                  ,
{ category: "Language", value: "Core modules",
                    url: " /language/modules-core" }
                  ,
{ category: "Language", value: "Creating operators",
                    url: " /language/optut" }
                  ,
{ category: "Language", value: "Data structures",
                    url: " /language/structures" }
                  ,
{ category: "Language", value: "Date and time functions",
                    url: " /language/temporal" }
                  ,
{ category: "Language", value: "Doing math with Perl¬†6",
                    url: " /language/math" }
                  ,
{ category: "Language", value: "Entering unicode characters",
                    url: " /language/unicode_entry" }
                  ,
{ category: "Language", value: "Enumeration",
                    url: " /language/enumeration" }
                  ,
{ category: "Language", value: "Exceptions",
                    url: " /language/exceptions" }
                  ,
{ category: "Language", value: "Experimental features",
                    url: " /language/experimental" }
                  ,
{ category: "Language", value: "FAQ",
                    url: " /language/faq" }
                  ,
{ category: "Language", value: "Functions",
                    url: " /language/functions" }
                  ,
{ category: "Language", value: "Fundamental topics",
                    url: " /language/045-GroupE" }
                  ,
{ category: "Language", value: "General reference",
                    url: " /language/034-GroupD" }
                  ,
{ category: "Language", value: "Glossary",
                    url: " /language/glossary" }
                  ,
{ category: "Language", value: "Grammar tutorial",
                    url: " /language/grammar_tutorial" }
                  ,
{ category: "Language", value: "Grammars",
                    url: " /language/grammars" }
                  ,
{ category: "Language", value: "Hashes and maps",
                    url: " /language/hashmap" }
                  ,
{ category: "Language", value: "Haskell to Perl¬†6 - nutshell",
                    url: " /language/haskell-to-p6" }
                  ,
{ category: "Language", value: "Input\/Output",
                    url: " /language/io" }
                  ,
{ category: "Language", value: "Input\/Output the definitive guide",
                    url: " /language/io-guide" }
                  ,
{ category: "Language", value: "Inter-process communication",
                    url: " /language/ipc" }
                  ,
{ category: "Language", value: "Iterating",
                    url: " /language/iterating" }
                  ,
{ category: "Language", value: "JavaScript (Node.js) to Perl¬†6 - nutshell",
                    url: " /language/js-nutshell" }
                  ,
{ category: "Language", value: "Lists, sequences, and arrays",
                    url: " /language/list" }
                  ,
{ category: "Language", value: "Meta-object protocol (MOP)",
                    url: " /language/mop" }
                  ,
{ category: "Language", value: "Migration guides",
                    url: " /language/004-GroupB" }
                  ,
{ category: "Language", value: "Module development utilities",
                    url: " /language/modules-extra" }
                  ,
{ category: "Language", value: "Module packages",
                    url: " /language/module-packages" }
                  ,
{ category: "Language", value: "Modules",
                    url: " /language/modules" }
                  ,
{ category: "Language", value: "Native calling interface",
                    url: " /language/nativecall" }
                  ,
{ category: "Language", value: "Newline handling in Perl¬†6",
                    url: " /language/newline" }
                  ,
{ category: "Language", value: "Numerics",
                    url: " /language/numerics" }
                  ,
{ category: "Language", value: "Object orientation",
                    url: " /language/objects" }
                  ,
{ category: "Language", value: "Operators",
                    url: " /language/operators" }
                  ,
{ category: "Language", value: "Packages",
                    url: " /language/packages" }
                  ,
{ category: "Language", value: "Performance",
                    url: " /language/performance" }
                  ,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - functions",
                    url: " /language/5to6-perlfunc" }
                  ,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - in a nutshell",
                    url: " /language/5to6-nutshell" }
                  ,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - operators",
                    url: " /language/5to6-perlop" }
                  ,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - overview",
                    url: " /language/5to6-overview" }
                  ,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - special variables",
                    url: " /language/5to6-perlvar" }
                  ,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - syntax",
                    url: " /language/5to6-perlsyn" }
                  ,
{ category: "Language", value: "Perl¬†6 by example P6-101",
                    url: " /language/101-basics" }
                  ,
{ category: "Language", value: "Perl¬†6 native types",
                    url: " /language/nativetypes" }
                  ,
{ category: "Language", value: "Perl¬†6 pod",
                    url: " /language/pod" }
                  ,
{ category: "Language", value: "Phasers",
                    url: " /language/phasers" }
                  ,
{ category: "Language", value: "Pod¬†6 tables",
                    url: " /language/tables" }
                  ,
{ category: "Language", value: "Pragmas",
                    url: " /language/pragmas" }
                  ,
{ category: "Language", value: "Python to Perl¬†6 - nutshell",
                    url: " /language/py-nutshell" }
                  ,
{ category: "Language", value: "Quoting constructs",
                    url: " /language/quoting" }
                  ,
{ category: "Language", value: "Regexes",
                    url: " /language/regexes" }
                  ,
{ category: "Language", value: "Regexes: best practices and gotchas",
                    url: " /language/regexes-best-practices" }
                  ,
{ category: "Language", value: "Routines",
                    url: " /language/routines" }
                  ,
{ category: "Language", value: "Ruby to Perl¬†6 - nutshell",
                    url: " /language/rb-nutshell" }
                  ,
{ category: "Language", value: "Sets, bags, and mixes",
                    url: " /language/setbagmix" }
                  ,
{ category: "Language", value: "Statement prefixes",
                    url: " /language/statement-prefixes" }
                  ,
{ category: "Language", value: "Subscripts",
                    url: " /language/subscripts" }
                  ,
{ category: "Language", value: "Syntax",
                    url: " /language/syntax" }
                  ,
{ category: "Language", value: "System interaction",
                    url: " /language/system" }
                  ,
{ category: "Language", value: "Terms",
                    url: " /language/terms" }
                  ,
{ category: "Language", value: "Testing",
                    url: " /language/testing" }
                  ,
{ category: "Language", value: "Traits",
                    url: " /language/traits" }
                  ,
{ category: "Language", value: "Traps to avoid",
                    url: " /language/traps" }
                  ,
{ category: "Language", value: "Tutorials",
                    url: " /language/016-GroupC" }
                  ,
{ category: "Language", value: "Type system",
                    url: " /language/typesystem" }
                  ,
{ category: "Language", value: "Unicode",
                    url: " /language/unicode" }
                  ,
{ category: "Language", value: "Unicode versus ASCII symbols",
                    url: " /language/unicode_ascii" }
                  ,
{ category: "Language", value: "Variables",
                    url: " /language/variables" }
                  ,
{ category: "Prefix", value: "!",
                    url: " /routine/!" }
                  ,
{ category: "Listop", value: "!!!",
                    url: " /routine/!!!" }
                  ,
{ category: "Infix", value: "!=",
                    url: " /routine/!=" }
                  ,
{ category: "Infix", value: "%",
                    url: " /routine/$PERCENT_SIGN" }
                  ,
{ category: "Infix", value: "%%",
                    url: " /routine/$PERCENT_SIGN$PERCENT_SIGN" }
                  ,
{ category: "Infix", value: "&",
                    url: " /routine/&" }
                  ,
{ category: "Infix", value: "&&",
                    url: " /routine/&&" }
                  ,
{ category: "Sub", value: "&*chdir",
                    url: " /routine/&*chdir" }
                  ,
{ category: "Routine", value: "( )",
                    url: " /routine/( )" }
                  ,
{ category: "Routine", value: "*",
                    url: " /routine/*" }
                  ,
{ category: "Infix", value: "**",
                    url: " /routine/**" }
                  ,
{ category: "Routine", value: "+",
                    url: " /routine/+" }
                  ,
{ category: "Infix", value: "+&",
                    url: " /routine/+&" }
                  ,
{ category: "Routine", value: "++",
                    url: " /routine/++" }
                  ,
{ category: "Prefix", value: "++‚öõ",
                    url: " /routine/++‚öõ" }
                  ,
{ category: "Infix", value: "+<",
                    url: " /routine/+<" }
                  ,
{ category: "Infix", value: "+>",
                    url: " /routine/+>" }
                  ,
{ category: "Routine", value: "+^",
                    url: " /routine/+$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Infix", value: "+|",
                    url: " /routine/+|" }
                  ,
{ category: "Infix", value: ",",
                    url: " /routine/," }
                  ,
{ category: "Postfix", value: ",=",
                    url: " /routine/,=" }
                  ,
{ category: "Routine", value: "-",
                    url: " /routine/-" }
                  ,
{ category: "Prefix", value: "--",
                    url: " /routine/--" }
                  ,
{ category: "Prefix", value: "--‚öõ",
                    url: " /routine/--‚öõ" }
                  ,
{ category: "Infix", value: ".",
                    url: " /routine/..html" }
                  ,
{ category: "Infix", value: "..",
                    url: " /routine/...html" }
                  ,
{ category: "Listop", value: "...",
                    url: " /routine/....html" }
                  ,
{ category: "Infix", value: "..^",
                    url: " /routine/..$CIRCUMFLEX_ACCENT.html" }
                  ,
{ category: "Infix", value: ".=",
                    url: " /routine/.=.html" }
                  ,
{ category: "Infix", value: ":",
                    url: " /routine/:" }
                  ,
{ category: "Infix", value: "::=",
                    url: " /routine/::=" }
                  ,
{ category: "Infix", value: ":=",
                    url: " /routine/:=" }
                  ,
{ category: "Infix", value: "<",
                    url: " /routine/<" }
                  ,
{ category: "Routine", value: "< >",
                    url: " /routine/< >" }
                  ,
{ category: "Infix", value: "<=",
                    url: " /routine/<=" }
                  ,
{ category: "Infix", value: "<==",
                    url: " /routine/<==" }
                  ,
{ category: "Routine", value: "<=>",
                    url: " /routine/<=>" }
                  ,
{ category: "Postcircumfix", value: "<>",
                    url: " /routine/<>" }
                  ,
{ category: "Routine", value: "=",
                    url: " /routine/=" }
                  ,
{ category: "Infix", value: "=:=",
                    url: " /routine/=:=" }
                  ,
{ category: "Infix", value: "==",
                    url: " /routine/==" }
                  ,
{ category: "Routine", value: "===",
                    url: " /routine/===" }
                  ,
{ category: "Infix", value: "==>",
                    url: " /routine/==>" }
                  ,
{ category: "Infix", value: "=>",
                    url: " /routine/=>" }
                  ,
{ category: "Infix", value: "=~=",
                    url: " /routine/=~=" }
                  ,
{ category: "Infix", value: ">",
                    url: " /routine/>" }
                  ,
{ category: "Infix", value: ">=",
                    url: " /routine/>=" }
                  ,
{ category: "Routine", value: "?",
                    url: " /routine/%3F" }
                  ,
{ category: "Infix", value: "?? !!",
                    url: " /routine/%3F%3F !!" }
                  ,
{ category: "Listop", value: "???",
                    url: " /routine/%3F%3F%3F" }
                  ,
{ category: "Prefix", value: "?^",
                    url: " /routine/%3F$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Infix", value: "?|",
                    url: " /routine/%3F|" }
                  ,
{ category: "Routine", value: "ACCEPTS",
                    url: " /routine/ACCEPTS" }
                  ,
{ category: "Sub", value: "ARGS-TO-CAPTURE",
                    url: " /routine/ARGS-TO-CAPTURE" }
                  ,
{ category: "Method", value: "ASSIGN-KEY",
                    url: " /routine/ASSIGN-KEY" }
                  ,
{ category: "Method", value: "ASSIGN-POS",
                    url: " /routine/ASSIGN-POS" }
                  ,
{ category: "Routine", value: "AT-KEY",
                    url: " /routine/AT-KEY" }
                  ,
{ category: "Routine", value: "AT-POS",
                    url: " /routine/AT-POS" }
                  ,
{ category: "Method", value: "Array",
                    url: " /routine/Array" }
                  ,
{ category: "Method", value: "BIND-KEY",
                    url: " /routine/BIND-KEY" }
                  ,
{ category: "Method", value: "BIND-POS",
                    url: " /routine/BIND-POS" }
                  ,
{ category: "Submethod", value: "BUILD",
                    url: " /routine/BUILD" }
                  ,
{ category: "Routine", value: "Bag",
                    url: " /routine/Bag" }
                  ,
{ category: "Routine", value: "BagHash",
                    url: " /routine/BagHash" }
                  ,
{ category: "Method", value: "Baggy",
                    url: " /routine/Baggy" }
                  ,
{ category: "Routine", value: "Bool",
                    url: " /routine/Bool" }
                  ,
{ category: "Method", value: "Bridge",
                    url: " /routine/Bridge" }
                  ,
{ category: "Method", value: "CALL-ME",
                    url: " /routine/CALL-ME" }
                  ,
{ category: "Method", value: "CREATE",
                    url: " /routine/CREATE" }
                  ,
{ category: "Routine", value: "Capture",
                    url: " /routine/Capture" }
                  ,
{ category: "Method", value: "Channel",
                    url: " /routine/Channel" }
                  ,
{ category: "Routine", value: "Complex",
                    url: " /routine/Complex" }
                  ,
{ category: "Method", value: "DELETE-KEY",
                    url: " /routine/DELETE-KEY" }
                  ,
{ category: "Method", value: "DELETE-POS",
                    url: " /routine/DELETE-POS" }
                  ,
{ category: "Routine", value: "DESTROY",
                    url: " /routine/DESTROY" }
                  ,
{ category: "Method", value: "DISTROnames",
                    url: " /routine/DISTROnames" }
                  ,
{ category: "Routine", value: "Date",
                    url: " /routine/Date" }
                  ,
{ category: "Routine", value: "DateTime",
                    url: " /routine/DateTime" }
                  ,
{ category: "Routine", value: "EOF",
                    url: " /routine/EOF" }
                  ,
{ category: "Method", value: "EVAL",
                    url: " /routine/EVAL" }
                  ,
{ category: "Sub", value: "EVALFILE",
                    url: " /routine/EVALFILE" }
                  ,
{ category: "Routine", value: "EXISTS-KEY",
                    url: " /routine/EXISTS-KEY" }
                  ,
{ category: "Routine", value: "EXISTS-POS",
                    url: " /routine/EXISTS-POS" }
                  ,
{ category: "Method", value: "FALLBACK",
                    url: " /routine/FALLBACK" }
                  ,
{ category: "Sub", value: "GENERATE-USAGE",
                    url: " /routine/GENERATE-USAGE" }
                  ,
{ category: "Routine", value: "Hash",
                    url: " /routine/Hash" }
                  ,
{ category: "Routine", value: "IO",
                    url: " /routine/IO" }
                  ,
{ category: "Method", value: "IO::Notification.watch-path",
                    url: " /routine/IO::Notification.watch-path" }
                  ,
{ category: "Method", value: "Instant",
                    url: " /routine/Instant" }
                  ,
{ category: "Routine", value: "Int",
                    url: " /routine/Int" }
                  ,
{ category: "Method", value: "KERNELnames",
                    url: " /routine/KERNELnames" }
                  ,
{ category: "Routine", value: "List",
                    url: " /routine/List" }
                  ,
{ category: "Routine", value: "MAIN",
                    url: " /routine/MAIN" }
                  ,
{ category: "Method", value: "Map",
                    url: " /routine/Map" }
                  ,
{ category: "Routine", value: "Mix",
                    url: " /routine/Mix" }
                  ,
{ category: "Routine", value: "MixHash",
                    url: " /routine/MixHash" }
                  ,
{ category: "Method", value: "Mixy",
                    url: " /routine/Mixy" }
                  ,
{ category: "Routine", value: "NFC",
                    url: " /routine/NFC" }
                  ,
{ category: "Routine", value: "NFD",
                    url: " /routine/NFD" }
                  ,
{ category: "Routine", value: "NFKC",
                    url: " /routine/NFKC" }
                  ,
{ category: "Routine", value: "NFKD",
                    url: " /routine/NFKD" }
                  ,
{ category: "Routine", value: "Num",
                    url: " /routine/Num" }
                  ,
{ category: "Routine", value: "Numeric",
                    url: " /routine/Numeric" }
                  ,
{ category: "Method", value: "Promise",
                    url: " /routine/Promise" }
                  ,
{ category: "Routine", value: "READ",
                    url: " /routine/READ" }
                  ,
{ category: "Sub", value: "RUN-MAIN",
                    url: " /routine/RUN-MAIN" }
                  ,
{ category: "Routine", value: "Range",
                    url: " /routine/Range" }
                  ,
{ category: "Routine", value: "Rat",
                    url: " /routine/Rat" }
                  ,
{ category: "Routine", value: "Real",
                    url: " /routine/Real" }
                  ,
{ category: "Method", value: "SPEC",
                    url: " /routine/SPEC" }
                  ,
{ category: "Routine", value: "STORE",
                    url: " /routine/STORE" }
                  ,
{ category: "Routine", value: "Set",
                    url: " /routine/Set" }
                  ,
{ category: "Routine", value: "SetHash",
                    url: " /routine/SetHash" }
                  ,
{ category: "Method", value: "Setty",
                    url: " /routine/Setty" }
                  ,
{ category: "Method", value: "Slip",
                    url: " /routine/Slip" }
                  ,
{ category: "Routine", value: "Str",
                    url: " /routine/Str" }
                  ,
{ category: "Method", value: "Stringy",
                    url: " /routine/Stringy" }
                  ,
{ category: "Routine", value: "Supply",
                    url: " /routine/Supply" }
                  ,
{ category: "Sub", value: "T",
                    url: " /routine/T" }
                  ,
{ category: "Sub", value: "USAGE",
                    url: " /routine/USAGE" }
                  ,
{ category: "Method", value: "VMnames",
                    url: " /routine/VMnames" }
                  ,
{ category: "Method", value: "WHERE",
                    url: " /routine/WHERE" }
                  ,
{ category: "Method", value: "WHEREFORE",
                    url: " /routine/WHEREFORE" }
                  ,
{ category: "Routine", value: "WHICH",
                    url: " /routine/WHICH" }
                  ,
{ category: "Method", value: "WHY",
                    url: " /routine/WHY" }
                  ,
{ category: "Routine", value: "WRITE",
                    url: " /routine/WRITE" }
                  ,
{ category: "Infix", value: "X",
                    url: " /routine/X" }
                  ,
{ category: "Infix", value: "Z",
                    url: " /routine/Z" }
                  ,
{ category: "Routine", value: "[ ]",
                    url: " /routine/[ ]" }
                  ,
{ category: "Infix", value: "\/",
                    url: " /routine/$SOLIDUS" }
                  ,
{ category: "Infix", value: "\/\/",
                    url: " /routine/$SOLIDUS$SOLIDUS" }
                  ,
{ category: "Routine", value: "^",
                    url: " /routine/$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Infix", value: "^..",
                    url: " /routine/$CIRCUMFLEX_ACCENT...html" }
                  ,
{ category: "Infix", value: "^..^",
                    url: " /routine/$CIRCUMFLEX_ACCENT..$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Infix", value: "^^",
                    url: " /routine/$CIRCUMFLEX_ACCENT$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Infix", value: "^ff",
                    url: " /routine/$CIRCUMFLEX_ACCENTff" }
                  ,
{ category: "Infix", value: "^ff^",
                    url: " /routine/$CIRCUMFLEX_ACCENTff$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Infix", value: "^fff",
                    url: " /routine/$CIRCUMFLEX_ACCENTfff" }
                  ,
{ category: "Infix", value: "^fff^",
                    url: " /routine/$CIRCUMFLEX_ACCENTfff$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Routine", value: "abs",
                    url: " /routine/abs" }
                  ,
{ category: "Routine", value: "abs2rel",
                    url: " /routine/abs2rel" }
                  ,
{ category: "Method", value: "absolute",
                    url: " /routine/absolute" }
                  ,
{ category: "Method", value: "accept",
                    url: " /routine/accept" }
                  ,
{ category: "Routine", value: "accessed",
                    url: " /routine/accessed" }
                  ,
{ category: "Sub", value: "acos",
                    url: " /routine/acos" }
                  ,
{ category: "Sub", value: "acosec",
                    url: " /routine/acosec" }
                  ,
{ category: "Sub", value: "acosech",
                    url: " /routine/acosech" }
                  ,
{ category: "Sub", value: "acosh",
                    url: " /routine/acosh" }
                  ,
{ category: "Sub", value: "acotan",
                    url: " /routine/acotan" }
                  ,
{ category: "Sub", value: "acotanh",
                    url: " /routine/acotanh" }
                  ,
{ category: "Method", value: "acquire",
                    url: " /routine/acquire" }
                  ,
{ category: "Method", value: "act",
                    url: " /routine/act" }
                  ,
{ category: "Method", value: "action",
                    url: " /routine/action" }
                  ,
{ category: "Method", value: "actions",
                    url: " /routine/actions" }
                  ,
{ category: "Method", value: "add",
                    url: " /routine/add" }
                  ,
{ category: "Method", value: "add_attribute",
                    url: " /routine/add_attribute" }
                  ,
{ category: "Method", value: "add_enum_value",
                    url: " /routine/add_enum_value" }
                  ,
{ category: "Method", value: "add_fallback",
                    url: " /routine/add_fallback" }
                  ,
{ category: "Method", value: "add_method",
                    url: " /routine/add_method" }
                  ,
{ category: "Method", value: "add_parent",
                    url: " /routine/add_parent" }
                  ,
{ category: "Method", value: "add_private_method",
                    url: " /routine/add_private_method" }
                  ,
{ category: "Method", value: "add_role",
                    url: " /routine/add_role" }
                  ,
{ category: "Method", value: "add_trustee",
                    url: " /routine/add_trustee" }
                  ,
{ category: "Method", value: "adverb",
                    url: " /routine/adverb" }
                  ,
{ category: "Routine", value: "after",
                    url: " /routine/after" }
                  ,
{ category: "Method", value: "all",
                    url: " /routine/all" }
                  ,
{ category: "Method", value: "allocate",
                    url: " /routine/allocate" }
                  ,
{ category: "Method", value: "allof",
                    url: " /routine/allof" }
                  ,
{ category: "Method", value: "allowed",
                    url: " /routine/allowed" }
                  ,
{ category: "Method", value: "alternative-names",
                    url: " /routine/alternative-names" }
                  ,
{ category: "Infix", value: "and",
                    url: " /routine/and" }
                  ,
{ category: "Infix", value: "andthen",
                    url: " /routine/andthen" }
                  ,
{ category: "Method", value: "annotations",
                    url: " /routine/annotations" }
                  ,
{ category: "Method", value: "antipair",
                    url: " /routine/antipair" }
                  ,
{ category: "Routine", value: "antipairs",
                    url: " /routine/antipairs" }
                  ,
{ category: "Method", value: "any",
                    url: " /routine/any" }
                  ,
{ category: "Method", value: "anyof",
                    url: " /routine/anyof" }
                  ,
{ category: "Method", value: "app_lifetime",
                    url: " /routine/app_lifetime" }
                  ,
{ category: "Routine", value: "append",
                    url: " /routine/append" }
                  ,
{ category: "Method", value: "arch",
                    url: " /routine/arch" }
                  ,
{ category: "Method", value: "archetypes",
                    url: " /routine/archetypes" }
                  ,
{ category: "Method", value: "archname",
                    url: " /routine/archname" }
                  ,
{ category: "Method", value: "args",
                    url: " /routine/args" }
                  ,
{ category: "Routine", value: "arity",
                    url: " /routine/arity" }
                  ,
{ category: "Sub", value: "asec",
                    url: " /routine/asec" }
                  ,
{ category: "Sub", value: "asech",
                    url: " /routine/asech" }
                  ,
{ category: "Sub", value: "asin",
                    url: " /routine/asin" }
                  ,
{ category: "Sub", value: "asinh",
                    url: " /routine/asinh" }
                  ,
{ category: "Method", value: "assuming",
                    url: " /routine/assuming" }
                  ,
{ category: "Method", value: "ast",
                    url: " /routine/ast" }
                  ,
{ category: "Method", value: "at",
                    url: " /routine/at" }
                  ,
{ category: "Sub", value: "atan",
                    url: " /routine/atan" }
                  ,
{ category: "Method", value: "atan2",
                    url: " /routine/atan2" }
                  ,
{ category: "Sub", value: "atanh",
                    url: " /routine/atanh" }
                  ,
{ category: "Routine", value: "atomic-assign",
                    url: " /routine/atomic-assign" }
                  ,
{ category: "Sub", value: "atomic-dec-fetch",
                    url: " /routine/atomic-dec-fetch" }
                  ,
{ category: "Routine", value: "atomic-fetch",
                    url: " /routine/atomic-fetch" }
                  ,
{ category: "Sub", value: "atomic-fetch-add",
                    url: " /routine/atomic-fetch-add" }
                  ,
{ category: "Sub", value: "atomic-fetch-dec",
                    url: " /routine/atomic-fetch-dec" }
                  ,
{ category: "Sub", value: "atomic-fetch-inc",
                    url: " /routine/atomic-fetch-inc" }
                  ,
{ category: "Sub", value: "atomic-fetch-sub",
                    url: " /routine/atomic-fetch-sub" }
                  ,
{ category: "Sub", value: "atomic-inc-fetch",
                    url: " /routine/atomic-inc-fetch" }
                  ,
{ category: "Method", value: "attributes",
                    url: " /routine/attributes" }
                  ,
{ category: "Routine", value: "auth",
                    url: " /routine/auth" }
                  ,
{ category: "Routine", value: "await",
                    url: " /routine/await" }
                  ,
{ category: "Method", value: "backtrace",
                    url: " /routine/backtrace" }
                  ,
{ category: "Sub", value: "bag",
                    url: " /routine/bag" }
                  ,
{ category: "Sub", value: "bail-out",
                    url: " /routine/bail-out" }
                  ,
{ category: "Method", value: "base",
                    url: " /routine/base" }
                  ,
{ category: "Method", value: "base-repeating",
                    url: " /routine/base-repeating" }
                  ,
{ category: "Routine", value: "basename",
                    url: " /routine/basename" }
                  ,
{ category: "Routine", value: "batch",
                    url: " /routine/batch" }
                  ,
{ category: "Routine", value: "before",
                    url: " /routine/before" }
                  ,
{ category: "Method", value: "bind-stderr",
                    url: " /routine/bind-stderr" }
                  ,
{ category: "Method", value: "bind-stdin",
                    url: " /routine/bind-stdin" }
                  ,
{ category: "Method", value: "bind-stdout",
                    url: " /routine/bind-stdout" }
                  ,
{ category: "Method", value: "bind-udp",
                    url: " /routine/bind-udp" }
                  ,
{ category: "Method", value: "bits",
                    url: " /routine/bits" }
                  ,
{ category: "Method", value: "bless",
                    url: " /routine/bless" }
                  ,
{ category: "Method", value: "block",
                    url: " /routine/block" }
                  ,
{ category: "Method", value: "bool-only",
                    url: " /routine/bool-only" }
                  ,
{ category: "Method", value: "bounds",
                    url: " /routine/bounds" }
                  ,
{ category: "Method", value: "break",
                    url: " /routine/break" }
                  ,
{ category: "Method", value: "broken",
                    url: " /routine/broken" }
                  ,
{ category: "Method", value: "build-date",
                    url: " /routine/build-date" }
                  ,
{ category: "Infix", value: "but",
                    url: " /routine/but" }
                  ,
{ category: "Method", value: "bytes",
                    url: " /routine/bytes" }
                  ,
{ category: "Routine", value: "cache",
                    url: " /routine/cache" }
                  ,
{ category: "Sub", value: "callframe",
                    url: " /routine/callframe" }
                  ,
{ category: "Method", value: "calling-package",
                    url: " /routine/calling-package" }
                  ,
{ category: "Sub", value: "callsame",
                    url: " /routine/callsame" }
                  ,
{ category: "Sub", value: "callwith",
                    url: " /routine/callwith" }
                  ,
{ category: "Method", value: "can",
                    url: " /routine/can" }
                  ,
{ category: "Sub", value: "can-ok",
                    url: " /routine/can-ok" }
                  ,
{ category: "Method", value: "cancel",
                    url: " /routine/cancel" }
                  ,
{ category: "Routine", value: "candidates",
                    url: " /routine/candidates" }
                  ,
{ category: "Routine", value: "cando",
                    url: " /routine/cando" }
                  ,
{ category: "Routine", value: "canonpath",
                    url: " /routine/canonpath" }
                  ,
{ category: "Method", value: "caps",
                    url: " /routine/caps" }
                  ,
{ category: "Method", value: "caption",
                    url: " /routine/caption" }
                  ,
{ category: "Method", value: "capture",
                    url: " /routine/capture" }
                  ,
{ category: "Routine", value: "cas",
                    url: " /routine/cas" }
                  ,
{ category: "Routine", value: "catdir",
                    url: " /routine/catdir" }
                  ,
{ category: "Routine", value: "categorize",
                    url: " /routine/categorize" }
                  ,
{ category: "Routine", value: "categorize-list",
                    url: " /routine/categorize-list" }
                  ,
{ category: "Routine", value: "catfile",
                    url: " /routine/catfile" }
                  ,
{ category: "Routine", value: "catpath",
                    url: " /routine/catpath" }
                  ,
{ category: "Method", value: "cause",
                    url: " /routine/cause" }
                  ,
{ category: "Routine", value: "ceiling",
                    url: " /routine/ceiling" }
                  ,
{ category: "Sub", value: "cglobal",
                    url: " /routine/cglobal" }
                  ,
{ category: "Routine", value: "changed",
                    url: " /routine/changed" }
                  ,
{ category: "Routine", value: "channel",
                    url: " /routine/channel" }
                  ,
{ category: "Routine", value: "chars",
                    url: " /routine/chars" }
                  ,
{ category: "Routine", value: "chdir",
                    url: " /routine/chdir" }
                  ,
{ category: "Method", value: "child",
                    url: " /routine/child" }
                  ,
{ category: "Method", value: "child-name",
                    url: " /routine/child-name" }
                  ,
{ category: "Method", value: "child-typename",
                    url: " /routine/child-typename" }
                  ,
{ category: "Routine", value: "chmod",
                    url: " /routine/chmod" }
                  ,
{ category: "Routine", value: "chomp",
                    url: " /routine/chomp" }
                  ,
{ category: "Routine", value: "chop",
                    url: " /routine/chop" }
                  ,
{ category: "Routine", value: "chr",
                    url: " /routine/chr" }
                  ,
{ category: "Sub", value: "chrs",
                    url: " /routine/chrs" }
                  ,
{ category: "Method", value: "chunks",
                    url: " /routine/chunks" }
                  ,
{ category: "Sub", value: "cis",
                    url: " /routine/cis" }
                  ,
{ category: "Routine", value: "classify",
                    url: " /routine/classify" }
                  ,
{ category: "Routine", value: "classify-list",
                    url: " /routine/classify-list" }
                  ,
{ category: "Method", value: "cleanup",
                    url: " /routine/cleanup" }
                  ,
{ category: "Routine", value: "clone",
                    url: " /routine/clone" }
                  ,
{ category: "Routine", value: "close",
                    url: " /routine/close" }
                  ,
{ category: "Method", value: "close-stdin",
                    url: " /routine/close-stdin" }
                  ,
{ category: "Method", value: "closed",
                    url: " /routine/closed" }
                  ,
{ category: "Routine", value: "cmp",
                    url: " /routine/cmp" }
                  ,
{ category: "Sub", value: "cmp-ok",
                    url: " /routine/cmp-ok" }
                  ,
{ category: "Routine", value: "code",
                    url: " /routine/code" }
                  ,
{ category: "Routine", value: "codes",
                    url: " /routine/codes" }
                  ,
{ category: "Method", value: "coerce_type",
                    url: " /routine/coerce_type" }
                  ,
{ category: "Infix", value: "coll",
                    url: " /routine/coll" }
                  ,
{ category: "Method", value: "collate",
                    url: " /routine/collate" }
                  ,
{ category: "Method", value: "column",
                    url: " /routine/column" }
                  ,
{ category: "Routine", value: "comb",
                    url: " /routine/comb" }
                  ,
{ category: "Routine", value: "combinations",
                    url: " /routine/combinations" }
                  ,
{ category: "Routine", value: "command",
                    url: " /routine/command" }
                  ,
{ category: "Method", value: "comment",
                    url: " /routine/comment" }
                  ,
{ category: "Method", value: "compiler",
                    url: " /routine/compiler" }
                  ,
{ category: "Method", value: "compose",
                    url: " /routine/compose" }
                  ,
{ category: "Method", value: "compose_type",
                    url: " /routine/compose_type" }
                  ,
{ category: "Method", value: "composer",
                    url: " /routine/composer" }
                  ,
{ category: "Method", value: "compute_mro",
                    url: " /routine/compute_mro" }
                  ,
{ category: "Routine", value: "condition",
                    url: " /routine/condition" }
                  ,
{ category: "Routine", value: "config",
                    url: " /routine/config" }
                  ,
{ category: "Method", value: "configure_destroy",
                    url: " /routine/configure_destroy" }
                  ,
{ category: "Method", value: "configure_type_checking",
                    url: " /routine/configure_type_checking" }
                  ,
{ category: "Routine", value: "conj",
                    url: " /routine/conj" }
                  ,
{ category: "Method", value: "connect",
                    url: " /routine/connect" }
                  ,
{ category: "Prefix", value: "constant",
                    url: " /routine/constant" }
                  ,
{ category: "Method", value: "constraints",
                    url: " /routine/constraints" }
                  ,
{ category: "Method", value: "construct",
                    url: " /routine/construct" }
                  ,
{ category: "Routine", value: "contains",
                    url: " /routine/contains" }
                  ,
{ category: "Routine", value: "content",
                    url: " /routine/content" }
                  ,
{ category: "Method", value: "contents",
                    url: " /routine/contents" }
                  ,
{ category: "Routine", value: "copy",
                    url: " /routine/copy" }
                  ,
{ category: "Sub", value: "cos",
                    url: " /routine/cos" }
                  ,
{ category: "Sub", value: "cosec",
                    url: " /routine/cosec" }
                  ,
{ category: "Sub", value: "cosech",
                    url: " /routine/cosech" }
                  ,
{ category: "Sub", value: "cosh",
                    url: " /routine/cosh" }
                  ,
{ category: "Sub", value: "cotan",
                    url: " /routine/cotan" }
                  ,
{ category: "Sub", value: "cotanh",
                    url: " /routine/cotanh" }
                  ,
{ category: "Routine", value: "count",
                    url: " /routine/count" }
                  ,
{ category: "Method", value: "count-only",
                    url: " /routine/count-only" }
                  ,
{ category: "Method", value: "cpu-cores",
                    url: " /routine/cpu-cores" }
                  ,
{ category: "Method", value: "cpu-usage",
                    url: " /routine/cpu-usage" }
                  ,
{ category: "Method", value: "create_type",
                    url: " /routine/create_type" }
                  ,
{ category: "Sub", value: "cross",
                    url: " /routine/cross" }
                  ,
{ category: "Method", value: "cue",
                    url: " /routine/cue" }
                  ,
{ category: "Method", value: "curdir",
                    url: " /routine/curdir" }
                  ,
{ category: "Method", value: "curupdir",
                    url: " /routine/curupdir" }
                  ,
{ category: "Routine", value: "d",
                    url: " /routine/d" }
                  ,
{ category: "Method", value: "day",
                    url: " /routine/day" }
                  ,
{ category: "Method", value: "day-of-month",
                    url: " /routine/day-of-month" }
                  ,
{ category: "Method", value: "day-of-week",
                    url: " /routine/day-of-week" }
                  ,
{ category: "Method", value: "day-of-year",
                    url: " /routine/day-of-year" }
                  ,
{ category: "Method", value: "daycount",
                    url: " /routine/daycount" }
                  ,
{ category: "Method", value: "days-in-month",
                    url: " /routine/days-in-month" }
                  ,
{ category: "Method", value: "declaration",
                    url: " /routine/declaration" }
                  ,
{ category: "Method", value: "decode",
                    url: " /routine/decode" }
                  ,
{ category: "Method", value: "decoder",
                    url: " /routine/decoder" }
                  ,
{ category: "Method", value: "deepmap",
                    url: " /routine/deepmap" }
                  ,
{ category: "Routine", value: "default",
                    url: " /routine/default" }
                  ,
{ category: "Routine", value: "defined",
                    url: " /routine/defined" }
                  ,
{ category: "Method", value: "delayed",
                    url: " /routine/delayed" }
                  ,
{ category: "Method", value: "denominator",
                    url: " /routine/denominator" }
                  ,
{ category: "Routine", value: "desc",
                    url: " /routine/desc" }
                  ,
{ category: "Method", value: "destroyers",
                    url: " /routine/destroyers" }
                  ,
{ category: "Routine", value: "devnull",
                    url: " /routine/devnull" }
                  ,
{ category: "Sub", value: "diag",
                    url: " /routine/diag" }
                  ,
{ category: "Method", value: "did-you-mean",
                    url: " /routine/did-you-mean" }
                  ,
{ category: "Sub", value: "die",
                    url: " /routine/die" }
                  ,
{ category: "Sub", value: "dies-ok",
                    url: " /routine/dies-ok" }
                  ,
{ category: "Sub", value: "dir",
                    url: " /routine/dir" }
                  ,
{ category: "Routine", value: "dir-sep",
                    url: " /routine/dir-sep" }
                  ,
{ category: "Method", value: "dirname",
                    url: " /routine/dirname" }
                  ,
{ category: "Method", value: "distribution",
                    url: " /routine/distribution" }
                  ,
{ category: "Routine", value: "div",
                    url: " /routine/div" }
                  ,
{ category: "Method", value: "do",
                    url: " /routine/do" }
                  ,
{ category: "Routine", value: "does",
                    url: " /routine/does" }
                  ,
{ category: "Sub", value: "does-ok",
                    url: " /routine/does-ok" }
                  ,
{ category: "Method", value: "done",
                    url: " /routine/done" }
                  ,
{ category: "Sub", value: "done-testing",
                    url: " /routine/done-testing" }
                  ,
{ category: "Method", value: "duckmap",
                    url: " /routine/duckmap" }
                  ,
{ category: "Routine", value: "dynamic",
                    url: " /routine/dynamic" }
                  ,
{ category: "Routine", value: "e",
                    url: " /routine/e" }
                  ,
{ category: "Routine", value: "eager",
                    url: " /routine/eager" }
                  ,
{ category: "Routine", value: "earlier",
                    url: " /routine/earlier" }
                  ,
{ category: "Routine", value: "elems",
                    url: " /routine/elems" }
                  ,
{ category: "Routine", value: "emit",
                    url: " /routine/emit" }
                  ,
{ category: "Method", value: "enclosing",
                    url: " /routine/enclosing" }
                  ,
{ category: "Method", value: "encode",
                    url: " /routine/encode" }
                  ,
{ category: "Method", value: "encoder",
                    url: " /routine/encoder" }
                  ,
{ category: "Routine", value: "encoding",
                    url: " /routine/encoding" }
                  ,
{ category: "Routine", value: "end",
                    url: " /routine/end" }
                  ,
{ category: "Method", value: "endian",
                    url: " /routine/endian" }
                  ,
{ category: "Method", value: "ends-with",
                    url: " /routine/ends-with" }
                  ,
{ category: "Method", value: "enum_from_value",
                    url: " /routine/enum_from_value" }
                  ,
{ category: "Method", value: "enum_value_list",
                    url: " /routine/enum_value_list" }
                  ,
{ category: "Method", value: "enum_values",
                    url: " /routine/enum_values" }
                  ,
{ category: "Routine", value: "enums",
                    url: " /routine/enums" }
                  ,
{ category: "Routine", value: "eof",
                    url: " /routine/eof" }
                  ,
{ category: "Infix", value: "eq",
                    url: " /routine/eq" }
                  ,
{ category: "Routine", value: "eqv",
                    url: " /routine/eqv" }
                  ,
{ category: "Sub", value: "eval-dies-ok",
                    url: " /routine/eval-dies-ok" }
                  ,
{ category: "Sub", value: "eval-lives-ok",
                    url: " /routine/eval-lives-ok" }
                  ,
{ category: "Method", value: "exception",
                    url: " /routine/exception" }
                  ,
{ category: "Method", value: "excludes-max",
                    url: " /routine/excludes-max" }
                  ,
{ category: "Method", value: "excludes-min",
                    url: " /routine/excludes-min" }
                  ,
{ category: "Sub", value: "exit",
                    url: " /routine/exit" }
                  ,
{ category: "Method", value: "exitcode",
                    url: " /routine/exitcode" }
                  ,
{ category: "Routine", value: "exp",
                    url: " /routine/exp" }
                  ,
{ category: "Method", value: "expected",
                    url: " /routine/expected" }
                  ,
{ category: "Sub", value: "explicitly-manage",
                    url: " /routine/explicitly-manage" }
                  ,
{ category: "Sub", value: "expmod",
                    url: " /routine/expmod" }
                  ,
{ category: "Routine", value: "extension",
                    url: " /routine/extension" }
                  ,
{ category: "Routine", value: "f",
                    url: " /routine/f" }
                  ,
{ category: "Routine", value: "fail",
                    url: " /routine/fail" }
                  ,
{ category: "Sub", value: "fails-like",
                    url: " /routine/fails-like" }
                  ,
{ category: "Routine", value: "fc",
                    url: " /routine/fc" }
                  ,
{ category: "Method", value: "feature",
                    url: " /routine/feature" }
                  ,
{ category: "Infix", value: "ff",
                    url: " /routine/ff" }
                  ,
{ category: "Infix", value: "ff^",
                    url: " /routine/ff$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Infix", value: "fff",
                    url: " /routine/fff" }
                  ,
{ category: "Infix", value: "fff^",
                    url: " /routine/fff$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Routine", value: "file",
                    url: " /routine/file" }
                  ,
{ category: "Method", value: "filename",
                    url: " /routine/filename" }
                  ,
{ category: "Routine", value: "files",
                    url: " /routine/files" }
                  ,
{ category: "Method", value: "find",
                    url: " /routine/find" }
                  ,
{ category: "Method", value: "find_method",
                    url: " /routine/find_method" }
                  ,
{ category: "Method", value: "find_method_qualified",
                    url: " /routine/find_method_qualified" }
                  ,
{ category: "Method", value: "finish",
                    url: " /routine/finish" }
                  ,
{ category: "Routine", value: "first",
                    url: " /routine/first" }
                  ,
{ category: "Routine", value: "flat",
                    url: " /routine/flat" }
                  ,
{ category: "Routine", value: "flatmap",
                    url: " /routine/flatmap" }
                  ,
{ category: "Routine", value: "flip",
                    url: " /routine/flip" }
                  ,
{ category: "Routine", value: "floor",
                    url: " /routine/floor" }
                  ,
{ category: "Sub", value: "flunk",
                    url: " /routine/flunk" }
                  ,
{ category: "Routine", value: "flush",
                    url: " /routine/flush" }
                  ,
{ category: "Routine", value: "fmt",
                    url: " /routine/fmt" }
                  ,
{ category: "Method", value: "format",
                    url: " /routine/format" }
                  ,
{ category: "Method", value: "formatter",
                    url: " /routine/formatter" }
                  ,
{ category: "Method", value: "freeze",
                    url: " /routine/freeze" }
                  ,
{ category: "Routine", value: "from",
                    url: " /routine/from" }
                  ,
{ category: "Method", value: "from-list",
                    url: " /routine/from-list" }
                  ,
{ category: "Method", value: "from-loop",
                    url: " /routine/from-loop" }
                  ,
{ category: "Method", value: "from-posix",
                    url: " /routine/from-posix" }
                  ,
{ category: "Method", value: "full",
                    url: " /routine/full" }
                  ,
{ category: "Sub", value: "full-barrier",
                    url: " /routine/full-barrier" }
                  ,
{ category: "Infix", value: "gcd",
                    url: " /routine/gcd" }
                  ,
{ category: "Infix", value: "ge",
                    url: " /routine/ge" }
                  ,
{ category: "Routine", value: "get",
                    url: " /routine/get" }
                  ,
{ category: "Method", value: "get_value",
                    url: " /routine/get_value" }
                  ,
{ category: "Routine", value: "getc",
                    url: " /routine/getc" }
                  ,
{ category: "Routine", value: "gist",
                    url: " /routine/gist" }
                  ,
{ category: "Routine", value: "got",
                    url: " /routine/got" }
                  ,
{ category: "Routine", value: "grab",
                    url: " /routine/grab" }
                  ,
{ category: "Routine", value: "grabpairs",
                    url: " /routine/grabpairs" }
                  ,
{ category: "Routine", value: "grep",
                    url: " /routine/grep" }
                  ,
{ category: "Infix", value: "gt",
                    url: " /routine/gt" }
                  ,
{ category: "Routine", value: "handle",
                    url: " /routine/handle" }
                  ,
{ category: "Method", value: "handled",
                    url: " /routine/handled" }
                  ,
{ category: "Routine", value: "handles",
                    url: " /routine/handles" }
                  ,
{ category: "Method", value: "hardware",
                    url: " /routine/hardware" }
                  ,
{ category: "Method", value: "has_accessor",
                    url: " /routine/has_accessor" }
                  ,
{ category: "Routine", value: "hash",
                    url: " /routine/hash" }
                  ,
{ category: "Routine", value: "head",
                    url: " /routine/head" }
                  ,
{ category: "Method", value: "headers",
                    url: " /routine/headers" }
                  ,
{ category: "Method", value: "hh-mm-ss",
                    url: " /routine/hh-mm-ss" }
                  ,
{ category: "Method", value: "hidden",
                    url: " /routine/hidden" }
                  ,
{ category: "Routine", value: "hides",
                    url: " /routine/hides" }
                  ,
{ category: "Method", value: "hostname",
                    url: " /routine/hostname" }
                  ,
{ category: "Method", value: "hour",
                    url: " /routine/hour" }
                  ,
{ category: "Method", value: "how",
                    url: " /routine/how" }
                  ,
{ category: "Method", value: "hyper",
                    url: " /routine/hyper" }
                  ,
{ category: "Routine", value: "i",
                    url: " /routine/i" }
                  ,
{ category: "Method", value: "id",
                    url: " /routine/id" }
                  ,
{ category: "Method", value: "illegal",
                    url: " /routine/illegal" }
                  ,
{ category: "Method", value: "im",
                    url: " /routine/im" }
                  ,
{ category: "Method", value: "in",
                    url: " /routine/in" }
                  ,
{ category: "Method", value: "in-timezone",
                    url: " /routine/in-timezone" }
                  ,
{ category: "Method", value: "indent",
                    url: " /routine/indent" }
                  ,
{ category: "Routine", value: "index",
                    url: " /routine/index" }
                  ,
{ category: "Method", value: "indices",
                    url: " /routine/indices" }
                  ,
{ category: "Sub", value: "indir",
                    url: " /routine/indir" }
                  ,
{ category: "Method", value: "infinite",
                    url: " /routine/infinite" }
                  ,
{ category: "Method", value: "infix",
                    url: " /routine/infix" }
                  ,
{ category: "Sub", value: "infix:<**>",
                    url: " /routine/infix:<**>" }
                  ,
{ category: "Sub", value: "infix:<*>",
                    url: " /routine/infix:<*>" }
                  ,
{ category: "Routine", value: "infix:<+>",
                    url: " /routine/infix:<+>" }
                  ,
{ category: "Routine", value: "infix:<->",
                    url: " /routine/infix:<->" }
                  ,
{ category: "Sub", value: "infix:<\/>",
                    url: " /routine/infix:<$SOLIDUS>" }
                  ,
{ category: "Sub", value: "infix:<cmp>",
                    url: " /routine/infix:<cmp>" }
                  ,
{ category: "Method", value: "infix:<eqv>",
                    url: " /routine/infix:<eqv>" }
                  ,
{ category: "Sub", value: "infix:¬´!=¬ª",
                    url: " /routine/infix:¬´!=¬ª" }
                  ,
{ category: "Sub", value: "infix:¬´<=>¬ª",
                    url: " /routine/infix:¬´<=>¬ª" }
                  ,
{ category: "Sub", value: "infix:¬´<=¬ª",
                    url: " /routine/infix:¬´<=¬ª" }
                  ,
{ category: "Sub", value: "infix:¬´<¬ª",
                    url: " /routine/infix:¬´<¬ª" }
                  ,
{ category: "Sub", value: "infix:¬´==¬ª",
                    url: " /routine/infix:¬´==¬ª" }
                  ,
{ category: "Sub", value: "infix:¬´>=¬ª",
                    url: " /routine/infix:¬´>=¬ª" }
                  ,
{ category: "Sub", value: "infix:¬´>¬ª",
                    url: " /routine/infix:¬´>¬ª" }
                  ,
{ category: "Sub", value: "infix:¬´cmp¬ª",
                    url: " /routine/infix:¬´cmp¬ª" }
                  ,
{ category: "Method", value: "install",
                    url: " /routine/install" }
                  ,
{ category: "Method", value: "install_method_cache",
                    url: " /routine/install_method_cache" }
                  ,
{ category: "Method", value: "instead",
                    url: " /routine/instead" }
                  ,
{ category: "Method", value: "int-bounds",
                    url: " /routine/int-bounds" }
                  ,
{ category: "Method", value: "interval",
                    url: " /routine/interval" }
                  ,
{ category: "Method", value: "invalid-str",
                    url: " /routine/invalid-str" }
                  ,
{ category: "Routine", value: "invert",
                    url: " /routine/invert" }
                  ,
{ category: "Routine", value: "invocant",
                    url: " /routine/invocant" }
                  ,
{ category: "Sub", value: "is",
                    url: " /routine/is" }
                  ,
{ category: "Trait", value: "is DEPRECATED",
                    url: " /routine/is DEPRECATED" }
                  ,
{ category: "Trait", value: "is DEPRECATED (Attribute)",
                    url: " /routine/is DEPRECATED (Attribute)" }
                  ,
{ category: "Trait", value: "is cached",
                    url: " /routine/is cached" }
                  ,
{ category: "Trait", value: "is dynamic",
                    url: " /routine/is dynamic" }
                  ,
{ category: "Routine", value: "is export",
                    url: " /routine/is export" }
                  ,
{ category: "Trait", value: "is hidden-from-backtrace",
                    url: " /routine/is hidden-from-backtrace" }
                  ,
{ category: "Trait", value: "is nodal",
                    url: " /routine/is nodal" }
                  ,
{ category: "Trait", value: "is pure",
                    url: " /routine/is pure" }
                  ,
{ category: "Trait", value: "is required",
                    url: " /routine/is required" }
                  ,
{ category: "Trait", value: "is required (Attribute)",
                    url: " /routine/is required (Attribute)" }
                  ,
{ category: "Routine", value: "is rw",
                    url: " /routine/is rw" }
                  ,
{ category: "Trait", value: "is rw (Attribute)",
                    url: " /routine/is rw (Attribute)" }
                  ,
{ category: "Routine", value: "is-absolute",
                    url: " /routine/is-absolute" }
                  ,
{ category: "Sub", value: "is-approx",
                    url: " /routine/is-approx" }
                  ,
{ category: "Sub", value: "is-approx-calculate",
                    url: " /routine/is-approx-calculate" }
                  ,
{ category: "Sub", value: "is-deeply",
                    url: " /routine/is-deeply" }
                  ,
{ category: "Method", value: "is-hidden",
                    url: " /routine/is-hidden" }
                  ,
{ category: "Method", value: "is-initial-thread",
                    url: " /routine/is-initial-thread" }
                  ,
{ category: "Method", value: "is-int",
                    url: " /routine/is-int" }
                  ,
{ category: "Routine", value: "is-lazy",
                    url: " /routine/is-lazy" }
                  ,
{ category: "Method", value: "is-leap-year",
                    url: " /routine/is-leap-year" }
                  ,
{ category: "Sub", value: "is-prime",
                    url: " /routine/is-prime" }
                  ,
{ category: "Method", value: "is-relative",
                    url: " /routine/is-relative" }
                  ,
{ category: "Method", value: "is-routine",
                    url: " /routine/is-routine" }
                  ,
{ category: "Method", value: "is-setting",
                    url: " /routine/is-setting" }
                  ,
{ category: "Method", value: "is-win",
                    url: " /routine/is-win" }
                  ,
{ category: "Routine", value: "isNaN",
                    url: " /routine/isNaN" }
                  ,
{ category: "Sub", value: "is_approx",
                    url: " /routine/is_approx" }
                  ,
{ category: "Method", value: "is_trusted",
                    url: " /routine/is_trusted" }
                  ,
{ category: "Method", value: "is_type",
                    url: " /routine/is_type" }
                  ,
{ category: "Method", value: "isa",
                    url: " /routine/isa" }
                  ,
{ category: "Sub", value: "isa-ok",
                    url: " /routine/isa-ok" }
                  ,
{ category: "Sub", value: "isnt",
                    url: " /routine/isnt" }
                  ,
{ category: "Routine", value: "item",
                    url: " /routine/item" }
                  ,
{ category: "Routine", value: "iterator",
                    url: " /routine/iterator" }
                  ,
{ category: "Routine", value: "join",
                    url: " /routine/join" }
                  ,
{ category: "Method", value: "keep",
                    url: " /routine/keep" }
                  ,
{ category: "Method", value: "kept",
                    url: " /routine/kept" }
                  ,
{ category: "Routine", value: "key",
                    url: " /routine/key" }
                  ,
{ category: "Routine", value: "keyof",
                    url: " /routine/keyof" }
                  ,
{ category: "Routine", value: "keys",
                    url: " /routine/keys" }
                  ,
{ category: "Method", value: "kill",
                    url: " /routine/kill" }
                  ,
{ category: "Routine", value: "kv",
                    url: " /routine/kv" }
                  ,
{ category: "Method", value: "kxxv",
                    url: " /routine/kxxv" }
                  ,
{ category: "Routine", value: "l",
                    url: " /routine/l" }
                  ,
{ category: "Method", value: "lang",
                    url: " /routine/lang" }
                  ,
{ category: "Method", value: "last",
                    url: " /routine/last" }
                  ,
{ category: "Sub", value: "lastcall",
                    url: " /routine/lastcall" }
                  ,
{ category: "Routine", value: "later",
                    url: " /routine/later" }
                  ,
{ category: "Method", value: "lazy",
                    url: " /routine/lazy" }
                  ,
{ category: "Routine", value: "lc",
                    url: " /routine/lc" }
                  ,
{ category: "Infix", value: "lcm",
                    url: " /routine/lcm" }
                  ,
{ category: "Infix", value: "le",
                    url: " /routine/le" }
                  ,
{ category: "Method", value: "leading",
                    url: " /routine/leading" }
                  ,
{ category: "Infix", value: "leg",
                    url: " /routine/leg" }
                  ,
{ category: "Routine", value: "let",
                    url: " /routine/let" }
                  ,
{ category: "Routine", value: "level",
                    url: " /routine/level" }
                  ,
{ category: "Sub", value: "like",
                    url: " /routine/like" }
                  ,
{ category: "Routine", value: "line",
                    url: " /routine/line" }
                  ,
{ category: "Routine", value: "lines",
                    url: " /routine/lines" }
                  ,
{ category: "Method", value: "link",
                    url: " /routine/link" }
                  ,
{ category: "Routine", value: "list",
                    url: " /routine/list" }
                  ,
{ category: "Method", value: "listen",
                    url: " /routine/listen" }
                  ,
{ category: "Method", value: "live",
                    url: " /routine/live" }
                  ,
{ category: "Sub", value: "lives-ok",
                    url: " /routine/lives-ok" }
                  ,
{ category: "Routine", value: "load",
                    url: " /routine/load" }
                  ,
{ category: "Routine", value: "loaded",
                    url: " /routine/loaded" }
                  ,
{ category: "Method", value: "local",
                    url: " /routine/local" }
                  ,
{ category: "Routine", value: "lock",
                    url: " /routine/lock" }
                  ,
{ category: "Routine", value: "log",
                    url: " /routine/log" }
                  ,
{ category: "Routine", value: "log10",
                    url: " /routine/log10" }
                  ,
{ category: "Routine", value: "lookup",
                    url: " /routine/lookup" }
                  ,
{ category: "Method", value: "lsb",
                    url: " /routine/lsb" }
                  ,
{ category: "Infix", value: "lt",
                    url: " /routine/lt" }
                  ,
{ category: "Method", value: "made",
                    url: " /routine/made" }
                  ,
{ category: "Routine", value: "make",
                    url: " /routine/make" }
                  ,
{ category: "Routine", value: "map",
                    url: " /routine/map" }
                  ,
{ category: "Routine", value: "match",
                    url: " /routine/match" }
                  ,
{ category: "Routine", value: "max",
                    url: " /routine/max" }
                  ,
{ category: "Routine", value: "maxpairs",
                    url: " /routine/maxpairs" }
                  ,
{ category: "Method", value: "merge",
                    url: " /routine/merge" }
                  ,
{ category: "Routine", value: "message",
                    url: " /routine/message" }
                  ,
{ category: "Routine", value: "meta",
                    url: " /routine/meta" }
                  ,
{ category: "Routine", value: "method",
                    url: " /routine/method" }
                  ,
{ category: "Method", value: "method_table",
                    url: " /routine/method_table" }
                  ,
{ category: "Method", value: "methods",
                    url: " /routine/methods" }
                  ,
{ category: "Method", value: "migrate",
                    url: " /routine/migrate" }
                  ,
{ category: "Routine", value: "min",
                    url: " /routine/min" }
                  ,
{ category: "Routine", value: "minmax",
                    url: " /routine/minmax" }
                  ,
{ category: "Routine", value: "minpairs",
                    url: " /routine/minpairs" }
                  ,
{ category: "Method", value: "minute",
                    url: " /routine/minute" }
                  ,
{ category: "Method", value: "misplaced",
                    url: " /routine/misplaced" }
                  ,
{ category: "Sub", value: "mix",
                    url: " /routine/mix" }
                  ,
{ category: "Routine", value: "mkdir",
                    url: " /routine/mkdir" }
                  ,
{ category: "Infix", value: "mod",
                    url: " /routine/mod" }
                  ,
{ category: "Routine", value: "mode",
                    url: " /routine/mode" }
                  ,
{ category: "Routine", value: "modified",
                    url: " /routine/modified" }
                  ,
{ category: "Method", value: "month",
                    url: " /routine/month" }
                  ,
{ category: "Method", value: "move",
                    url: " /routine/move" }
                  ,
{ category: "Method", value: "mro",
                    url: " /routine/mro" }
                  ,
{ category: "Method", value: "mro_unhidden",
                    url: " /routine/mro_unhidden" }
                  ,
{ category: "Method", value: "msb",
                    url: " /routine/msb" }
                  ,
{ category: "Method", value: "multi",
                    url: " /routine/multi" }
                  ,
{ category: "Method", value: "multiness",
                    url: " /routine/multiness" }
                  ,
{ category: "Method", value: "my",
                    url: " /routine/my" }
                  ,
{ category: "Routine", value: "name",
                    url: " /routine/name" }
                  ,
{ category: "Method", value: "named",
                    url: " /routine/named" }
                  ,
{ category: "Method", value: "named_names",
                    url: " /routine/named_names" }
                  ,
{ category: "Method", value: "narrow",
                    url: " /routine/narrow" }
                  ,
{ category: "Routine", value: "native-descriptor",
                    url: " /routine/native-descriptor" }
                  ,
{ category: "Sub", value: "nativecast",
                    url: " /routine/nativecast" }
                  ,
{ category: "Sub", value: "nativesizeof",
                    url: " /routine/nativesizeof" }
                  ,
{ category: "Infix", value: "ne",
                    url: " /routine/ne" }
                  ,
{ category: "Routine", value: "need",
                    url: " /routine/need" }
                  ,
{ category: "Routine", value: "new",
                    url: " /routine/new" }
                  ,
{ category: "Method", value: "new-from-daycount",
                    url: " /routine/new-from-daycount" }
                  ,
{ category: "Routine", value: "new-from-pairs",
                    url: " /routine/new-from-pairs" }
                  ,
{ category: "Routine", value: "new_type",
                    url: " /routine/new_type" }
                  ,
{ category: "Method", value: "next",
                    url: " /routine/next" }
                  ,
{ category: "Method", value: "next-handle",
                    url: " /routine/next-handle" }
                  ,
{ category: "Sub", value: "nextcallee",
                    url: " /routine/nextcallee" }
                  ,
{ category: "Sub", value: "nextsame",
                    url: " /routine/nextsame" }
                  ,
{ category: "Sub", value: "nextwith",
                    url: " /routine/nextwith" }
                  ,
{ category: "Routine", value: "nl-in",
                    url: " /routine/nl-in" }
                  ,
{ category: "Routine", value: "nl-out",
                    url: " /routine/nl-out" }
                  ,
{ category: "Method", value: "nodemap",
                    url: " /routine/nodemap" }
                  ,
{ category: "Sub", value: "nok",
                    url: " /routine/nok" }
                  ,
{ category: "Method", value: "none",
                    url: " /routine/none" }
                  ,
{ category: "Method", value: "norm",
                    url: " /routine/norm" }
                  ,
{ category: "Routine", value: "not",
                    url: " /routine/not" }
                  ,
{ category: "Infix", value: "notandthen",
                    url: " /routine/notandthen" }
                  ,
{ category: "Method", value: "note",
                    url: " /routine/note" }
                  ,
{ category: "Routine", value: "now",
                    url: " /routine/now" }
                  ,
{ category: "Method", value: "nude",
                    url: " /routine/nude" }
                  ,
{ category: "Method", value: "numerator",
                    url: " /routine/numerator" }
                  ,
{ category: "Routine", value: "of",
                    url: " /routine/of" }
                  ,
{ category: "Method", value: "offset",
                    url: " /routine/offset" }
                  ,
{ category: "Method", value: "offset-in-hours",
                    url: " /routine/offset-in-hours" }
                  ,
{ category: "Method", value: "offset-in-minutes",
                    url: " /routine/offset-in-minutes" }
                  ,
{ category: "Sub", value: "ok",
                    url: " /routine/ok" }
                  ,
{ category: "Method", value: "old",
                    url: " /routine/old" }
                  ,
{ category: "Method", value: "on-close",
                    url: " /routine/on-close" }
                  ,
{ category: "Method", value: "on-switch",
                    url: " /routine/on-switch" }
                  ,
{ category: "Method", value: "one",
                    url: " /routine/one" }
                  ,
{ category: "Routine", value: "open",
                    url: " /routine/open" }
                  ,
{ category: "Routine", value: "opened",
                    url: " /routine/opened" }
                  ,
{ category: "Method", value: "operation",
                    url: " /routine/operation" }
                  ,
{ category: "Method", value: "optional",
                    url: " /routine/optional" }
                  ,
{ category: "Infix", value: "or",
                    url: " /routine/or" }
                  ,
{ category: "Routine", value: "ord",
                    url: " /routine/ord" }
                  ,
{ category: "Routine", value: "ords",
                    url: " /routine/ords" }
                  ,
{ category: "Infix", value: "orelse",
                    url: " /routine/orelse" }
                  ,
{ category: "Method", value: "orig",
                    url: " /routine/orig" }
                  ,
{ category: "Method", value: "os-error",
                    url: " /routine/os-error" }
                  ,
{ category: "Method", value: "osname",
                    url: " /routine/osname" }
                  ,
{ category: "Routine", value: "out-buffer",
                    url: " /routine/out-buffer" }
                  ,
{ category: "Sub", value: "pack",
                    url: " /routine/pack" }
                  ,
{ category: "Routine", value: "package",
                    url: " /routine/package" }
                  ,
{ category: "Routine", value: "package-kind",
                    url: " /routine/package-kind" }
                  ,
{ category: "Method", value: "package-name",
                    url: " /routine/package-name" }
                  ,
{ category: "Method", value: "packages",
                    url: " /routine/packages" }
                  ,
{ category: "Method", value: "pair",
                    url: " /routine/pair" }
                  ,
{ category: "Routine", value: "pairs",
                    url: " /routine/pairs" }
                  ,
{ category: "Method", value: "pairup",
                    url: " /routine/pairup" }
                  ,
{ category: "Routine", value: "parameter",
                    url: " /routine/parameter" }
                  ,
{ category: "Method", value: "params",
                    url: " /routine/params" }
                  ,
{ category: "Routine", value: "parent",
                    url: " /routine/parent" }
                  ,
{ category: "Method", value: "parent-name",
                    url: " /routine/parent-name" }
                  ,
{ category: "Method", value: "parents",
                    url: " /routine/parents" }
                  ,
{ category: "Method", value: "parse",
                    url: " /routine/parse" }
                  ,
{ category: "Sub", value: "parse-base",
                    url: " /routine/parse-base" }
                  ,
{ category: "Sub", value: "parse-names",
                    url: " /routine/parse-names" }
                  ,
{ category: "Method", value: "parsefile",
                    url: " /routine/parsefile" }
                  ,
{ category: "Routine", value: "parts",
                    url: " /routine/parts" }
                  ,
{ category: "Sub", value: "pass",
                    url: " /routine/pass" }
                  ,
{ category: "Routine", value: "path",
                    url: " /routine/path" }
                  ,
{ category: "Method", value: "path-sep",
                    url: " /routine/path-sep" }
                  ,
{ category: "Method", value: "payload",
                    url: " /routine/payload" }
                  ,
{ category: "Method", value: "peer-host",
                    url: " /routine/peer-host" }
                  ,
{ category: "Method", value: "peer-port",
                    url: " /routine/peer-port" }
                  ,
{ category: "Sub", value: "periods",
                    url: " /routine/periods" }
                  ,
{ category: "Routine", value: "perl",
                    url: " /routine/perl" }
                  ,
{ category: "Routine", value: "permutations",
                    url: " /routine/permutations" }
                  ,
{ category: "Method", value: "phaser",
                    url: " /routine/phaser" }
                  ,
{ category: "Term", value: "pi",
                    url: " /routine/pi" }
                  ,
{ category: "Routine", value: "pick",
                    url: " /routine/pick" }
                  ,
{ category: "Routine", value: "pickpairs",
                    url: " /routine/pickpairs" }
                  ,
{ category: "Routine", value: "pid",
                    url: " /routine/pid" }
                  ,
{ category: "Routine", value: "placeholder",
                    url: " /routine/placeholder" }
                  ,
{ category: "Sub", value: "plan",
                    url: " /routine/plan" }
                  ,
{ category: "Method", value: "plus",
                    url: " /routine/plus" }
                  ,
{ category: "Method", value: "polar",
                    url: " /routine/polar" }
                  ,
{ category: "Method", value: "poll",
                    url: " /routine/poll" }
                  ,
{ category: "Routine", value: "polymod",
                    url: " /routine/polymod" }
                  ,
{ category: "Routine", value: "pop",
                    url: " /routine/pop" }
                  ,
{ category: "Routine", value: "pos",
                    url: " /routine/pos" }
                  ,
{ category: "Method", value: "positional",
                    url: " /routine/positional" }
                  ,
{ category: "Method", value: "posix",
                    url: " /routine/posix" }
                  ,
{ category: "Method", value: "postfix",
                    url: " /routine/postfix" }
                  ,
{ category: "Method", value: "postmatch",
                    url: " /routine/postmatch" }
                  ,
{ category: "Method", value: "precomp-ext",
                    url: " /routine/precomp-ext" }
                  ,
{ category: "Method", value: "precomp-target",
                    url: " /routine/precomp-target" }
                  ,
{ category: "Method", value: "precompiled",
                    url: " /routine/precompiled" }
                  ,
{ category: "Routine", value: "pred",
                    url: " /routine/pred" }
                  ,
{ category: "Routine", value: "prefix",
                    url: " /routine/prefix" }
                  ,
{ category: "Method", value: "prematch",
                    url: " /routine/prematch" }
                  ,
{ category: "Routine", value: "prepend",
                    url: " /routine/prepend" }
                  ,
{ category: "Method", value: "primary",
                    url: " /routine/primary" }
                  ,
{ category: "Routine", value: "print",
                    url: " /routine/print" }
                  ,
{ category: "Routine", value: "print-nl",
                    url: " /routine/print-nl" }
                  ,
{ category: "Method", value: "print-to",
                    url: " /routine/print-to" }
                  ,
{ category: "Routine", value: "printf",
                    url: " /routine/printf" }
                  ,
{ category: "Method", value: "private",
                    url: " /routine/private" }
                  ,
{ category: "Method", value: "private_method_table",
                    url: " /routine/private_method_table" }
                  ,
{ category: "Routine", value: "proc",
                    url: " /routine/proc" }
                  ,
{ category: "Routine", value: "produce",
                    url: " /routine/produce" }
                  ,
{ category: "Routine", value: "promise",
                    url: " /routine/promise" }
                  ,
{ category: "Sub", value: "prompt",
                    url: " /routine/prompt" }
                  ,
{ category: "Routine", value: "protect",
                    url: " /routine/protect" }
                  ,
{ category: "Method", value: "pull-one",
                    url: " /routine/pull-one" }
                  ,
{ category: "Routine", value: "push",
                    url: " /routine/push" }
                  ,
{ category: "Method", value: "push-all",
                    url: " /routine/push-all" }
                  ,
{ category: "Method", value: "push-at-least",
                    url: " /routine/push-at-least" }
                  ,
{ category: "Method", value: "push-exactly",
                    url: " /routine/push-exactly" }
                  ,
{ category: "Method", value: "push-until-lazy",
                    url: " /routine/push-until-lazy" }
                  ,
{ category: "Routine", value: "put",
                    url: " /routine/put" }
                  ,
{ category: "Method", value: "qualifier-type",
                    url: " /routine/qualifier-type" }
                  ,
{ category: "Method", value: "quaternary",
                    url: " /routine/quaternary" }
                  ,
{ category: "Method", value: "quit",
                    url: " /routine/quit" }
                  ,
{ category: "Routine", value: "r",
                    url: " /routine/r" }
                  ,
{ category: "Method", value: "race",
                    url: " /routine/race" }
                  ,
{ category: "Method", value: "radix",
                    url: " /routine/radix" }
                  ,
{ category: "Routine", value: "rand",
                    url: " /routine/rand" }
                  ,
{ category: "Method", value: "range",
                    url: " /routine/range" }
                  ,
{ category: "Method", value: "raw",
                    url: " /routine/raw" }
                  ,
{ category: "Method", value: "re",
                    url: " /routine/re" }
                  ,
{ category: "Routine", value: "read",
                    url: " /routine/read" }
                  ,
{ category: "Method", value: "read-bits",
                    url: " /routine/read-bits" }
                  ,
{ category: "Method", value: "read-int128",
                    url: " /routine/read-int128" }
                  ,
{ category: "Method", value: "read-int16",
                    url: " /routine/read-int16" }
                  ,
{ category: "Method", value: "read-int32",
                    url: " /routine/read-int32" }
                  ,
{ category: "Method", value: "read-int64",
                    url: " /routine/read-int64" }
                  ,
{ category: "Method", value: "read-int8",
                    url: " /routine/read-int8" }
                  ,
{ category: "Method", value: "read-num32",
                    url: " /routine/read-num32" }
                  ,
{ category: "Method", value: "read-num64",
                    url: " /routine/read-num64" }
                  ,
{ category: "Method", value: "read-ubits",
                    url: " /routine/read-ubits" }
                  ,
{ category: "Method", value: "read-uint128",
                    url: " /routine/read-uint128" }
                  ,
{ category: "Method", value: "read-uint16",
                    url: " /routine/read-uint16" }
                  ,
{ category: "Method", value: "read-uint32",
                    url: " /routine/read-uint32" }
                  ,
{ category: "Method", value: "read-uint64",
                    url: " /routine/read-uint64" }
                  ,
{ category: "Method", value: "read-uint8",
                    url: " /routine/read-uint8" }
                  ,
{ category: "Routine", value: "readchars",
                    url: " /routine/readchars" }
                  ,
{ category: "Routine", value: "readonly",
                    url: " /routine/readonly" }
                  ,
{ category: "Method", value: "ready",
                    url: " /routine/ready" }
                  ,
{ category: "Method", value: "reallocate",
                    url: " /routine/reallocate" }
                  ,
{ category: "Method", value: "reals",
                    url: " /routine/reals" }
                  ,
{ category: "Routine", value: "reason",
                    url: " /routine/reason" }
                  ,
{ category: "Method", value: "rebless",
                    url: " /routine/rebless" }
                  ,
{ category: "Method", value: "receive",
                    url: " /routine/receive" }
                  ,
{ category: "Method", value: "recv",
                    url: " /routine/recv" }
                  ,
{ category: "Method", value: "redispatcher",
                    url: " /routine/redispatcher" }
                  ,
{ category: "Method", value: "redo",
                    url: " /routine/redo" }
                  ,
{ category: "Routine", value: "reduce",
                    url: " /routine/reduce" }
                  ,
{ category: "Routine", value: "rel2abs",
                    url: " /routine/rel2abs" }
                  ,
{ category: "Method", value: "relative",
                    url: " /routine/relative" }
                  ,
{ category: "Routine", value: "release",
                    url: " /routine/release" }
                  ,
{ category: "Method", value: "rename",
                    url: " /routine/rename" }
                  ,
{ category: "Routine", value: "repeated",
                    url: " /routine/repeated" }
                  ,
{ category: "Method", value: "replacement",
                    url: " /routine/replacement" }
                  ,
{ category: "Method", value: "repo",
                    url: " /routine/repo" }
                  ,
{ category: "Method", value: "repo-id",
                    url: " /routine/repo-id" }
                  ,
{ category: "Sub", value: "report",
                    url: " /routine/report" }
                  ,
{ category: "Method", value: "required",
                    url: " /routine/required" }
                  ,
{ category: "Method", value: "reserved",
                    url: " /routine/reserved" }
                  ,
{ category: "Routine", value: "resolve",
                    url: " /routine/resolve" }
                  ,
{ category: "Method", value: "restore",
                    url: " /routine/restore" }
                  ,
{ category: "Method", value: "result",
                    url: " /routine/result" }
                  ,
{ category: "Method", value: "resume",
                    url: " /routine/resume" }
                  ,
{ category: "Method", value: "rethrow",
                    url: " /routine/rethrow" }
                  ,
{ category: "Method", value: "return",
                    url: " /routine/return" }
                  ,
{ category: "Method", value: "return-rw",
                    url: " /routine/return-rw" }
                  ,
{ category: "Method", value: "returns",
                    url: " /routine/returns" }
                  ,
{ category: "Routine", value: "reverse",
                    url: " /routine/reverse" }
                  ,
{ category: "Method", value: "right",
                    url: " /routine/right" }
                  ,
{ category: "Routine", value: "rindex",
                    url: " /routine/rindex" }
                  ,
{ category: "Sub", value: "rmdir",
                    url: " /routine/rmdir" }
                  ,
{ category: "Method", value: "role",
                    url: " /routine/role" }
                  ,
{ category: "Method", value: "roles_to_compose",
                    url: " /routine/roles_to_compose" }
                  ,
{ category: "Method", value: "rolish",
                    url: " /routine/rolish" }
                  ,
{ category: "Routine", value: "roll",
                    url: " /routine/roll" }
                  ,
{ category: "Routine", value: "rootdir",
                    url: " /routine/rootdir" }
                  ,
{ category: "Routine", value: "roots",
                    url: " /routine/roots" }
                  ,
{ category: "Sub", value: "rotate",
                    url: " /routine/rotate" }
                  ,
{ category: "Routine", value: "rotor",
                    url: " /routine/rotor" }
                  ,
{ category: "Routine", value: "round",
                    url: " /routine/round" }
                  ,
{ category: "Sub", value: "roundrobin",
                    url: " /routine/roundrobin" }
                  ,
{ category: "Method", value: "routine-type",
                    url: " /routine/routine-type" }
                  ,
{ category: "Routine", value: "run",
                    url: " /routine/run" }
                  ,
{ category: "Routine", value: "rw",
                    url: " /routine/rw" }
                  ,
{ category: "Method", value: "rwx",
                    url: " /routine/rwx" }
                  ,
{ category: "Routine", value: "s",
                    url: " /routine/s" }
                  ,
{ category: "Sub", value: "samecase",
                    url: " /routine/samecase" }
                  ,
{ category: "Sub", value: "samemark",
                    url: " /routine/samemark" }
                  ,
{ category: "Sub", value: "samewith",
                    url: " /routine/samewith" }
                  ,
{ category: "Routine", value: "say",
                    url: " /routine/say" }
                  ,
{ category: "Method", value: "schedule-on",
                    url: " /routine/schedule-on" }
                  ,
{ category: "Method", value: "scheduler",
                    url: " /routine/scheduler" }
                  ,
{ category: "Routine", value: "scope",
                    url: " /routine/scope" }
                  ,
{ category: "Sub", value: "sec",
                    url: " /routine/sec" }
                  ,
{ category: "Sub", value: "sech",
                    url: " /routine/sech" }
                  ,
{ category: "Method", value: "second",
                    url: " /routine/second" }
                  ,
{ category: "Method", value: "secondary",
                    url: " /routine/secondary" }
                  ,
{ category: "Routine", value: "seek",
                    url: " /routine/seek" }
                  ,
{ category: "Routine", value: "self",
                    url: " /routine/self" }
                  ,
{ category: "Method", value: "send",
                    url: " /routine/send" }
                  ,
{ category: "Method", value: "serial",
                    url: " /routine/serial" }
                  ,
{ category: "Routine", value: "set",
                    url: " /routine/set" }
                  ,
{ category: "Method", value: "set-instruments",
                    url: " /routine/set-instruments" }
                  ,
{ category: "Method", value: "set_hidden",
                    url: " /routine/set_hidden" }
                  ,
{ category: "Method", value: "set_name",
                    url: " /routine/set_name" }
                  ,
{ category: "Method", value: "set_package",
                    url: " /routine/set_package" }
                  ,
{ category: "Method", value: "set_rw",
                    url: " /routine/set_rw" }
                  ,
{ category: "Method", value: "set_value",
                    url: " /routine/set_value" }
                  ,
{ category: "Method", value: "setup_finalization",
                    url: " /routine/setup_finalization" }
                  ,
{ category: "Method", value: "shape",
                    url: " /routine/shape" }
                  ,
{ category: "Method", value: "share",
                    url: " /routine/share" }
                  ,
{ category: "Routine", value: "shell",
                    url: " /routine/shell" }
                  ,
{ category: "Routine", value: "shift",
                    url: " /routine/shift" }
                  ,
{ category: "Routine", value: "short-id",
                    url: " /routine/short-id" }
                  ,
{ category: "Method", value: "short-name",
                    url: " /routine/short-name" }
                  ,
{ category: "Method", value: "sibling",
                    url: " /routine/sibling" }
                  ,
{ category: "Method", value: "sigil",
                    url: " /routine/sigil" }
                  ,
{ category: "Routine", value: "sign",
                    url: " /routine/sign" }
                  ,
{ category: "Routine", value: "signal",
                    url: " /routine/signal" }
                  ,
{ category: "Method", value: "signals",
                    url: " /routine/signals" }
                  ,
{ category: "Routine", value: "signature",
                    url: " /routine/signature" }
                  ,
{ category: "Sub", value: "sin",
                    url: " /routine/sin" }
                  ,
{ category: "Sub", value: "sinh",
                    url: " /routine/sinh" }
                  ,
{ category: "Routine", value: "sink",
                    url: " /routine/sink" }
                  ,
{ category: "Method", value: "sink-all",
                    url: " /routine/sink-all" }
                  ,
{ category: "Routine", value: "skip",
                    url: " /routine/skip" }
                  ,
{ category: "Method", value: "skip-at-least",
                    url: " /routine/skip-at-least" }
                  ,
{ category: "Method", value: "skip-at-least-pull-one",
                    url: " /routine/skip-at-least-pull-one" }
                  ,
{ category: "Method", value: "skip-one",
                    url: " /routine/skip-one" }
                  ,
{ category: "Sub", value: "skip-rest",
                    url: " /routine/skip-rest" }
                  ,
{ category: "Sub", value: "sleep",
                    url: " /routine/sleep" }
                  ,
{ category: "Sub", value: "sleep-timer",
                    url: " /routine/sleep-timer" }
                  ,
{ category: "Sub", value: "sleep-until",
                    url: " /routine/sleep-until" }
                  ,
{ category: "Sub", value: "slip",
                    url: " /routine/slip" }
                  ,
{ category: "Routine", value: "slurp",
                    url: " /routine/slurp" }
                  ,
{ category: "Method", value: "slurp-rest",
                    url: " /routine/slurp-rest" }
                  ,
{ category: "Method", value: "slurpy",
                    url: " /routine/slurpy" }
                  ,
{ category: "Sub", value: "snap",
                    url: " /routine/snap" }
                  ,
{ category: "Sub", value: "snapper",
                    url: " /routine/snapper" }
                  ,
{ category: "Routine", value: "so",
                    url: " /routine/so" }
                  ,
{ category: "Method", value: "socket-host",
                    url: " /routine/socket-host" }
                  ,
{ category: "Method", value: "socket-port",
                    url: " /routine/socket-port" }
                  ,
{ category: "Routine", value: "sort",
                    url: " /routine/sort" }
                  ,
{ category: "Routine", value: "source",
                    url: " /routine/source" }
                  ,
{ category: "Method", value: "source-package",
                    url: " /routine/source-package" }
                  ,
{ category: "Method", value: "spawn",
                    url: " /routine/spawn" }
                  ,
{ category: "Routine", value: "splice",
                    url: " /routine/splice" }
                  ,
{ category: "Routine", value: "split",
                    url: " /routine/split" }
                  ,
{ category: "Routine", value: "splitdir",
                    url: " /routine/splitdir" }
                  ,
{ category: "Routine", value: "splitpath",
                    url: " /routine/splitpath" }
                  ,
{ category: "Method", value: "sprintf",
                    url: " /routine/sprintf" }
                  ,
{ category: "Routine", value: "spurt",
                    url: " /routine/spurt" }
                  ,
{ category: "Routine", value: "sqrt",
                    url: " /routine/sqrt" }
                  ,
{ category: "Routine", value: "squish",
                    url: " /routine/squish" }
                  ,
{ category: "Sub", value: "srand",
                    url: " /routine/srand" }
                  ,
{ category: "Method", value: "stable",
                    url: " /routine/stable" }
                  ,
{ category: "Routine", value: "start",
                    url: " /routine/start" }
                  ,
{ category: "Method", value: "started",
                    url: " /routine/started" }
                  ,
{ category: "Method", value: "starts-with",
                    url: " /routine/starts-with" }
                  ,
{ category: "Routine", value: "status",
                    url: " /routine/status" }
                  ,
{ category: "Method", value: "stderr",
                    url: " /routine/stderr" }
                  ,
{ category: "Method", value: "stdout",
                    url: " /routine/stdout" }
                  ,
{ category: "Method", value: "sub_signature",
                    url: " /routine/sub_signature" }
                  ,
{ category: "Method", value: "subbuf",
                    url: " /routine/subbuf" }
                  ,
{ category: "Routine", value: "subbuf-rw",
                    url: " /routine/subbuf-rw" }
                  ,
{ category: "Method", value: "subname",
                    url: " /routine/subname" }
                  ,
{ category: "Method", value: "subparse",
                    url: " /routine/subparse" }
                  ,
{ category: "Routine", value: "subst",
                    url: " /routine/subst" }
                  ,
{ category: "Method", value: "subst-mutate",
                    url: " /routine/subst-mutate" }
                  ,
{ category: "Routine", value: "substr",
                    url: " /routine/substr" }
                  ,
{ category: "Method", value: "substr-eq",
                    url: " /routine/substr-eq" }
                  ,
{ category: "Routine", value: "substr-rw",
                    url: " /routine/substr-rw" }
                  ,
{ category: "Sub", value: "subtest",
                    url: " /routine/subtest" }
                  ,
{ category: "Routine", value: "succ",
                    url: " /routine/succ" }
                  ,
{ category: "Routine", value: "sum",
                    url: " /routine/sum" }
                  ,
{ category: "Routine", value: "symbol",
                    url: " /routine/symbol" }
                  ,
{ category: "Method", value: "symlink",
                    url: " /routine/symlink" }
                  ,
{ category: "Method", value: "t",
                    url: " /routine/t" }
                  ,
{ category: "Routine", value: "tail",
                    url: " /routine/tail" }
                  ,
{ category: "Routine", value: "take",
                    url: " /routine/take" }
                  ,
{ category: "Sub", value: "take-rw",
                    url: " /routine/take-rw" }
                  ,
{ category: "Sub", value: "tan",
                    url: " /routine/tan" }
                  ,
{ category: "Sub", value: "tanh",
                    url: " /routine/tanh" }
                  ,
{ category: "Method", value: "tap",
                    url: " /routine/tap" }
                  ,
{ category: "Routine", value: "target",
                    url: " /routine/target" }
                  ,
{ category: "Method", value: "target-name",
                    url: " /routine/target-name" }
                  ,
{ category: "Term", value: "tau",
                    url: " /routine/tau" }
                  ,
{ category: "Routine", value: "tc",
                    url: " /routine/tc" }
                  ,
{ category: "Routine", value: "tclc",
                    url: " /routine/tclc" }
                  ,
{ category: "Routine", value: "tell",
                    url: " /routine/tell" }
                  ,
{ category: "Routine", value: "temp",
                    url: " /routine/temp" }
                  ,
{ category: "Method", value: "term",
                    url: " /routine/term" }
                  ,
{ category: "Term", value: "term:<>",
                    url: " /routine/term:<>" }
                  ,
{ category: "Method", value: "tertiary",
                    url: " /routine/tertiary" }
                  ,
{ category: "Method", value: "then",
                    url: " /routine/then" }
                  ,
{ category: "Method", value: "throttle",
                    url: " /routine/throttle" }
                  ,
{ category: "Method", value: "throw",
                    url: " /routine/throw" }
                  ,
{ category: "Sub", value: "throws-like",
                    url: " /routine/throws-like" }
                  ,
{ category: "Term", value: "time",
                    url: " /routine/time" }
                  ,
{ category: "Method", value: "timezone",
                    url: " /routine/timezone" }
                  ,
{ category: "Routine", value: "tmpdir",
                    url: " /routine/tmpdir" }
                  ,
{ category: "Routine", value: "to",
                    url: " /routine/to" }
                  ,
{ category: "Method", value: "to-posix",
                    url: " /routine/to-posix" }
                  ,
{ category: "Method", value: "today",
                    url: " /routine/today" }
                  ,
{ category: "Sub", value: "todo",
                    url: " /routine/todo" }
                  ,
{ category: "Method", value: "toggle",
                    url: " /routine/toggle" }
                  ,
{ category: "Routine", value: "total",
                    url: " /routine/total" }
                  ,
{ category: "Method", value: "trailing",
                    url: " /routine/trailing" }
                  ,
{ category: "Routine", value: "trans",
                    url: " /routine/trans" }
                  ,
{ category: "Method", value: "tree",
                    url: " /routine/tree" }
                  ,
{ category: "Routine", value: "trim",
                    url: " /routine/trim" }
                  ,
{ category: "Routine", value: "trim-leading",
                    url: " /routine/trim-leading" }
                  ,
{ category: "Routine", value: "trim-trailing",
                    url: " /routine/trim-trailing" }
                  ,
{ category: "Routine", value: "truncate",
                    url: " /routine/truncate" }
                  ,
{ category: "Routine", value: "truncated-to",
                    url: " /routine/truncated-to" }
                  ,
{ category: "Routine", value: "trusts",
                    url: " /routine/trusts" }
                  ,
{ category: "Method", value: "try_acquire",
                    url: " /routine/try_acquire" }
                  ,
{ category: "Method", value: "trying",
                    url: " /routine/trying" }
                  ,
{ category: "Routine", value: "twigil",
                    url: " /routine/twigil" }
                  ,
{ category: "Routine", value: "type",
                    url: " /routine/type" }
                  ,
{ category: "Method", value: "type_captures",
                    url: " /routine/type_captures" }
                  ,
{ category: "Routine", value: "typename",
                    url: " /routine/typename" }
                  ,
{ category: "Routine", value: "uc",
                    url: " /routine/uc" }
                  ,
{ category: "Method", value: "udp",
                    url: " /routine/udp" }
                  ,
{ category: "Method", value: "uncaught_handler",
                    url: " /routine/uncaught_handler" }
                  ,
{ category: "Infix", value: "unicmp",
                    url: " /routine/unicmp" }
                  ,
{ category: "Sub", value: "unimatch",
                    url: " /routine/unimatch" }
                  ,
{ category: "Sub", value: "uniname",
                    url: " /routine/uniname" }
                  ,
{ category: "Sub", value: "uninames",
                    url: " /routine/uninames" }
                  ,
{ category: "Method", value: "uninstall",
                    url: " /routine/uninstall" }
                  ,
{ category: "Sub", value: "uniparse",
                    url: " /routine/uniparse" }
                  ,
{ category: "Sub", value: "uniprop",
                    url: " /routine/uniprop" }
                  ,
{ category: "Sub", value: "uniprops",
                    url: " /routine/uniprops" }
                  ,
{ category: "Routine", value: "unique",
                    url: " /routine/unique" }
                  ,
{ category: "Routine", value: "unival",
                    url: " /routine/unival" }
                  ,
{ category: "Method", value: "univals",
                    url: " /routine/univals" }
                  ,
{ category: "Sub", value: "unlike",
                    url: " /routine/unlike" }
                  ,
{ category: "Method", value: "unlink",
                    url: " /routine/unlink" }
                  ,
{ category: "Routine", value: "unlock",
                    url: " /routine/unlock" }
                  ,
{ category: "Method", value: "unpack",
                    url: " /routine/unpack" }
                  ,
{ category: "Routine", value: "unpolar",
                    url: " /routine/unpolar" }
                  ,
{ category: "Routine", value: "unshift",
                    url: " /routine/unshift" }
                  ,
{ category: "Method", value: "unwrap",
                    url: " /routine/unwrap" }
                  ,
{ category: "Method", value: "updir",
                    url: " /routine/updir" }
                  ,
{ category: "Sub", value: "use-ok",
                    url: " /routine/use-ok" }
                  ,
{ category: "Method", value: "utc",
                    url: " /routine/utc" }
                  ,
{ category: "Sub", value: "val",
                    url: " /routine/val" }
                  ,
{ category: "Routine", value: "value",
                    url: " /routine/value" }
                  ,
{ category: "Routine", value: "values",
                    url: " /routine/values" }
                  ,
{ category: "Method", value: "variable",
                    url: " /routine/variable" }
                  ,
{ category: "Method", value: "verbose-config",
                    url: " /routine/verbose-config" }
                  ,
{ category: "Routine", value: "version",
                    url: " /routine/version" }
                  ,
{ category: "Method", value: "volume",
                    url: " /routine/volume" }
                  ,
{ category: "Method", value: "vow",
                    url: " /routine/vow" }
                  ,
{ category: "Routine", value: "w",
                    url: " /routine/w" }
                  ,
{ category: "Method", value: "wait",
                    url: " /routine/wait" }
                  ,
{ category: "Sub", value: "warn",
                    url: " /routine/warn" }
                  ,
{ category: "Method", value: "watch",
                    url: " /routine/watch" }
                  ,
{ category: "Method", value: "watch-path",
                    url: " /routine/watch-path" }
                  ,
{ category: "Method", value: "week",
                    url: " /routine/week" }
                  ,
{ category: "Method", value: "week-number",
                    url: " /routine/week-number" }
                  ,
{ category: "Method", value: "week-year",
                    url: " /routine/week-year" }
                  ,
{ category: "Method", value: "weekday-of-month",
                    url: " /routine/weekday-of-month" }
                  ,
{ category: "Routine", value: "what",
                    url: " /routine/what" }
                  ,
{ category: "Method", value: "when",
                    url: " /routine/when" }
                  ,
{ category: "Method", value: "whole-second",
                    url: " /routine/whole-second" }
                  ,
{ category: "Method", value: "why",
                    url: " /routine/why" }
                  ,
{ category: "Routine", value: "wordcase",
                    url: " /routine/wordcase" }
                  ,
{ category: "Routine", value: "words",
                    url: " /routine/words" }
                  ,
{ category: "Method", value: "workaround",
                    url: " /routine/workaround" }
                  ,
{ category: "Method", value: "wrap",
                    url: " /routine/wrap" }
                  ,
{ category: "Routine", value: "write",
                    url: " /routine/write" }
                  ,
{ category: "Method", value: "write-bits",
                    url: " /routine/write-bits" }
                  ,
{ category: "Method", value: "write-int128",
                    url: " /routine/write-int128" }
                  ,
{ category: "Method", value: "write-int16",
                    url: " /routine/write-int16" }
                  ,
{ category: "Method", value: "write-int32",
                    url: " /routine/write-int32" }
                  ,
{ category: "Method", value: "write-int64",
                    url: " /routine/write-int64" }
                  ,
{ category: "Method", value: "write-int8",
                    url: " /routine/write-int8" }
                  ,
{ category: "Method", value: "write-num32",
                    url: " /routine/write-num32" }
                  ,
{ category: "Method", value: "write-num64",
                    url: " /routine/write-num64" }
                  ,
{ category: "Method", value: "write-to",
                    url: " /routine/write-to" }
                  ,
{ category: "Method", value: "write-ubits",
                    url: " /routine/write-ubits" }
                  ,
{ category: "Method", value: "write-uint128",
                    url: " /routine/write-uint128" }
                  ,
{ category: "Method", value: "write-uint16",
                    url: " /routine/write-uint16" }
                  ,
{ category: "Method", value: "write-uint32",
                    url: " /routine/write-uint32" }
                  ,
{ category: "Method", value: "write-uint64",
                    url: " /routine/write-uint64" }
                  ,
{ category: "Method", value: "write-uint8",
                    url: " /routine/write-uint8" }
                  ,
{ category: "Routine", value: "x",
                    url: " /routine/x" }
                  ,
{ category: "Infix", value: "xor",
                    url: " /routine/xor" }
                  ,
{ category: "Infix", value: "xx",
                    url: " /routine/xx" }
                  ,
{ category: "Method", value: "yada",
                    url: " /routine/yada" }
                  ,
{ category: "Method", value: "year",
                    url: " /routine/year" }
                  ,
{ category: "Method", value: "yield",
                    url: " /routine/yield" }
                  ,
{ category: "Method", value: "yyyy-mm-dd",
                    url: " /routine/yyyy-mm-dd" }
                  ,
{ category: "Method", value: "z",
                    url: " /routine/z" }
                  ,
{ category: "Routine", value: "zip",
                    url: " /routine/zip" }
                  ,
{ category: "Method", value: "zip-latest",
                    url: " /routine/zip-latest" }
                  ,
{ category: "Routine", value: "{ }",
                    url: " /routine/{ }" }
                  ,
{ category: "Routine", value: "|",
                    url: " /routine/|" }
                  ,
{ category: "Infix", value: "||",
                    url: " /routine/||" }
                  ,
{ category: "Routine", value: "~",
                    url: " /routine/~" }
                  ,
{ category: "Infix", value: "~&",
                    url: " /routine/~&" }
                  ,
{ category: "Infix", value: "~<",
                    url: " /routine/~<" }
                  ,
{ category: "Infix", value: "~>",
                    url: " /routine/~>" }
                  ,
{ category: "Routine", value: "~^",
                    url: " /routine/~$CIRCUMFLEX_ACCENT" }
                  ,
{ category: "Infix", value: "~|",
                    url: " /routine/~|" }
                  ,
{ category: "Infix", value: "~~",
                    url: " /routine/~~" }
                  ,
{ category: "Postcircumfix", value: "¬´ ¬ª",
                    url: " /routine/¬´ ¬ª" }
                  ,
{ category: "Term", value: "œÄ",
                    url: " /routine/œÄ" }
                  ,
{ category: "Term", value: "œÑ",
                    url: " /routine/œÑ" }
                  ,
{ category: "Routine", value: "‚àÖ",
                    url: " /routine/‚àÖ" }
                  ,
{ category: "Routine", value: "‚àâ",
                    url: " /routine/‚àâ" }
                  ,
{ category: "Routine", value: "‚àå",
                    url: " /routine/‚àå" }
                  ,
{ category: "Infix", value: "‚àò",
                    url: " /routine/‚àò" }
                  ,
{ category: "Infix", value: "‚â†",
                    url: " /routine/‚â†" }
                  ,
{ category: "Infix", value: "‚â§",
                    url: " /routine/‚â§" }
                  ,
{ category: "Infix", value: "‚â•",
                    url: " /routine/‚â•" }
                  ,
{ category: "Routine", value: "‚äÑ",
                    url: " /routine/‚äÑ" }
                  ,
{ category: "Routine", value: "‚äÖ",
                    url: " /routine/‚äÖ" }
                  ,
{ category: "Routine", value: "‚äà",
                    url: " /routine/‚äà" }
                  ,
{ category: "Routine", value: "‚äâ",
                    url: " /routine/‚äâ" }
                  ,
{ category: "Routine", value: "‚öõ",
                    url: " /routine/‚öõ" }
                  ,
{ category: "Postfix", value: "‚öõ++",
                    url: " /routine/‚öõ++" }
                  ,
{ category: "Infix", value: "‚öõ+=",
                    url: " /routine/‚öõ+=" }
                  ,
{ category: "Postfix", value: "‚öõ--",
                    url: " /routine/‚öõ--" }
                  ,
{ category: "Infix", value: "‚öõ-=",
                    url: " /routine/‚öõ-=" }
                  ,
{ category: "Routine", value: "‚öõ=",
                    url: " /routine/‚öõ=" }
                  ,
{ category: "Infix", value: "‚öõ‚àí=",
                    url: " /routine/‚öõ‚àí=" }
                  ,
{ category: "Term", value: "ùëí",
                    url: " /routine/ùëí" }
                  ,
{ category: "Class", value: "AST",
                    url: " /type/AST" }
                  ,
{ category: "Class", value: "Any",
                    url: " /type/Any" }
                  ,
{ category: "Class", value: "Array",
                    url: " /type/Array" }
                  ,
{ category: "Role", value: "Associative",
                    url: " /type/Associative" }
                  ,
{ category: "Class", value: "Attribute",
                    url: " /type/Attribute" }
                  ,
{ category: "Class", value: "Backtrace",
                    url: " /type/Backtrace" }
                  ,
{ category: "Class", value: "Backtrace::Frame",
                    url: " /type/Backtrace::Frame" }
                  ,
{ category: "Class", value: "Bag",
                    url: " /type/Bag" }
                  ,
{ category: "Class", value: "BagHash",
                    url: " /type/BagHash" }
                  ,
{ category: "Role", value: "Baggy",
                    url: " /type/Baggy" }
                  ,
{ category: "Role", value: "Blob",
                    url: " /type/Blob" }
                  ,
{ category: "Class", value: "Block",
                    url: " /type/Block" }
                  ,
{ category: "Enum", value: "Bool",
                    url: " /type/Bool" }
                  ,
{ category: "Role", value: "Buf",
                    url: " /type/Buf" }
                  ,
{ category: "Class", value: "CallFrame",
                    url: " /type/CallFrame" }
                  ,
{ category: "Role", value: "Callable",
                    url: " /type/Callable" }
                  ,
{ category: "Class", value: "Cancellation",
                    url: " /type/Cancellation" }
                  ,
{ category: "Class", value: "Capture",
                    url: " /type/Capture" }
                  ,
{ category: "Class", value: "Channel",
                    url: " /type/Channel" }
                  ,
{ category: "Class", value: "Code",
                    url: " /type/Code" }
                  ,
{ category: "Class", value: "Collation",
                    url: " /type/Collation" }
                  ,
{ category: "Class", value: "CompUnit",
                    url: " /type/CompUnit" }
                  ,
{ category: "Role", value: "CompUnit::Repository",
                    url: " /type/CompUnit::Repository" }
                  ,
{ category: "Class", value: "CompUnit::Repository::FileSystem",
                    url: " /type/CompUnit::Repository::FileSystem" }
                  ,
{ category: "Class", value: "CompUnit::Repository::Installation",
                    url: " /type/CompUnit::Repository::Installation" }
                  ,
{ category: "Class", value: "Complex",
                    url: " /type/Complex" }
                  ,
{ category: "Class", value: "ComplexStr",
                    url: " /type/ComplexStr" }
                  ,
{ category: "Class", value: "Cool",
                    url: " /type/Cool" }
                  ,
{ category: "Class", value: "CurrentThreadScheduler",
                    url: " /type/CurrentThreadScheduler" }
                  ,
{ category: "Class", value: "Cursor",
                    url: " /type/Cursor" }
                  ,
{ category: "Class", value: "Date",
                    url: " /type/Date" }
                  ,
{ category: "Class", value: "DateTime",
                    url: " /type/DateTime" }
                  ,
{ category: "Role", value: "Dateish",
                    url: " /type/Dateish" }
                  ,
{ category: "Class", value: "Distribution",
                    url: " /type/Distribution" }
                  ,
{ category: "Class", value: "Distribution::Hash",
                    url: " /type/Distribution::Hash" }
                  ,
{ category: "Class", value: "Distribution::Locally",
                    url: " /type/Distribution::Locally" }
                  ,
{ category: "Class", value: "Distribution::Path",
                    url: " /type/Distribution::Path" }
                  ,
{ category: "Class", value: "Distro",
                    url: " /type/Distro" }
                  ,
{ category: "Class", value: "Duration",
                    url: " /type/Duration" }
                  ,
{ category: "Class", value: "Encoding",
                    url: " /type/Encoding" }
                  ,
{ category: "Class", value: "Encoding::Registry",
                    url: " /type/Encoding::Registry" }
                  ,
{ category: "Class", value: "Endian",
                    url: " /type/Endian" }
                  ,
{ category: "Role", value: "Enumeration",
                    url: " /type/Enumeration" }
                  ,
{ category: "Class", value: "Exception",
                    url: " /type/Exception" }
                  ,
{ category: "Class", value: "Failure",
                    url: " /type/Failure" }
                  ,
{ category: "Class", value: "FatRat",
                    url: " /type/FatRat" }
                  ,
{ category: "Class", value: "ForeignCode",
                    url: " /type/ForeignCode" }
                  ,
{ category: "Class", value: "Grammar",
                    url: " /type/Grammar" }
                  ,
{ category: "Class", value: "Hash",
                    url: " /type/Hash" }
                  ,
{ category: "Class", value: "HyperWhatever",
                    url: " /type/HyperWhatever" }
                  ,
{ category: "Role", value: "IO",
                    url: " /type/IO" }
                  ,
{ category: "Class", value: "IO::ArgFiles",
                    url: " /type/IO::ArgFiles" }
                  ,
{ category: "Class", value: "IO::CatHandle",
                    url: " /type/IO::CatHandle" }
                  ,
{ category: "Class", value: "IO::Handle",
                    url: " /type/IO::Handle" }
                  ,
{ category: "Class", value: "IO::Notification",
                    url: " /type/IO::Notification" }
                  ,
{ category: "Class", value: "IO::Path",
                    url: " /type/IO::Path" }
                  ,
{ category: "Class", value: "IO::Path::Cygwin",
                    url: " /type/IO::Path::Cygwin" }
                  ,
{ category: "Class", value: "IO::Path::QNX",
                    url: " /type/IO::Path::QNX" }
                  ,
{ category: "Class", value: "IO::Path::Unix",
                    url: " /type/IO::Path::Unix" }
                  ,
{ category: "Class", value: "IO::Path::Win32",
                    url: " /type/IO::Path::Win32" }
                  ,
{ category: "Class", value: "IO::Pipe",
                    url: " /type/IO::Pipe" }
                  ,
{ category: "Role", value: "IO::Socket",
                    url: " /type/IO::Socket" }
                  ,
{ category: "Class", value: "IO::Socket::Async",
                    url: " /type/IO::Socket::Async" }
                  ,
{ category: "Class", value: "IO::Socket::INET",
                    url: " /type/IO::Socket::INET" }
                  ,
{ category: "Class", value: "IO::Spec",
                    url: " /type/IO::Spec" }
                  ,
{ category: "Class", value: "IO::Spec::Cygwin",
                    url: " /type/IO::Spec::Cygwin" }
                  ,
{ category: "Class", value: "IO::Spec::QNX",
                    url: " /type/IO::Spec::QNX" }
                  ,
{ category: "Class", value: "IO::Spec::Unix",
                    url: " /type/IO::Spec::Unix" }
                  ,
{ category: "Class", value: "IO::Spec::Win32",
                    url: " /type/IO::Spec::Win32" }
                  ,
{ category: "Class", value: "IO::Special",
                    url: " /type/IO::Special" }
                  ,
{ category: "Class", value: "Instant",
                    url: " /type/Instant" }
                  ,
{ category: "Class", value: "Int",
                    url: " /type/Int" }
                  ,
{ category: "Class", value: "IntStr",
                    url: " /type/IntStr" }
                  ,
{ category: "Role", value: "Iterable",
                    url: " /type/Iterable" }
                  ,
{ category: "Role", value: "Iterator",
                    url: " /type/Iterator" }
                  ,
{ category: "Class", value: "Junction",
                    url: " /type/Junction" }
                  ,
{ category: "Class", value: "Kernel",
                    url: " /type/Kernel" }
                  ,
{ category: "Class", value: "Label",
                    url: " /type/Label" }
                  ,
{ category: "Class", value: "List",
                    url: " /type/List" }
                  ,
{ category: "Class", value: "Lock",
                    url: " /type/Lock" }
                  ,
{ category: "Class", value: "Lock::Async",
                    url: " /type/Lock::Async" }
                  ,
{ category: "Class", value: "Macro",
                    url: " /type/Macro" }
                  ,
{ category: "Class", value: "Map",
                    url: " /type/Map" }
                  ,
{ category: "Class", value: "Match",
                    url: " /type/Match" }
                  ,
{ category: "Role", value: "Metamodel::AttributeContainer",
                    url: " /type/Metamodel::AttributeContainer" }
                  ,
{ category: "Role", value: "Metamodel::C3MRO",
                    url: " /type/Metamodel::C3MRO" }
                  ,
{ category: "Class", value: "Metamodel::ClassHOW",
                    url: " /type/Metamodel::ClassHOW" }
                  ,
{ category: "Class", value: "Metamodel::ConcreteRoleHOW",
                    url: " /type/Metamodel::ConcreteRoleHOW" }
                  ,
{ category: "Class", value: "Metamodel::CurriedRoleHOW",
                    url: " /type/Metamodel::CurriedRoleHOW" }
                  ,
{ category: "Class", value: "Metamodel::EnumHOW",
                    url: " /type/Metamodel::EnumHOW" }
                  ,
{ category: "Role", value: "Metamodel::Finalization",
                    url: " /type/Metamodel::Finalization" }
                  ,
{ category: "Role", value: "Metamodel::MROBasedMethodDispatch",
                    url: " /type/Metamodel::MROBasedMethodDispatch" }
                  ,
{ category: "Role", value: "Metamodel::MethodContainer",
                    url: " /type/Metamodel::MethodContainer" }
                  ,
{ category: "Role", value: "Metamodel::MultipleInheritance",
                    url: " /type/Metamodel::MultipleInheritance" }
                  ,
{ category: "Role", value: "Metamodel::Naming",
                    url: " /type/Metamodel::Naming" }
                  ,
{ category: "Class", value: "Metamodel::PackageHOW",
                    url: " /type/Metamodel::PackageHOW" }
                  ,
{ category: "Class", value: "Metamodel::ParametricRoleGroupHOW",
                    url: " /type/Metamodel::ParametricRoleGroupHOW" }
                  ,
{ category: "Class", value: "Metamodel::ParametricRoleHOW",
                    url: " /type/Metamodel::ParametricRoleHOW" }
                  ,
{ category: "Class", value: "Metamodel::Primitives",
                    url: " /type/Metamodel::Primitives" }
                  ,
{ category: "Role", value: "Metamodel::PrivateMethodContainer",
                    url: " /type/Metamodel::PrivateMethodContainer" }
                  ,
{ category: "Role", value: "Metamodel::RoleContainer",
                    url: " /type/Metamodel::RoleContainer" }
                  ,
{ category: "Role", value: "Metamodel::RolePunning",
                    url: " /type/Metamodel::RolePunning" }
                  ,
{ category: "Role", value: "Metamodel::Trusting",
                    url: " /type/Metamodel::Trusting" }
                  ,
{ category: "Class", value: "Method",
                    url: " /type/Method" }
                  ,
{ category: "Class", value: "Mix",
                    url: " /type/Mix" }
                  ,
{ category: "Class", value: "MixHash",
                    url: " /type/MixHash" }
                  ,
{ category: "Role", value: "Mixy",
                    url: " /type/Mixy" }
                  ,
{ category: "Class", value: "Mu",
                    url: " /type/Mu" }
                  ,
{ category: "Class", value: "NFC",
                    url: " /type/NFC" }
                  ,
{ category: "Class", value: "NFD",
                    url: " /type/NFD" }
                  ,
{ category: "Class", value: "NFKC",
                    url: " /type/NFKC" }
                  ,
{ category: "Class", value: "NFKD",
                    url: " /type/NFKD" }
                  ,
{ category: "Class", value: "Nil",
                    url: " /type/Nil" }
                  ,
{ category: "Class", value: "Num",
                    url: " /type/Num" }
                  ,
{ category: "Class", value: "NumStr",
                    url: " /type/NumStr" }
                  ,
{ category: "Role", value: "Numeric",
                    url: " /type/Numeric" }
                  ,
{ category: "Class", value: "ObjAt",
                    url: " /type/ObjAt" }
                  ,
{ category: "Enum", value: "Order",
                    url: " /type/Order" }
                  ,
{ category: "Class", value: "Pair",
                    url: " /type/Pair" }
                  ,
{ category: "Class", value: "Parameter",
                    url: " /type/Parameter" }
                  ,
{ category: "Class", value: "Perl",
                    url: " /type/Perl" }
                  ,
{ category: "Class", value: "Pod::Block",
                    url: " /type/Pod::Block" }
                  ,
{ category: "Class", value: "Pod::Block::Code",
                    url: " /type/Pod::Block::Code" }
                  ,
{ category: "Class", value: "Pod::Block::Comment",
                    url: " /type/Pod::Block::Comment" }
                  ,
{ category: "Class", value: "Pod::Block::Declarator",
                    url: " /type/Pod::Block::Declarator" }
                  ,
{ category: "Class", value: "Pod::Block::Named",
                    url: " /type/Pod::Block::Named" }
                  ,
{ category: "Class", value: "Pod::Block::Para",
                    url: " /type/Pod::Block::Para" }
                  ,
{ category: "Class", value: "Pod::Block::Table",
                    url: " /type/Pod::Block::Table" }
                  ,
{ category: "Class", value: "Pod::Defn",
                    url: " /type/Pod::Defn" }
                  ,
{ category: "Class", value: "Pod::FormattingCode",
                    url: " /type/Pod::FormattingCode" }
                  ,
{ category: "Class", value: "Pod::Heading",
                    url: " /type/Pod::Heading" }
                  ,
{ category: "Class", value: "Pod::Item",
                    url: " /type/Pod::Item" }
                  ,
{ category: "Role", value: "Positional",
                    url: " /type/Positional" }
                  ,
{ category: "Role", value: "PositionalBindFailover",
                    url: " /type/PositionalBindFailover" }
                  ,
{ category: "Class", value: "PredictiveIterator",
                    url: " /type/PredictiveIterator" }
                  ,
{ category: "Class", value: "Proc",
                    url: " /type/Proc" }
                  ,
{ category: "Class", value: "Proc::Async",
                    url: " /type/Proc::Async" }
                  ,
{ category: "Class", value: "Promise",
                    url: " /type/Promise" }
                  ,
{ category: "Class", value: "Proxy",
                    url: " /type/Proxy" }
                  ,
{ category: "Class", value: "PseudoStash",
                    url: " /type/PseudoStash" }
                  ,
{ category: "Role", value: "QuantHash",
                    url: " /type/QuantHash" }
                  ,
{ category: "Class", value: "Range",
                    url: " /type/Range" }
                  ,
{ category: "Class", value: "Rat",
                    url: " /type/Rat" }
                  ,
{ category: "Class", value: "RatStr",
                    url: " /type/RatStr" }
                  ,
{ category: "Role", value: "Rational",
                    url: " /type/Rational" }
                  ,
{ category: "Role", value: "Real",
                    url: " /type/Real" }
                  ,
{ category: "Class", value: "Regex",
                    url: " /type/Regex" }
                  ,
{ category: "Class", value: "Routine",
                    url: " /type/Routine" }
                  ,
{ category: "Class", value: "Routine::WrapHandle",
                    url: " /type/Routine::WrapHandle" }
                  ,
{ category: "Class", value: "Scalar",
                    url: " /type/Scalar" }
                  ,
{ category: "Role", value: "Scheduler",
                    url: " /type/Scheduler" }
                  ,
{ category: "Class", value: "Semaphore",
                    url: " /type/Semaphore" }
                  ,
{ category: "Class", value: "Seq",
                    url: " /type/Seq" }
                  ,
{ category: "Class", value: "Set",
                    url: " /type/Set" }
                  ,
{ category: "Class", value: "SetHash",
                    url: " /type/SetHash" }
                  ,
{ category: "Role", value: "Setty",
                    url: " /type/Setty" }
                  ,
{ category: "Class", value: "Signature",
                    url: " /type/Signature" }
                  ,
{ category: "Class", value: "Slip",
                    url: " /type/Slip" }
                  ,
{ category: "Class", value: "Stash",
                    url: " /type/Stash" }
                  ,
{ category: "Class", value: "Str",
                    url: " /type/Str" }
                  ,
{ category: "Class", value: "StrDistance",
                    url: " /type/StrDistance" }
                  ,
{ category: "Role", value: "Stringy",
                    url: " /type/Stringy" }
                  ,
{ category: "Class", value: "Sub",
                    url: " /type/Sub" }
                  ,
{ category: "Class", value: "Submethod",
                    url: " /type/Submethod" }
                  ,
{ category: "Class", value: "Supplier",
                    url: " /type/Supplier" }
                  ,
{ category: "Class", value: "Supplier::Preserving",
                    url: " /type/Supplier::Preserving" }
                  ,
{ category: "Class", value: "Supply",
                    url: " /type/Supply" }
                  ,
{ category: "Class", value: "Systemic",
                    url: " /type/Systemic" }
                  ,
{ category: "Class", value: "Tap",
                    url: " /type/Tap" }
                  ,
{ category: "Class", value: "Telemetry",
                    url: " /type/Telemetry" }
                  ,
{ category: "Class", value: "Telemetry::Instrument::Thread",
                    url: " /type/Telemetry::Instrument::Thread" }
                  ,
{ category: "Class", value: "Telemetry::Instrument::Usage",
                    url: " /type/Telemetry::Instrument::Usage" }
                  ,
{ category: "Class", value: "Telemetry::Period",
                    url: " /type/Telemetry::Period" }
                  ,
{ category: "Class", value: "Telemetry::Sampler",
                    url: " /type/Telemetry::Sampler" }
                  ,
{ category: "Class", value: "Test",
                    url: " /type/Test" }
                  ,
{ category: "Class", value: "Thread",
                    url: " /type/Thread" }
                  ,
{ category: "Class", value: "ThreadPoolScheduler",
                    url: " /type/ThreadPoolScheduler" }
                  ,
{ category: "Class", value: "UInt",
                    url: " /type/UInt" }
                  ,
{ category: "Class", value: "Uni",
                    url: " /type/Uni" }
                  ,
{ category: "Class", value: "VM",
                    url: " /type/VM" }
                  ,
{ category: "Class", value: "ValueObjAt",
                    url: " /type/ValueObjAt" }
                  ,
{ category: "Class", value: "Variable",
                    url: " /type/Variable" }
                  ,
{ category: "Class", value: "Version",
                    url: " /type/Version" }
                  ,
{ category: "Class", value: "Whatever",
                    url: " /type/Whatever" }
                  ,
{ category: "Class", value: "WhateverCode",
                    url: " /type/WhateverCode" }
                  ,
{ category: "Class", value: "X::AdHoc",
                    url: " /type/X::AdHoc" }
                  ,
{ category: "Class", value: "X::Anon::Augment",
                    url: " /type/X::Anon::Augment" }
                  ,
{ category: "Class", value: "X::Anon::Multi",
                    url: " /type/X::Anon::Multi" }
                  ,
{ category: "Class", value: "X::Assignment::RO",
                    url: " /type/X::Assignment::RO" }
                  ,
{ category: "Class", value: "X::Attribute::NoPackage",
                    url: " /type/X::Attribute::NoPackage" }
                  ,
{ category: "Class", value: "X::Attribute::Package",
                    url: " /type/X::Attribute::Package" }
                  ,
{ category: "Class", value: "X::Attribute::Required",
                    url: " /type/X::Attribute::Required" }
                  ,
{ category: "Class", value: "X::Attribute::Undeclared",
                    url: " /type/X::Attribute::Undeclared" }
                  ,
{ category: "Class", value: "X::Augment::NoSuchType",
                    url: " /type/X::Augment::NoSuchType" }
                  ,
{ category: "Class", value: "X::Bind",
                    url: " /type/X::Bind" }
                  ,
{ category: "Class", value: "X::Bind::NativeType",
                    url: " /type/X::Bind::NativeType" }
                  ,
{ category: "Class", value: "X::Bind::Slice",
                    url: " /type/X::Bind::Slice" }
                  ,
{ category: "Class", value: "X::Caller::NotDynamic",
                    url: " /type/X::Caller::NotDynamic" }
                  ,
{ category: "Class", value: "X::Channel::ReceiveOnClosed",
                    url: " /type/X::Channel::ReceiveOnClosed" }
                  ,
{ category: "Class", value: "X::Channel::SendOnClosed",
                    url: " /type/X::Channel::SendOnClosed" }
                  ,
{ category: "Role", value: "X::Comp",
                    url: " /type/X::Comp" }
                  ,
{ category: "Class", value: "X::Composition::NotComposable",
                    url: " /type/X::Composition::NotComposable" }
                  ,
{ category: "Class", value: "X::Constructor::Positional",
                    url: " /type/X::Constructor::Positional" }
                  ,
{ category: "Class", value: "X::ControlFlow",
                    url: " /type/X::ControlFlow" }
                  ,
{ category: "Class", value: "X::ControlFlow::Return",
                    url: " /type/X::ControlFlow::Return" }
                  ,
{ category: "Class", value: "X::DateTime::TimezoneClash",
                    url: " /type/X::DateTime::TimezoneClash" }
                  ,
{ category: "Class", value: "X::Declaration::Scope",
                    url: " /type/X::Declaration::Scope" }
                  ,
{ category: "Class", value: "X::Declaration::Scope::Multi",
                    url: " /type/X::Declaration::Scope::Multi" }
                  ,
{ category: "Class", value: "X::Does::TypeObject",
                    url: " /type/X::Does::TypeObject" }
                  ,
{ category: "Class", value: "X::Eval::NoSuchLang",
                    url: " /type/X::Eval::NoSuchLang" }
                  ,
{ category: "Class", value: "X::Export::NameClash",
                    url: " /type/X::Export::NameClash" }
                  ,
{ category: "Role", value: "X::IO",
                    url: " /type/X::IO" }
                  ,
{ category: "Class", value: "X::IO::Chdir",
                    url: " /type/X::IO::Chdir" }
                  ,
{ category: "Class", value: "X::IO::Chmod",
                    url: " /type/X::IO::Chmod" }
                  ,
{ category: "Class", value: "X::IO::Copy",
                    url: " /type/X::IO::Copy" }
                  ,
{ category: "Class", value: "X::IO::Cwd",
                    url: " /type/X::IO::Cwd" }
                  ,
{ category: "Class", value: "X::IO::Dir",
                    url: " /type/X::IO::Dir" }
                  ,
{ category: "Class", value: "X::IO::DoesNotExist",
                    url: " /type/X::IO::DoesNotExist" }
                  ,
{ category: "Class", value: "X::IO::Link",
                    url: " /type/X::IO::Link" }
                  ,
{ category: "Class", value: "X::IO::Mkdir",
                    url: " /type/X::IO::Mkdir" }
                  ,
{ category: "Class", value: "X::IO::Move",
                    url: " /type/X::IO::Move" }
                  ,
{ category: "Class", value: "X::IO::Rename",
                    url: " /type/X::IO::Rename" }
                  ,
{ category: "Class", value: "X::IO::Rmdir",
                    url: " /type/X::IO::Rmdir" }
                  ,
{ category: "Class", value: "X::IO::Symlink",
                    url: " /type/X::IO::Symlink" }
                  ,
{ category: "Class", value: "X::IO::Unlink",
                    url: " /type/X::IO::Unlink" }
                  ,
{ category: "Class", value: "X::Inheritance::NotComposed",
                    url: " /type/X::Inheritance::NotComposed" }
                  ,
{ category: "Class", value: "X::Inheritance::Unsupported",
                    url: " /type/X::Inheritance::Unsupported" }
                  ,
{ category: "Class", value: "X::Method::InvalidQualifier",
                    url: " /type/X::Method::InvalidQualifier" }
                  ,
{ category: "Class", value: "X::Method::NotFound",
                    url: " /type/X::Method::NotFound" }
                  ,
{ category: "Class", value: "X::Method::Private::Permission",
                    url: " /type/X::Method::Private::Permission" }
                  ,
{ category: "Class", value: "X::Method::Private::Unqualified",
                    url: " /type/X::Method::Private::Unqualified" }
                  ,
{ category: "Class", value: "X::Mixin::NotComposable",
                    url: " /type/X::Mixin::NotComposable" }
                  ,
{ category: "Class", value: "X::NYI",
                    url: " /type/X::NYI" }
                  ,
{ category: "Class", value: "X::NoDispatcher",
                    url: " /type/X::NoDispatcher" }
                  ,
{ category: "Class", value: "X::Numeric::Real",
                    url: " /type/X::Numeric::Real" }
                  ,
{ category: "Role", value: "X::OS",
                    url: " /type/X::OS" }
                  ,
{ category: "Class", value: "X::Obsolete",
                    url: " /type/X::Obsolete" }
                  ,
{ category: "Class", value: "X::OutOfRange",
                    url: " /type/X::OutOfRange" }
                  ,
{ category: "Class", value: "X::Package::Stubbed",
                    url: " /type/X::Package::Stubbed" }
                  ,
{ category: "Class", value: "X::Parameter::Default",
                    url: " /type/X::Parameter::Default" }
                  ,
{ category: "Class", value: "X::Parameter::MultipleTypeConstraints",
                    url: " /type/X::Parameter::MultipleTypeConstraints" }
                  ,
{ category: "Class", value: "X::Parameter::Placeholder",
                    url: " /type/X::Parameter::Placeholder" }
                  ,
{ category: "Class", value: "X::Parameter::Twigil",
                    url: " /type/X::Parameter::Twigil" }
                  ,
{ category: "Class", value: "X::Parameter::WrongOrder",
                    url: " /type/X::Parameter::WrongOrder" }
                  ,
{ category: "Class", value: "X::Phaser::Multiple",
                    url: " /type/X::Phaser::Multiple" }
                  ,
{ category: "Class", value: "X::Phaser::PrePost",
                    url: " /type/X::Phaser::PrePost" }
                  ,
{ category: "Class", value: "X::Placeholder::Block",
                    url: " /type/X::Placeholder::Block" }
                  ,
{ category: "Class", value: "X::Placeholder::Mainline",
                    url: " /type/X::Placeholder::Mainline" }
                  ,
{ category: "Role", value: "X::Pod",
                    url: " /type/X::Pod" }
                  ,
{ category: "Role", value: "X::Proc::Async",
                    url: " /type/X::Proc::Async" }
                  ,
{ category: "Class", value: "X::Proc::Async::AlreadyStarted",
                    url: " /type/X::Proc::Async::AlreadyStarted" }
                  ,
{ category: "Class", value: "X::Proc::Async::BindOrUse",
                    url: " /type/X::Proc::Async::BindOrUse" }
                  ,
{ category: "Class", value: "X::Proc::Async::CharsOrBytes",
                    url: " /type/X::Proc::Async::CharsOrBytes" }
                  ,
{ category: "Class", value: "X::Proc::Async::MustBeStarted",
                    url: " /type/X::Proc::Async::MustBeStarted" }
                  ,
{ category: "Class", value: "X::Proc::Async::OpenForWriting",
                    url: " /type/X::Proc::Async::OpenForWriting" }
                  ,
{ category: "Class", value: "X::Proc::Async::TapBeforeSpawn",
                    url: " /type/X::Proc::Async::TapBeforeSpawn" }
                  ,
{ category: "Class", value: "X::Proc::Unsuccessful",
                    url: " /type/X::Proc::Unsuccessful" }
                  ,
{ category: "Class", value: "X::Promise::CauseOnlyValidOnBroken",
                    url: " /type/X::Promise::CauseOnlyValidOnBroken" }
                  ,
{ category: "Class", value: "X::Promise::Vowed",
                    url: " /type/X::Promise::Vowed" }
                  ,
{ category: "Class", value: "X::Redeclaration",
                    url: " /type/X::Redeclaration" }
                  ,
{ category: "Class", value: "X::Role::Initialization",
                    url: " /type/X::Role::Initialization" }
                  ,
{ category: "Class", value: "X::Scheduler::CueInNaNSeconds",
                    url: " /type/X::Scheduler::CueInNaNSeconds" }
                  ,
{ category: "Class", value: "X::Seq::Consumed",
                    url: " /type/X::Seq::Consumed" }
                  ,
{ category: "Class", value: "X::Sequence::Deduction",
                    url: " /type/X::Sequence::Deduction" }
                  ,
{ category: "Class", value: "X::Signature::NameClash",
                    url: " /type/X::Signature::NameClash" }
                  ,
{ category: "Class", value: "X::Signature::Placeholder",
                    url: " /type/X::Signature::Placeholder" }
                  ,
{ category: "Class", value: "X::Str::Numeric",
                    url: " /type/X::Str::Numeric" }
                  ,
{ category: "Class", value: "X::StubCode",
                    url: " /type/X::StubCode" }
                  ,
{ category: "Role", value: "X::Syntax",
                    url: " /type/X::Syntax" }
                  ,
{ category: "Class", value: "X::Syntax::Augment::WithoutMonkeyTyping",
                    url: " /type/X::Syntax::Augment::WithoutMonkeyTyping" }
                  ,
{ category: "Class", value: "X::Syntax::Comment::Embedded",
                    url: " /type/X::Syntax::Comment::Embedded" }
                  ,
{ category: "Class", value: "X::Syntax::Confused",
                    url: " /type/X::Syntax::Confused" }
                  ,
{ category: "Class", value: "X::Syntax::InfixInTermPosition",
                    url: " /type/X::Syntax::InfixInTermPosition" }
                  ,
{ category: "Class", value: "X::Syntax::Malformed",
                    url: " /type/X::Syntax::Malformed" }
                  ,
{ category: "Class", value: "X::Syntax::Missing",
                    url: " /type/X::Syntax::Missing" }
                  ,
{ category: "Class", value: "X::Syntax::NegatedPair",
                    url: " /type/X::Syntax::NegatedPair" }
                  ,
{ category: "Class", value: "X::Syntax::NoSelf",
                    url: " /type/X::Syntax::NoSelf" }
                  ,
{ category: "Class", value: "X::Syntax::Number::RadixOutOfRange",
                    url: " /type/X::Syntax::Number::RadixOutOfRange" }
                  ,
{ category: "Class", value: "X::Syntax::P5",
                    url: " /type/X::Syntax::P5" }
                  ,
{ category: "Class", value: "X::Syntax::Regex::Adverb",
                    url: " /type/X::Syntax::Regex::Adverb" }
                  ,
{ category: "Class", value: "X::Syntax::Regex::SolitaryQuantifier",
                    url: " /type/X::Syntax::Regex::SolitaryQuantifier" }
                  ,
{ category: "Class", value: "X::Syntax::Reserved",
                    url: " /type/X::Syntax::Reserved" }
                  ,
{ category: "Class", value: "X::Syntax::Self::WithoutObject",
                    url: " /type/X::Syntax::Self::WithoutObject" }
                  ,
{ category: "Class", value: "X::Syntax::Signature::InvocantMarker",
                    url: " /type/X::Syntax::Signature::InvocantMarker" }
                  ,
{ category: "Class", value: "X::Syntax::Term::MissingInitializer",
                    url: " /type/X::Syntax::Term::MissingInitializer" }
                  ,
{ category: "Class", value: "X::Syntax::UnlessElse",
                    url: " /type/X::Syntax::UnlessElse" }
                  ,
{ category: "Class", value: "X::Syntax::Variable::Match",
                    url: " /type/X::Syntax::Variable::Match" }
                  ,
{ category: "Class", value: "X::Syntax::Variable::Numeric",
                    url: " /type/X::Syntax::Variable::Numeric" }
                  ,
{ category: "Class", value: "X::Syntax::Variable::Twigil",
                    url: " /type/X::Syntax::Variable::Twigil" }
                  ,
{ category: "Role", value: "X::Temporal",
                    url: " /type/X::Temporal" }
                  ,
{ category: "Class", value: "X::Temporal::InvalidFormat",
                    url: " /type/X::Temporal::InvalidFormat" }
                  ,
{ category: "Class", value: "X::TypeCheck",
                    url: " /type/X::TypeCheck" }
                  ,
{ category: "Class", value: "X::TypeCheck::Assignment",
                    url: " /type/X::TypeCheck::Assignment" }
                  ,
{ category: "Class", value: "X::TypeCheck::Binding",
                    url: " /type/X::TypeCheck::Binding" }
                  ,
{ category: "Class", value: "X::TypeCheck::Return",
                    url: " /type/X::TypeCheck::Return" }
                  ,
{ category: "Class", value: "X::TypeCheck::Splice",
                    url: " /type/X::TypeCheck::Splice" }
                  ,
{ category: "Class", value: "X::Undeclared",
                    url: " /type/X::Undeclared" }
                  ,
{ category: "Class", value: "atomicint",
                    url: " /type/atomicint" }
                  ,
{ category: "Class", value: "compiler",
                    url: " /type/Compiler" }
                  ,
{ category: "Class", value: "int",
                    url: " /type/int" }
                  ,
{ category: "Class", value: "utf8",
                    url: " /type/utf8" }
                  ,
{ category: "5to6-perlfunc", value: "truncate", url: "/language/5to6-perlfunc#truncate" },
{ category: "5to6-perlfunc", value: "dbm functions", url: "/language/5to6-perlfunc#dbm_functions" },
{ category: "5to6-perlfunc", value: "sort", url: "/language/5to6-perlfunc#sort" },
{ category: "5to6-perlfunc", value: "setsockopt", url: "/language/5to6-perlfunc#setsockopt" },
{ category: "5to6-perlfunc", value: "send", url: "/language/5to6-perlfunc#send" },
{ category: "5to6-perlfunc", value: "local", url: "/language/5to6-perlfunc#local" },
{ category: "5to6-perlfunc", value: "readdir", url: "/language/5to6-perlfunc#readdir" },
{ category: "5to6-perlfunc", value: "unlink", url: "/language/5to6-perlfunc#unlink" },
{ category: "5to6-perlfunc", value: "getc", url: "/language/5to6-perlfunc#getc" },
{ category: "5to6-perlfunc", value: "stat", url: "/language/5to6-perlfunc#stat" },
{ category: "5to6-perlfunc", value: "splice", url: "/language/5to6-perlfunc#splice" },
{ category: "5to6-perlfunc", value: "semctl", url: "/language/5to6-perlfunc#semctl" },
{ category: "5to6-perlfunc", value: "listen", url: "/language/5to6-perlfunc#listen" },
{ category: "5to6-perlfunc", value: "warn", url: "/language/5to6-perlfunc#warn" },
{ category: "5to6-perlfunc", value: "srand", url: "/language/5to6-perlfunc#srand" },
{ category: "5to6-perlfunc", value: "prototype", url: "/language/5to6-perlfunc#prototype" },
{ category: "5to6-perlfunc", value: "times", url: "/language/5to6-perlfunc#times" },
{ category: "5to6-perlfunc", value: "formats", url: "/language/5to6-perlfunc#formats" },
{ category: "5to6-perlfunc", value: "opendir", url: "/language/5to6-perlfunc#opendir" },
{ category: "5to6-perlfunc", value: "grep", url: "/language/5to6-perlfunc#grep" },
{ category: "5to6-perlfunc", value: "wantarray", url: "/language/5to6-perlfunc#wantarray" },
{ category: "5to6-perlfunc", value: "defined", url: "/language/5to6-perlfunc#defined" },
{ category: "5to6-perlfunc", value: "atan2", url: "/language/5to6-perlfunc#atan2" },
{ category: "5to6-perlfunc", value: "m//", url: "/language/5to6-perlfunc#m//" },
{ category: "5to6-perlfunc", value: "printf", url: "/language/5to6-perlfunc#printf" },
{ category: "5to6-perlfunc", value: "shm*", url: "/language/5to6-perlfunc#shm*" },
{ category: "5to6-perlfunc", value: "length", url: "/language/5to6-perlfunc#length" },
{ category: "5to6-perlfunc", value: "goto", url: "/language/5to6-perlfunc#goto" },
{ category: "5to6-perlfunc", value: "chroot", url: "/language/5to6-perlfunc#chroot" },
{ category: "5to6-perlfunc", value: "exit", url: "/language/5to6-perlfunc#exit" },
{ category: "5to6-perlfunc", value: "system", url: "/language/5to6-perlfunc#system" },
{ category: "5to6-perlfunc", value: "hex", url: "/language/5to6-perlfunc#hex" },
{ category: "5to6-perlfunc", value: "__LINE__", url: "/language/5to6-perlfunc#__LINE__" },
{ category: "5to6-perlfunc", value: "localtime", url: "/language/5to6-perlfunc#localtime" },
{ category: "5to6-perlfunc", value: "next", url: "/language/5to6-perlfunc#next" },
{ category: "5to6-perlfunc", value: "return", url: "/language/5to6-perlfunc#return" },
{ category: "5to6-perlfunc", value: "unpack", url: "/language/5to6-perlfunc#unpack" },
{ category: "5to6-perlfunc", value: "eval", url: "/language/5to6-perlfunc#eval" },
{ category: "5to6-perlfunc", value: "sub", url: "/language/5to6-perlfunc#sub" },
{ category: "5to6-perlfunc", value: "shift", url: "/language/5to6-perlfunc#shift" },
{ category: "5to6-perlfunc", value: "each", url: "/language/5to6-perlfunc#each" },
{ category: "5to6-perlfunc", value: "setpgrp", url: "/language/5to6-perlfunc#setpgrp" },
{ category: "5to6-perlfunc", value: "chmod", url: "/language/5to6-perlfunc#chmod" },
{ category: "5to6-perlfunc", value: "getpriority", url: "/language/5to6-perlfunc#getpriority" },
{ category: "5to6-perlfunc", value: "reset", url: "/language/5to6-perlfunc#reset" },
{ category: "5to6-perlfunc", value: "scalar", url: "/language/5to6-perlfunc#scalar" },
{ category: "5to6-perlfunc", value: "use", url: "/language/5to6-perlfunc#use" },
{ category: "5to6-perlfunc", value: "continue", url: "/language/5to6-perlfunc#continue" },
{ category: "5to6-perlfunc", value: "msg*", url: "/language/5to6-perlfunc#msg*" },
{ category: "5to6-perlfunc", value: "recv", url: "/language/5to6-perlfunc#recv" },
{ category: "5to6-perlfunc", value: "ref", url: "/language/5to6-perlfunc#ref" },
{ category: "5to6-perlfunc", value: "reverse", url: "/language/5to6-perlfunc#reverse" },
{ category: "5to6-perlfunc", value: "split", url: "/language/5to6-perlfunc#split" },
{ category: "5to6-perlfunc", value: "unshift", url: "/language/5to6-perlfunc#unshift" },
{ category: "5to6-perlfunc", value: "seek", url: "/language/5to6-perlfunc#seek" },
{ category: "5to6-perlfunc", value: "semget", url: "/language/5to6-perlfunc#semget" },
{ category: "5to6-perlfunc", value: "cos", url: "/language/5to6-perlfunc#cos" },
{ category: "5to6-perlfunc", value: "evalbytes", url: "/language/5to6-perlfunc#evalbytes" },
{ category: "5to6-perlfunc", value: "package", url: "/language/5to6-perlfunc#package" },
{ category: "5to6-perlfunc", value: "pack", url: "/language/5to6-perlfunc#pack" },
{ category: "5to6-perlfunc", value: "fc", url: "/language/5to6-perlfunc#fc" },
{ category: "5to6-perlfunc", value: "telldir", url: "/language/5to6-perlfunc#telldir" },
{ category: "5to6-perlfunc", value: "exec", url: "/language/5to6-perlfunc#exec" },
{ category: "5to6-perlfunc", value: "chr", url: "/language/5to6-perlfunc#chr" },
{ category: "5to6-perlfunc", value: "int", url: "/language/5to6-perlfunc#int" },
{ category: "5to6-perlfunc", value: "accept", url: "/language/5to6-perlfunc#accept" },
{ category: "5to6-perlfunc", value: "quoting", url: "/language/5to6-perlfunc#quoting" },
{ category: "5to6-perlfunc", value: "chdir", url: "/language/5to6-perlfunc#chdir" },
{ category: "5to6-perlfunc", value: "write", url: "/language/5to6-perlfunc#write" },
{ category: "5to6-perlfunc", value: "vec", url: "/language/5to6-perlfunc#vec" },
{ category: "5to6-perlfunc", value: "substr", url: "/language/5to6-perlfunc#substr" },
{ category: "5to6-perlfunc", value: "sprintf", url: "/language/5to6-perlfunc#sprintf" },
{ category: "5to6-perlfunc", value: "abs", url: "/language/5to6-perlfunc#abs" },
{ category: "5to6-perlfunc", value: "bless", url: "/language/5to6-perlfunc#bless" },
{ category: "5to6-perlfunc", value: "keys", url: "/language/5to6-perlfunc#keys" },
{ category: "5to6-perlfunc", value: "ord", url: "/language/5to6-perlfunc#ord" },
{ category: "5to6-perlfunc", value: "lstat", url: "/language/5to6-perlfunc#lstat" },
{ category: "5to6-perlfunc", value: "read", url: "/language/5to6-perlfunc#read" },
{ category: "5to6-perlfunc", value: "__SUB__", url: "/language/5to6-perlfunc#__SUB__" },
{ category: "5to6-perlfunc", value: "values", url: "/language/5to6-perlfunc#values" },
{ category: "5to6-perlfunc", value: "getppid", url: "/language/5to6-perlfunc#getppid" },
{ category: "5to6-perlfunc", value: "seekdir", url: "/language/5to6-perlfunc#seekdir" },
{ category: "5to6-perlfunc", value: "import", url: "/language/5to6-perlfunc#import" },
{ category: "5to6-perlfunc", value: "index", url: "/language/5to6-perlfunc#index" },
{ category: "5to6-perlfunc", value: "join", url: "/language/5to6-perlfunc#join" },
{ category: "5to6-perlfunc", value: "my", url: "/language/5to6-perlfunc#my" },
{ category: "5to6-perlfunc", value: "open", url: "/language/5to6-perlfunc#open" },
{ category: "5to6-perlfunc", value: "pos", url: "/language/5to6-perlfunc#pos" },
{ category: "5to6-perlfunc", value: "rand", url: "/language/5to6-perlfunc#rand" },
{ category: "5to6-perlfunc", value: "untie", url: "/language/5to6-perlfunc#untie" },
{ category: "5to6-perlfunc", value: "oct", url: "/language/5to6-perlfunc#oct" },
{ category: "5to6-perlfunc", value: "study", url: "/language/5to6-perlfunc#study" },
{ category: "5to6-perlfunc", value: "sin", url: "/language/5to6-perlfunc#sin" },
{ category: "5to6-perlfunc", value: "push", url: "/language/5to6-perlfunc#push" },
{ category: "5to6-perlfunc", value: "utime", url: "/language/5to6-perlfunc#utime" },
{ category: "5to6-perlfunc", value: "kill", url: "/language/5to6-perlfunc#kill" },
{ category: "5to6-perlfunc", value: "exp", url: "/language/5to6-perlfunc#exp" },
{ category: "5to6-perlfunc", value: "lock", url: "/language/5to6-perlfunc#lock" },
{ category: "5to6-perlfunc", value: "__PACKAGE__", url: "/language/5to6-perlfunc#__PACKAGE__" },
{ category: "5to6-perlfunc", value: "pop", url: "/language/5to6-perlfunc#pop" },
{ category: "5to6-perlfunc", value: "print", url: "/language/5to6-perlfunc#print" },
{ category: "5to6-perlfunc", value: "semop", url: "/language/5to6-perlfunc#semop" },
{ category: "5to6-perlfunc", value: "syswrite", url: "/language/5to6-perlfunc#syswrite" },
{ category: "5to6-perlfunc", value: "getpeername", url: "/language/5to6-perlfunc#getpeername" },
{ category: "5to6-perlfunc", value: "caller", url: "/language/5to6-perlfunc#caller" },
{ category: "5to6-perlfunc", value: "no", url: "/language/5to6-perlfunc#no" },
{ category: "5to6-perlfunc", value: "chomp", url: "/language/5to6-perlfunc#chomp" },
{ category: "5to6-perlfunc", value: "close", url: "/language/5to6-perlfunc#close" },
{ category: "5to6-perlfunc", value: "wait", url: "/language/5to6-perlfunc#wait" },
{ category: "5to6-perlfunc", value: "setpriority", url: "/language/5to6-perlfunc#setpriority" },
{ category: "5to6-perlfunc", value: "get and set functions", url: "/language/5to6-perlfunc#get_and_set_functions" },
{ category: "5to6-perlfunc", value: "rmdir", url: "/language/5to6-perlfunc#rmdir" },
{ category: "5to6-perlfunc", value: "s///", url: "/language/5to6-perlfunc#s///" },
{ category: "5to6-perlfunc", value: "getpgrp", url: "/language/5to6-perlfunc#getpgrp" },
{ category: "5to6-perlfunc", value: "undef", url: "/language/5to6-perlfunc#undef" },
{ category: "5to6-perlfunc", value: "die", url: "/language/5to6-perlfunc#die" },
{ category: "5to6-perlfunc", value: "crypt", url: "/language/5to6-perlfunc#crypt" },
{ category: "5to6-perlfunc", value: "connect", url: "/language/5to6-perlfunc#connect" },
{ category: "5to6-perlfunc", value: "lcfirst", url: "/language/5to6-perlfunc#lcfirst" },
{ category: "5to6-perlfunc", value: "__FILE__", url: "/language/5to6-perlfunc#__FILE__" },
{ category: "5to6-perlfunc", value: "tie", url: "/language/5to6-perlfunc#tie" },
{ category: "5to6-perlfunc", value: "state", url: "/language/5to6-perlfunc#state" },
{ category: "5to6-perlfunc", value: "lc", url: "/language/5to6-perlfunc#lc" },
{ category: "5to6-perlfunc", value: "bind", url: "/language/5to6-perlfunc#bind" },
{ category: "5to6-perlfunc", value: "readline", url: "/language/5to6-perlfunc#readline" },
{ category: "5to6-perlfunc", value: "waitpid", url: "/language/5to6-perlfunc#waitpid" },
{ category: "5to6-perlfunc", value: "time", url: "/language/5to6-perlfunc#time" },
{ category: "5to6-perlfunc", value: "uc", url: "/language/5to6-perlfunc#uc" },
{ category: "5to6-perlfunc", value: "break", url: "/language/5to6-perlfunc#break" },
{ category: "5to6-perlfunc", value: "our", url: "/language/5to6-perlfunc#our" },
{ category: "5to6-perlfunc", value: "readpipe", url: "/language/5to6-perlfunc#readpipe" },
{ category: "5to6-perlfunc", value: "tr///", url: "/language/5to6-perlfunc#tr///" },
{ category: "5to6-perlfunc", value: "binmode", url: "/language/5to6-perlfunc#binmode" },
{ category: "5to6-perlfunc", value: "sockets", url: "/language/5to6-perlfunc#sockets" },
{ category: "5to6-perlfunc", value: "alarm", url: "/language/5to6-perlfunc#alarm" },
{ category: "5to6-perlfunc", value: "pipe", url: "/language/5to6-perlfunc#pipe" },
{ category: "5to6-perlfunc", value: "rewinddir", url: "/language/5to6-perlfunc#rewinddir" },
{ category: "5to6-perlfunc", value: "symlink", url: "/language/5to6-perlfunc#symlink" },
{ category: "5to6-perlfunc", value: "ucfirst", url: "/language/5to6-perlfunc#ucfirst" },
{ category: "5to6-perlfunc", value: "delete", url: "/language/5to6-perlfunc#delete" },
{ category: "5to6-perlfunc", value: "say", url: "/language/5to6-perlfunc#say" },
{ category: "5to6-perlfunc", value: "fcntl", url: "/language/5to6-perlfunc#fcntl" },
{ category: "5to6-perlfunc", value: "sys*", url: "/language/5to6-perlfunc#sys*" },
{ category: "5to6-perlfunc", value: "sleep", url: "/language/5to6-perlfunc#sleep" },
{ category: "5to6-perlfunc", value: "select", url: "/language/5to6-perlfunc#select" },
{ category: "5to6-perlfunc", value: "requires", url: "/language/5to6-perlfunc#requires" },
{ category: "5to6-perlfunc", value: "rename", url: "/language/5to6-perlfunc#rename" },
{ category: "5to6-perlfunc", value: "mkdir", url: "/language/5to6-perlfunc#mkdir" },
{ category: "5to6-perlfunc", value: "last", url: "/language/5to6-perlfunc#last" },
{ category: "5to6-perlfunc", value: "readlink", url: "/language/5to6-perlfunc#readlink" },
{ category: "5to6-perlfunc", value: "tell", url: "/language/5to6-perlfunc#tell" },
{ category: "5to6-perlfunc", value: "flock", url: "/language/5to6-perlfunc#flock" },
{ category: "5to6-perlfunc", value: "syscall", url: "/language/5to6-perlfunc#syscall" },
{ category: "5to6-perlfunc", value: "do", url: "/language/5to6-perlfunc#do" },
{ category: "5to6-perlfunc", value: "glob", url: "/language/5to6-perlfunc#glob" },
{ category: "5to6-perlfunc", value: "eof", url: "/language/5to6-perlfunc#eof" },
{ category: "5to6-perlfunc", value: "ioctl", url: "/language/5to6-perlfunc#ioctl" },
{ category: "5to6-perlfunc", value: "fork", url: "/language/5to6-perlfunc#fork" },
{ category: "5to6-perlfunc", value: "chop", url: "/language/5to6-perlfunc#chop" },
{ category: "5to6-perlfunc", value: "log", url: "/language/5to6-perlfunc#log" },
{ category: "5to6-perlfunc", value: "redo", url: "/language/5to6-perlfunc#redo" },
{ category: "5to6-perlfunc", value: "gmtime", url: "/language/5to6-perlfunc#gmtime" },
{ category: "5to6-perlfunc", value: "y///", url: "/language/5to6-perlfunc#y///" },
{ category: "5to6-perlfunc", value: "shutdown", url: "/language/5to6-perlfunc#shutdown" },
{ category: "5to6-perlfunc", value: "exists", url: "/language/5to6-perlfunc#exists" },
{ category: "5to6-perlfunc", value: "fileno", url: "/language/5to6-perlfunc#fileno" },
{ category: "5to6-perlfunc", value: "map", url: "/language/5to6-perlfunc#map" },
{ category: "5to6-perlfunc", value: "sqrt", url: "/language/5to6-perlfunc#sqrt" },
{ category: "5to6-perlfunc", value: "link", url: "/language/5to6-perlfunc#link" },
{ category: "5to6-perlfunc", value: "rindex", url: "/language/5to6-perlfunc#rindex" },
{ category: "5to6-perlfunc", value: "dump", url: "/language/5to6-perlfunc#dump" },
{ category: "5to6-perlfunc", value: "closedir", url: "/language/5to6-perlfunc#closedir" },
{ category: "5to6-perlfunc", value: "getsock*", url: "/language/5to6-perlfunc#getsock*" },
{ category: "5to6-perlfunc", value: "Filetests", url: "/language/5to6-perlfunc#Filetests" } ];
          var results = $.ui.autocomplete.filter(items, request.term);
          function trim_results(results, term) {
              var cutoff = 50;
              if (results.length < cutoff) {
                  return results;
              }
              // Prefer exact matches, then starting matches.
              var exacts = [];
              var prefixes = [];
              var rest = [];
              for (var ii = 0; ii <results.length; ii++) {
                  if (results[ii].value.toLowerCase() == term.toLowerCase()) {
                      exacts.push(ii);
                  } else if (results[ii].value.toLowerCase().startsWith(term.toLowerCase())) {
                  prefixes.push(ii);
                  } else {
                      rest.push(ii);
                  }
              }
              var keeps = [];
              var pos = 0;
              while (keeps.length <= cutoff && pos < exacts.length) {
                  keeps.push(exacts[pos++]);
              }
              pos = 0;
              while (keeps.length <= cutoff && pos < prefixes.length) {
                  keeps.push(prefixes[pos++]);
              }
              pos = 0;
              while (keeps.length <= cutoff && pos < rest.length) {
                  keeps.push(rest[pos++]);
              }
              var filtered = [];
              for (pos = 0; pos < results.length; pos++) {
                  if (keeps.indexOf(pos) != -1) {
                      filtered.push(results[pos]);
                  }
              }
              return filtered;
          };
          response(trim_results(results, request.term));
      },
      select: function (event, ui) { window.location.href = ui.item.url; },
      autoFocus: true
  });
});

/*
 * allow for inexact searching via sift4
 * try to restrict usage, and always check the standard
 * search mechanism if sift4 doesn't match
 */
$.extend( $.ui.autocomplete, {
    escapeRegex: function( value ) {
        return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" );
    },
    filter: function( array, term ) {
        current_search = term.toLowerCase();

        var search_method = false;
        if (term.match(/^\s*\.[a-zA-Z][a-zA-Z0-9_-]+\s*$/)) {
            search_method = true;
            term = term.substr(1);
        }

        var len = term.length;
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex( term ), "i" );
        var OK_distance = len > 9 ? 4 : len > 6 ? 3 : len > 4 ? 2 : 1;
        return $.grep( array, function( value ) {
            if (search_method && value.category != 'Method') {
                return false;
            }
            if (len >=2 ) {
                var result = sift4( value.value, term, 4, 0);
                if (result <=OK_distance) {
                    return true;
                }
            }

            // Try the old school match
            return matcher.test( value.label || value.value || value );
        } );
    }
} );

function siteSearchUrl( keywords ) {
    return 'https://www.google.com/search?q=site%3Adocs.perl6.org+' + encodeURIComponent( keywords );
}

/*
 * Courtesy https://siderite.blogspot.com/2014/11/super-fast-and-accurate-string-distance.html
 */

// Sift4 - common version
// online algorithm to compute the distance between two strings in O(n)
// maxOffset is the number of characters to search for matching letters
// maxDistance is the distance at which the algorithm should stop computing the value and just exit (the strings are too different anyway)
function sift4(s1, s2, maxOffset, maxDistance) {
    if (!s1||!s1.length) {
        if (!s2) {
            return 0;
        }
        return s2.length;
    }

    if (!s2||!s2.length) {
        return s1.length;
    }

    var l1=s1.length;
    var l2=s2.length;

    var c1 = 0;  //cursor for string 1
    var c2 = 0;  //cursor for string 2
    var lcss = 0;  //largest common subsequence
    var local_cs = 0; //local common substring
    var trans = 0;  //number of transpositions ('ab' vs 'ba')
    var offset_arr=[];  //offset pair array, for computing the transpositions

    while ((c1 < l1) && (c2 < l2)) {
        if (s1.charAt(c1) == s2.charAt(c2)) {
            local_cs++;
            var isTrans=false;
            //see if current match is a transposition
            var i=0;
            while (i<offset_arr.length) {
                var ofs=offset_arr[i];
                if (c1<=ofs.c1 || c2 <= ofs.c2) {
                    // when two matches cross, the one considered a transposition is the one with the largest difference in offsets
                    isTrans=Math.abs(c2-c1)>=Math.abs(ofs.c2-ofs.c1);
                    if (isTrans)
                    {
                        trans++;
                    } else
                    {
                        if (!ofs.trans) {
                            ofs.trans=true;
                            trans++;
                        }
                    }
                    break;
                } else {
                    if (c1>ofs.c2 && c2>ofs.c1) {
                        offset_arr.splice(i,1);
                    } else {
                        i++;
                    }
                }
            }
            offset_arr.push({
                c1:c1,
                c2:c2,
                trans:isTrans
            });
        } else {
            lcss+=local_cs;
            local_cs=0;
            if (c1!=c2) {
                c1=c2=Math.min(c1,c2);  //using min allows the computation of transpositions
            }
            //if matching characters are found, remove 1 from both cursors (they get incremented at the end of the loop)
            //so that we can have only one code block handling matches
            for (var i = 0; i < maxOffset && (c1+i<l1 || c2+i<l2); i++) {
                if ((c1 + i < l1) && (s1.charAt(c1 + i) == s2.charAt(c2))) {
                    c1+= i-1;
                    c2--;
                    break;
                }
                if ((c2 + i < l2) && (s1.charAt(c1) == s2.charAt(c2 + i))) {
                    c1--;
                    c2+= i-1;
                    break;
                }
            }
        }
        c1++;
        c2++;
        if (maxDistance)
        {
            var temporaryDistance=Math.max(c1,c2)-lcss+trans;
            if (temporaryDistance>=maxDistance) return Math.round(temporaryDistance);
        }
        // this covers the case where the last match is on the last token in list, so that it can compute transpositions correctly
        if ((c1 >= l1) || (c2 >= l2)) {
            lcss+=local_cs;
            local_cs=0;
            c1=c2=Math.min(c1,c2);
        }
    }
    lcss+=local_cs;
    return Math.round(Math.max(l1,l2)- lcss +trans); //add the cost of transpositions to the final result
}
